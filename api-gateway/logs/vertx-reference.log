2025-06-04 00:02:05.640 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:02:05.655 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:02:05.667 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:02:05.667 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:02:05.688 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:02:05.688 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:02:05.689 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:02:05.691 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:02:05.691 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:02:05.691 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:02:05.691 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:02:05.691 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:02:05.691 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:02:05.692 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:02:05.692 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:02:05.906 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:02:05 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-04 00:02:05.995 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:02:05.995 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:02:05.996 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:02:05.996 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:02:05.996 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:02:05.996 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:02:05.996 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:02:05.996 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:02:05.996 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:02:05.996 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:02:05.996 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:02:05.996 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:02:05.997 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:02:05.997 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:02:05.997 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:02:06.009 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:02:06 GMT] "OPTIONS /api/service-one/test-id HTTP/1.1" 204 0 "-" "-"
2025-06-04 00:02:06.010 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:02:06.048 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:02:06.048 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:02:06.048 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:02:06.048 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:02:06.048 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:02:06.048 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:02:06.048 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:02:06.048 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:02:06.049 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:02:06.049 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:02:06.049 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:02:06.049 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:02:06.049 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:02:06.049 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:02:06.049 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:02:06.054 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:02:06 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 00:02:06.090 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:02:06.090 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:02:06.090 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:02:06.090 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:02:06.090 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:02:06.090 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:02:06.090 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:02:06.090 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:02:06.090 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:02:06.090 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:02:06.091 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:02:06.091 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:02:06.091 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:02:06.091 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:02:06.091 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:02:06.095 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 00:02:06.095 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:02:06 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 00:02:06.129 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:02:06.129 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:02:06.129 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:02:06.129 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:02:06.130 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:02:06.130 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:02:06.130 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:02:06.130 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:02:06.130 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:02:06.130 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:02:06.130 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:02:06.130 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:02:06.130 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:02:06.130 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:02:06.130 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:02:06.135 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:02:06 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-04 00:02:06.169 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:02:06.169 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:02:06.169 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:02:06.169 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:02:06.169 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:02:06.169 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:02:06.169 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:02:06.169 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:02:06.169 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:02:06.170 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:02:06.170 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:02:06.170 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:02:06.170 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:02:06.170 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:02:06.170 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:02:06.174 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-04 00:02:06.174 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:02:06 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-04 00:02:10.808 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:10.810 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:10.811 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:10.811 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:10.878 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.010 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:02:11.010 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/any-role
2025-06-04 00:02:11.125 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.126 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.126 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:11.126 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:11.127 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.130 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:02:11.130 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - No authenticated user found for request: /api/admin
2025-06-04 00:02:11.166 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.166 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.166 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:11.166 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:11.168 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.171 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:02:11.171 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 00:02:11.205 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.205 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.205 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:11.205 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:11.206 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.207 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [manager, admin, user], requireAllRoles: true
2025-06-04 00:02:11.208 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.240 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.240 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.240 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:11.240 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:11.242 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.244 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:02:11.244 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:02:11.279 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.279 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.280 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:11.280 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:11.281 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.284 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 00:02:11.284 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/multi-role
2025-06-04 00:02:11.317 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.318 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.318 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:11.318 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:11.319 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.322 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:02:11.322 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 00:02:11.353 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.353 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.353 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:11.353 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:11.355 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.357 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 00:02:11.358 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/multi-role
2025-06-04 00:02:11.389 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.390 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.390 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:11.390 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:11.391 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.426 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.426 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.426 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:11.426 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:11.427 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.430 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:02:11.430 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/user
2025-06-04 00:02:11.459 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.459 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.459 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:02:11.459 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:02:11.461 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:02:11.463 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:02:11.463 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/admin
2025-06-04 00:02:11.495 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.495 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:02:11.509 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.510 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.510 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.512 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:02:11.520 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:02:11.520 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:02:11.551 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.551 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:02:11.551 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.551 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.551 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.552 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:02:11.586 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.586 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:02:11.587 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.587 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.587 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.588 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:02:11.621 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.621 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:02:11.621 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.621 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.621 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.622 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:02:11.625 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:02:11.658 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.658 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:02:11.658 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.658 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.658 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.659 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:02:11.662 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:02:11.662 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User regular-user has required role(s) for request: /api/user
2025-06-04 00:02:11.692 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.692 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:02:11.692 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.692 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.692 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:02:11.694 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:02:11.697 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:02:11.697 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User admin-user has required role(s) for request: /api/admin
2025-06-04 00:02:11.728 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.728 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 00:02:11.729 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.729 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.759 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.759 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 00:02:11.759 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.759 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.786 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:02:11.787 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:02:11.787 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:02:11.817 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:02:11.818 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:02:11.818 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:02:11.844 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:02:11.844 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:02:11.844 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:02:11.874 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.874 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: legacy-test-key
2025-06-04 00:02:11.874 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.874 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.902 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.902 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 00:02:11.902 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.902 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.930 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:02:11.930 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 00:02:11.930 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:02:11.930 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:02:11.959 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:02:11.961 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:02:11.961 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 00:02:11.991 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:02:11.992 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:02:12.021 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:02:12.023 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:02:12.054 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:02:12.055 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:02:12.056 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 00:02:12.058 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 00:02:12.087 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:02:12.089 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:02:12.091 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 00:02:12.091 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:03:15.536 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:15.537 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:15.587 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:15.597 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:15.598 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:15.645 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:15.807 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:03:15.807 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:03:15.892 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:15.892 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:15.893 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:15.893 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:15.893 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:15.894 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:15.945 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:15.946 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:15.946 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:15.946 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:15.946 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:15.947 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:15.988 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:15.988 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:15.988 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:15.988 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:15.988 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:15.990 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:15.992 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:03:16.033 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:16.033 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:16.033 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:16.033 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:16.033 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:16.035 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:16.039 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:03:16.039 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User regular-user has required role(s) for request: /api/user
2025-06-04 00:03:16.076 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:16.076 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:16.076 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:16.076 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:16.076 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:16.077 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:16.082 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:03:16.083 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User admin-user has required role(s) for request: /api/admin
2025-06-04 00:03:52.098 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:52.100 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:52.153 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:52.164 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:52.164 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:52.218 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:52.385 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:03:52.385 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:03:52.462 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:52.469 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:52.469 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:52.469 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:52.469 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:52.471 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:52.513 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:52.514 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:52.514 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:52.514 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:52.514 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:52.515 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:52.558 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:52.558 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:52.558 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:52.558 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:52.558 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:52.560 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:52.563 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:03:52.601 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:52.601 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:52.602 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:52.602 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:52.602 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:52.604 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:52.607 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:03:52.607 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User regular-user has required role(s) for request: /api/user
2025-06-04 00:03:52.651 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:03:52.651 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:03:52.651 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:03:52.651 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:03:52.651 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:03:52.653 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:03:52.656 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:03:52.656 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User admin-user has required role(s) for request: /api/admin
2025-06-04 00:04:02.887 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:04:02.955 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:04:02.959 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 00:04:03.072 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:04:03.074 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:04:03.113 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:04:03.115 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:04:03.282 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:04:03.284 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:04:03.284 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 00:04:03.287 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 00:04:03.327 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:04:03.328 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:04:03.331 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 00:04:03.332 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:04:05.616 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:05.619 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:05.619 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:05.620 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:05.691 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:05.833 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:04:05.833 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/any-role
2025-06-04 00:04:05.947 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:05.947 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:05.947 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:05.947 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:05.954 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:05.958 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:04:05.958 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - No authenticated user found for request: /api/admin
2025-06-04 00:04:05.998 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:05.999 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:05.999 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:05.999 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:06.000 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:06.003 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:04:06.004 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 00:04:06.055 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:06.055 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:06.055 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:06.055 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:06.056 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:06.057 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [manager, admin, user], requireAllRoles: true
2025-06-04 00:04:06.058 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:06.098 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:06.098 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:06.098 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:06.099 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:06.100 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:06.103 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:04:06.103 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:04:06.140 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:06.141 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:06.141 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:06.141 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:06.142 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:06.146 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 00:04:06.146 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/multi-role
2025-06-04 00:04:06.180 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:06.180 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:06.180 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:06.180 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:06.181 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:06.184 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:04:06.184 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 00:04:06.220 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:06.221 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:06.221 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:06.221 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:06.222 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:06.226 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 00:04:06.226 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/multi-role
2025-06-04 00:04:06.265 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:06.266 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:06.266 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:06.266 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:06.267 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:06.313 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:06.314 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:06.314 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:06.314 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:06.315 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:06.319 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:04:06.319 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/user
2025-06-04 00:04:06.350 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:06.350 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:06.350 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:04:06.350 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:04:06.351 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:04:06.354 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:04:06.354 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/admin
2025-06-04 00:04:07.600 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:07.602 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 00:04:07.655 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:07.658 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:07.768 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:07.768 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 00:04:07.768 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:07.768 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:07.822 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:04:07.823 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:04:07.823 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:04:07.858 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:04:07.858 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:04:07.858 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:04:07.890 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:04:07.890 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:04:07.890 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:04:07.925 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:07.925 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: legacy-test-key
2025-06-04 00:04:07.925 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:07.926 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:07.959 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:07.959 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 00:04:07.959 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:07.959 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:08.003 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:08.003 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 00:04:08.004 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:08.004 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:09.704 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:09.705 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:04:09.754 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:09.765 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:09.765 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:09.813 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:04:09.987 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:04:09.988 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:04:10.068 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:10.068 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:04:10.068 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:10.068 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:10.068 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:10.070 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:04:10.110 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:10.110 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:04:10.110 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:10.110 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:10.110 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:10.112 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:04:10.151 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:10.151 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:04:10.151 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:10.151 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:10.151 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:10.152 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:04:10.155 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:04:10.194 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:10.195 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:04:10.195 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:10.195 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:10.195 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:10.196 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:04:10.200 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:04:10.200 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User regular-user has required role(s) for request: /api/user
2025-06-04 00:04:10.240 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:04:10.240 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:04:10.240 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:04:10.240 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:04:10.240 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:04:10.241 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:04:10.244 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:04:10.245 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User admin-user has required role(s) for request: /api/admin
2025-06-04 00:07:52.176 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:52.178 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:52.180 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:52.181 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 00:07:52.182 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 00:07:52.182 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:52.183 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:52.183 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:52.201 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:52.201 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 00:07:52.202 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.202 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 00:07:52.203 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:07:52.204 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-04 00:07:52.204 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-04 00:07:52.204 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:07:52.204 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:52.204 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:07:52.204 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:07:52.204 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two.address
2025-06-04 00:07:52.204 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.204 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-04 00:07:52.264 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:52.264 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:52.265 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-three
2025-06-04 00:07:52.265 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-three with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:52.265 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-three (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:52.265 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-three
2025-06-04 00:07:52.265 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:52.265 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-three
2025-06-04 00:07:52.266 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-three created successfully
2025-06-04 00:07:52.272 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-three
2025-06-04 00:07:52.272 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.272 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-three
2025-06-04 00:07:52.313 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:52.313 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:52.314 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:52.314 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 00:07:52.314 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 00:07:52.314 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:52.314 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:52.314 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:52.315 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:52.315 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 00:07:52.315 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.315 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 00:07:52.350 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:52.350 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:52.350 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:52.350 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 00:07:52.350 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 00:07:52.350 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:52.350 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:52.350 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:52.351 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:52.351 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 00:07:52.351 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.351 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 00:07:52.351 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:07:52.351 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-04 00:07:52.351 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-04 00:07:52.351 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:07:52.351 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:52.351 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:07:52.352 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:07:52.352 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two.address
2025-06-04 00:07:52.352 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.352 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-04 00:07:52.410 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:52.410 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:07:52.451 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:52.493 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:07:52.617 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.logging.LoggingTest.lambda$setUp$0(LoggingTest.java:77)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:07:52.665 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:52.665 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:07:52.666 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:52.667 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:07:52.669 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 00:07:52.724 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:52.724 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:07:52.724 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:52.725 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:07:52.728 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 00:07:52.762 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:52.762 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:07:52.763 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:52.764 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:07:52.764 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:52.764 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:07:52.764 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:52.767 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.logging.LoggingTest.lambda$setUp$0(LoggingTest.java:77)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:07:52.768 [vert.x-eventloop-thread-1] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:07:52.800 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:52.800 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:07:52.801 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:52.802 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:07:52.802 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:52.802 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:07:52.802 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:52.806 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:07:52.839 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.839 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:07:52.842 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 58106
2025-06-04 00:07:52.845 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/service-one-id
2025-06-04 00:07:52.846 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/service-one-id
2025-06-04 00:07:52.847 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.impl.NoStackTraceThrowable: Service One unavailable
2025-06-04 00:07:52.847 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service One unavailable
java.lang.RuntimeException: Service unavailable: Service One unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:07:52.897 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.897 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:07:52.899 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 58108
2025-06-04 00:07:52.901 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/service-one-id
2025-06-04 00:07:52.901 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/service-one-id
2025-06-04 00:07:52.902 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"service-one-id","name":"Service One Item","description":"Service One Description"}
2025-06-04 00:07:52.932 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.932 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:07:52.934 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 58110
2025-06-04 00:07:52.939 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one
2025-06-04 00:07:52.939 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one
2025-06-04 00:07:52.939 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"new-service-one-id","name":"New Service One Item","description":"New Service One Description"}
2025-06-04 00:07:52.973 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:07:52.973 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:52.974 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:52.974 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:07:52.974 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:52.974 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:52.974 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:52.974 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:52.974 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:52.975 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:52.975 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:52.975 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:07:52.975 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.975 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:07:52.976 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:07:52.976 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:52.976 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:52.976 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:07:52.976 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:52.976 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:07:52.976 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:07:52.976 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:07:52.976 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:52.976 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:07:52.978 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:07:52.979 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:07:52.980 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:07:52.980 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:07:52.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:07:52.982 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:07:52.982 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:07:52.982 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:07:52.982 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:07:52.982 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:07:52.982 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:07:52.982 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:07:52.984 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:07:52.991 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:07:52 GMT] "GET /swagger-ui HTTP/1.1" 302 0 "-" "-"
2025-06-04 00:07:52.993 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:07:52.994 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:07:53.024 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:07:53.024 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:53.024 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:53.024 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:07:53.024 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:53.024 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.024 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.024 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:53.024 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.024 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:07:53.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:07:53.026 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:07:53.026 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:07:53.026 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:07:53.026 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:07:53.026 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:07:53.026 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:07:53.026 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:07:53.026 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:07:53.027 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:07:53.030 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 00:07:53.031 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-04 00:07:53.033 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-04 00:07:53.035 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-04 00:07:53.036 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:07:53.038 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:07:53.038 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:07:53.040 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:07:53 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-04 00:07:53.041 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:07:53.041 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.072 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:07:53.073 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:07:53.074 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:07:53.074 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:07:53.074 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:07:53.074 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:07:53.074 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:07:53.075 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:07:53.079 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:07:53 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 00:07:53.082 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:07:53.082 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:07:53.112 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:07:53.113 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:07:53.116 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:07:53 GMT] "GET /docs HTTP/1.1" 302 0 "-" "-"
2025-06-04 00:07:53.117 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:07:53.117 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:07:53.149 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:07:53.150 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:07:53.151 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:07:53.152 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:07:53.153 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:07:53.153 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:07:53.182 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:07:53.182 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:53.182 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:53.182 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:07:53.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:07:53.184 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:07:53.185 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:07:53.189 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:07:53 GMT] "GET /openapi.yaml HTTP/1.1" 200 15086 "-" "-"
2025-06-04 00:07:53.191 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:07:53.191 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:07:53.221 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:07:53.221 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:53.221 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:53.221 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:07:53.221 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:53.221 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.221 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.221 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:53.221 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.221 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:07:53.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:07:53.223 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:07:53.224 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:07:53.226 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:07:53.227 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-04 00:07:53.227 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-04 00:07:53.227 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-04 00:07:53.227 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:07:53.227 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:07:53.227 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:07:53.228 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:07:53 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-04 00:07:53.229 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:07:53.229 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:07:53.259 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:07:53.260 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:07:53.263 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 00:07:53.263 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:07:53 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 00:07:53.265 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:07:53.265 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:07:53.292 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.293 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:07:53.298 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/random
2025-06-04 00:07:53.298 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","type":"random"}
2025-06-04 00:07:53.326 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.326 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:07:53.331 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 00:07:53.331 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","id":"test-id"}
2025-06-04 00:07:53.373 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.373 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:07:53.388 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/cities
2025-06-04 00:07:53.388 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"cities"}
2025-06-04 00:07:53.419 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.419 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:07:53.423 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/forecast/london
2025-06-04 00:07:53.423 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"forecast"}
2025-06-04 00:07:53.451 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.451 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:07:53.455 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/stats
2025-06-04 00:07:53.455 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"stats"}
2025-06-04 00:07:53.484 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:07:53.484 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:07:53.487 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/custom
2025-06-04 00:07:53.487 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"custom"}
2025-06-04 00:07:53.520 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:07:53.520 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:07:53.520 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:53.520 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:07:53.520 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:07:53.520 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:07:53.522 [vert.x-eventloop-thread-0] WARN  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now OPEN - requests will fail fast
2025-06-04 00:07:53.522 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit will attempt to reset after 2000ms
2025-06-04 00:07:55.523 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now HALF-OPEN - testing if service is available
2025-06-04 00:07:55.523 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Next request will determine if circuit returns to CLOSED or OPEN state
2025-06-04 00:07:56.025 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now CLOSED - service is operating normally
2025-06-04 00:07:56.054 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:07:56.054 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:07:56.054 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:56.054 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:07:56.054 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:07:56.054 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:07:56.083 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:07:56.083 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:07:56.083 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:56.083 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:07:56.084 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:07:56.084 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:07:56.085 [vert.x-eventloop-thread-0] WARN  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now OPEN - requests will fail fast
2025-06-04 00:07:56.085 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit will attempt to reset after 2000ms
2025-06-04 00:07:56.114 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:07:56.114 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:07:56.114 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:07:56.114 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:07:56.114 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:07:56.114 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:07:56.116 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker opened
2025-06-04 00:07:58.117 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker half-opened
2025-06-04 00:07:58.618 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker closed
2025-06-04 00:07:58.648 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:58.648 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 00:07:58.648 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:58.648 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:07:58.676 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:58.676 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 00:07:58.676 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:58.676 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:07:58.703 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:07:58.704 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:07:58.704 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:07:58.730 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:07:58.730 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:07:58.730 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:07:58.759 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:07:58.759 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:07:58.759 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:07:58.789 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:58.789 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: legacy-test-key
2025-06-04 00:07:58.789 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:58.789 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:07:58.816 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:58.816 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 00:07:58.816 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:58.816 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:07:58.845 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:07:58.845 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 00:07:58.845 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:07:58.845 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:07:58.878 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 00:07:58.907 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:07:58.909 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:07:58.909 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 00:07:58.939 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:07:58.941 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:07:58.967 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:07:58.968 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:07:58.998 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:07:58.999 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:07:58.999 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 00:07:59.002 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 00:07:59.030 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:07:59.031 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:07:59.033 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 00:07:59.034 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:07:59.064 [Thread-90] INFO  d.mars.vertx.gateway.ApiGatewayMain - Starting API Gateway
2025-06-04 00:07:59.086 [Thread-90] DEBUG d.m.vertx.common.config.ConfigLoader - Starting configuration loading process
2025-06-04 00:07:59.086 [Thread-90] DEBUG d.m.vertx.common.config.ConfigLoader - Adding environment variables store
2025-06-04 00:07:59.087 [Thread-90] DEBUG d.m.vertx.common.config.ConfigLoader - Adding system properties store
2025-06-04 00:07:59.087 [Thread-90] INFO  d.m.vertx.common.config.ConfigLoader - Loading YAML configuration from: api-gateway/src/main/resources/config.yaml
2025-06-04 00:07:59.087 [Thread-90] DEBUG d.m.vertx.common.config.ConfigLoader - Added YAML file store with path: api-gateway/src/main/resources/config.yaml
2025-06-04 00:07:59.087 [Thread-90] DEBUG d.m.vertx.common.config.ConfigLoader - Creating config retriever with 3 stores
2025-06-04 00:07:59.097 [Thread-90] DEBUG d.m.vertx.common.config.ConfigLoader - Retrieving configuration
2025-06-04 00:07:59.105 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Failed to load configuration: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\main\resources\config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:231)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:357)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:399)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:2970)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:07:59.105 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Check if the file exists and is accessible: api-gateway/src/main/resources/config.yaml
2025-06-04 00:07:59.105 [vert.x-eventloop-thread-0] ERROR d.mars.vertx.gateway.ApiGatewayMain - Failed to load configuration
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\main\resources\config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:231)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:357)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:399)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:2970)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:08:00.094 [main] INFO  d.mars.vertx.gateway.ApiGatewayMain - Initializing API Gateway for testing
2025-06-04 00:08:00.094 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Starting configuration loading process
2025-06-04 00:08:00.094 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Adding environment variables store
2025-06-04 00:08:00.094 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Adding system properties store
2025-06-04 00:08:00.094 [main] INFO  d.m.vertx.common.config.ConfigLoader - Loading YAML configuration from: api-gateway/src/test/resources/test-config.yaml
2025-06-04 00:08:00.094 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Added YAML file store with path: api-gateway/src/test/resources/test-config.yaml
2025-06-04 00:08:00.094 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Creating config retriever with 3 stores
2025-06-04 00:08:00.094 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Retrieving configuration
2025-06-04 00:08:00.098 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Failed to load configuration: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\test\resources\test-config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:231)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:357)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:399)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:2970)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:08:00.099 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Check if the file exists and is accessible: api-gateway/src/test/resources/test-config.yaml
2025-06-04 00:08:00.099 [vert.x-eventloop-thread-0] ERROR d.mars.vertx.gateway.ApiGatewayMain - Failed to load test configuration
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\test\resources\test-config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:231)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:357)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:399)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:2970)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:08:02.148 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.148 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:02.148 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.148 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:02.148 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:02.148 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.148 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.148 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.149 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.149 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.149 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.149 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.149 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.149 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.149 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.153 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-04 00:08:02.181 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.181 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.182 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.182 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.182 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.187 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "OPTIONS /api/service-one/test-id HTTP/1.1" 204 0 "-" "-"
2025-06-04 00:08:02.187 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:08:02.214 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.214 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.214 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.214 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.214 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.218 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 00:08:02.246 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.246 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.246 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.246 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.250 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 00:08:02.250 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 00:08:02.278 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.278 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.278 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.278 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.278 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.282 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-04 00:08:02.311 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.311 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.311 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.311 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.311 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.315 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-04 00:08:02.315 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-04 00:08:02.346 [main] INFO  d.m.v.g.performance.PerformanceTest - Performance test setup complete. Assuming API Gateway is running on port 8888
2025-06-04 00:08:02.346 [main] INFO  d.m.v.g.performance.PerformanceTest - Starting warmup with 10 requests
2025-06-04 00:08:02.350 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Warmup complete, starting performance test with 100 concurrent requests
2025-06-04 00:08:02.378 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Performance test results:
2025-06-04 00:08:02.378 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Total requests: 100
2025-06-04 00:08:02.378 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Total time: 26 ms
2025-06-04 00:08:02.378 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Average response time: {:.2f} ms
2025-06-04 00:08:02.378 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Min response time: 0 ms
2025-06-04 00:08:02.378 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Max response time: 0 ms
2025-06-04 00:08:02.378 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Throughput: {:.2f} requests/second
2025-06-04 00:08:02.407 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.407 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 00:08:02.411 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-04 00:08:02.412 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error calling test-service service
io.vertx.core.impl.NoStackTraceThrowable: Service unavailable
2025-06-04 00:08:02.412 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:08:02.439 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.439 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 00:08:02.443 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-04 00:08:02.443 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:02.469 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.469 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 00:08:02.473 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test
2025-06-04 00:08:02.473 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.503 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.504 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.504 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:02.505 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:02.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-04 00:08:02.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-04 00:08:02.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-04 00:08:02.508 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 00:08:02.508 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 00:08:02.508 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 00:08:02.509 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 200 74 "-" "-"
2025-06-04 00:08:02.510 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:02.510 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:02.536 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:02.536 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:02.536 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:02.536 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.536 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:02.536 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.536 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.536 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:02.536 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.536 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.537 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.538 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:02.538 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:02.541 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 00:08:02.542 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:02.542 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.569 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.570 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.571 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:02.572 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:02.574 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:08:02.574 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-04 00:08:02.574 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-04 00:08:02.575 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-04 00:08:02.575 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:08:02.575 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:08:02.575 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:08:02.575 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 120 "-" "-"
2025-06-04 00:08:02.576 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:02.576 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:02.603 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:02.603 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:02.603 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:02.603 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.603 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:02.603 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.603 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.603 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:02.603 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.603 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.604 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.605 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:02.605 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:02.608 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one
2025-06-04 00:08:02.608 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"name":"New Item","description":"New Description"}
2025-06-04 00:08:02.608 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"name":"New Item","description":"New Description"}
2025-06-04 00:08:02.608 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:08:02.609 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:08:02.609 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-one service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:08:02.609 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "POST /api/service-one HTTP/1.1" 200 65 "-" "-"
2025-06-04 00:08:02.610 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:02.610 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.637 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.638 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.639 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:02.639 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:02.641 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:08:02.641 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-04 00:08:02.641 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-04 00:08:02.641 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:02.641 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:02.642 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:02.642 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 68 "-" "-"
2025-06-04 00:08:02.643 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:02.643 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:02.671 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.672 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:02.673 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:02.674 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:02.674 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:02.676 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 00:08:02.676 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:02 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 00:08:02.678 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:02.678 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:02.705 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.705 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:08:02.705 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.705 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:08:02.713 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-04 00:08:02.713 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:08:02.713 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:02.741 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.741 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:08:02.741 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:02.741 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:08:02.744 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-04 00:08:02.745 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 00:08:02.745 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:02.773 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:02.773 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:02.773 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:02.774 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:02.775 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:02.777 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:08:02.777 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/any-role
2025-06-04 00:08:02.805 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:02.805 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:02.805 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:02.805 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:02.806 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:02.809 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:08:02.809 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - No authenticated user found for request: /api/admin
2025-06-04 00:08:02.838 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:02.838 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:02.838 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:02.838 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:02.839 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:02.841 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:08:02.842 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 00:08:02.869 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:02.869 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:02.869 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:02.869 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:02.870 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:02.871 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [manager, admin, user], requireAllRoles: true
2025-06-04 00:08:02.871 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:02.900 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:02.900 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:02.900 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:02.900 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:02.901 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:02.904 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:08:02.904 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:08:02.933 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:02.933 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:02.933 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:02.933 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:02.934 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:02.936 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 00:08:02.936 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/multi-role
2025-06-04 00:08:02.967 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:02.967 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:02.967 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:02.967 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:02.968 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:02.970 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:08:02.970 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 00:08:02.997 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:02.998 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:02.998 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:02.998 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:02.999 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:03.001 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 00:08:03.001 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/multi-role
2025-06-04 00:08:03.030 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:03.030 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:03.030 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:03.030 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:03.031 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:03.061 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:03.061 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:03.061 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:03.061 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:03.062 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:03.064 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:08:03.064 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/user
2025-06-04 00:08:03.092 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:03.092 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:03.092 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:03.092 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:03.093 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:03.095 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:08:03.095 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/admin
2025-06-04 00:08:03.123 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:03.123 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:03.123 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:03.124 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:03.124 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:03.125 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:03.128 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:08:03.128 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:08:03.154 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:03.154 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:03.154 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:03.154 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:03.154 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:03.156 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:03.184 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:03.184 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:03.184 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:03.184 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:03.184 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:03.185 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:03.214 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:03.214 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:03.214 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:03.214 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:03.214 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:03.215 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:03.217 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:08:03.244 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:03.244 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:03.244 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:03.244 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:03.244 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:03.245 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:03.247 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:08:03.247 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User regular-user has required role(s) for request: /api/user
2025-06-04 00:08:03.274 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:03.274 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:03.275 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:03.275 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:03.275 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:03.276 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:03.278 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:08:03.278 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User admin-user has required role(s) for request: /api/admin
2025-06-04 00:08:03.310 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestErrorHandler - Error handling request: Test error message
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestErrorHandler.handleRequest(AbstractRequestHandlerTest.java:188)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:08:03.373 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestBadRequestHandler - Error handling request: Bad request error
java.lang.IllegalArgumentException: Bad request error
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestBadRequestHandler.handleRequest(AbstractRequestHandlerTest.java:198)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-04 00:08:37.364 [Thread-4] INFO  d.mars.vertx.gateway.ApiGatewayMain - Starting API Gateway
2025-06-04 00:08:37.420 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Starting configuration loading process
2025-06-04 00:08:37.421 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Adding environment variables store
2025-06-04 00:08:37.422 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Adding system properties store
2025-06-04 00:08:37.422 [Thread-4] INFO  d.m.vertx.common.config.ConfigLoader - Loading YAML configuration from: api-gateway/src/main/resources/config.yaml
2025-06-04 00:08:37.423 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Added YAML file store with path: api-gateway/src/main/resources/config.yaml
2025-06-04 00:08:37.423 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Creating config retriever with 3 stores
2025-06-04 00:08:37.446 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Retrieving configuration
2025-06-04 00:08:37.552 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Failed to load configuration: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\main\resources\config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:08:37.554 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Check if the file exists and is accessible: api-gateway/src/main/resources/config.yaml
2025-06-04 00:08:37.555 [vert.x-eventloop-thread-0] ERROR d.mars.vertx.gateway.ApiGatewayMain - Failed to load configuration
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\main\resources\config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:08:38.415 [main] INFO  d.mars.vertx.gateway.ApiGatewayMain - Initializing API Gateway for testing
2025-06-04 00:08:38.415 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Starting configuration loading process
2025-06-04 00:08:38.415 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Adding environment variables store
2025-06-04 00:08:38.415 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Adding system properties store
2025-06-04 00:08:38.415 [main] INFO  d.m.vertx.common.config.ConfigLoader - Loading YAML configuration from: api-gateway/src/test/resources/test-config.yaml
2025-06-04 00:08:38.415 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Added YAML file store with path: api-gateway/src/test/resources/test-config.yaml
2025-06-04 00:08:38.415 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Creating config retriever with 3 stores
2025-06-04 00:08:38.416 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Retrieving configuration
2025-06-04 00:08:38.420 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Failed to load configuration: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\test\resources\test-config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:08:38.421 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Check if the file exists and is accessible: api-gateway/src/test/resources/test-config.yaml
2025-06-04 00:08:38.421 [vert.x-eventloop-thread-0] ERROR d.mars.vertx.gateway.ApiGatewayMain - Failed to load test configuration
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\test\resources\test-config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:08:40.475 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:40.482 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:40.482 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:40.483 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:40.483 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:40.483 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:40.484 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:40.484 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:40.484 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:40.484 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:40.511 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:40.511 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:08:40.512 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:40.512 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:08:40.512 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:40.512 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:40.512 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:40.512 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:40.512 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:40.512 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:40.513 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:40.513 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:08:40.513 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:40.513 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:08:40.515 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:40.527 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:40.529 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:40.530 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:40.531 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:40.531 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:40.531 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:40.532 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:40.533 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:40.533 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:40.637 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:08:40.843 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:40 GMT] "GET /swagger-ui HTTP/1.1" 302 0 "-" "-"
2025-06-04 00:08:40.854 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:40.854 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:40.888 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:40.888 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:40.889 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:40.889 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:40.889 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:40.889 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:40.889 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:40.889 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:40.889 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:40.889 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:40.891 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:40.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:08:40.891 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:40.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:08:40.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:40.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:40.891 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:40.891 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:40.891 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:40.891 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:40.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:40.893 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:40.895 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:08:40.900 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 00:08:40.901 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-04 00:08:40.903 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-04 00:08:40.906 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-04 00:08:40.906 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:40.908 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:40.908 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:40.911 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:40 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-04 00:08:40.914 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:40.915 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:40.957 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:40.957 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:40.957 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:40.957 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:40.957 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:40.957 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:40.957 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:40.957 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:40.957 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:40.957 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:40.958 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:40.958 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:08:40.958 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:40.958 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:08:40.958 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:40.958 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:40.958 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:40.958 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:40.958 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:40.958 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:40.959 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:40.961 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:08:40.966 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:40 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 00:08:40.969 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:40.970 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:41.014 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:41.014 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:41.014 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:41.014 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:41.014 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:41.014 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.014 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.014 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:41.014 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.014 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:41.015 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:41.015 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:08:41.015 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.015 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:08:41.015 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:41.015 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:41.016 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:41.017 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:41.018 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:08:41.022 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:41 GMT] "GET /docs HTTP/1.1" 302 0 "-" "-"
2025-06-04 00:08:41.023 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:41.024 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:41.056 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:41.056 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:41.056 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:41.056 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:41.056 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:41.056 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.056 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.056 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:41.056 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.056 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:41.057 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:41.058 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:41.060 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:08:41.060 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:41.061 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:41.091 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:41.092 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:41.093 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:41.094 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:08:41.099 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:41 GMT] "GET /openapi.yaml HTTP/1.1" 200 15086 "-" "-"
2025-06-04 00:08:41.100 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:41.100 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:41.130 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:08:41.131 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:41.132 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:41.133 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:08:41.137 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:08:41.137 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-04 00:08:41.137 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-04 00:08:41.137 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-04 00:08:41.137 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:41.138 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:41.138 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:41.138 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:41 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-04 00:08:41.139 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:41.140 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:08:41.169 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:41.170 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:41.172 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:08:41.175 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 00:08:41.175 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:41 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 00:08:41.177 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:41.177 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:41.214 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestErrorHandler - Error handling request: Test error message
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestErrorHandler.handleRequest(AbstractRequestHandlerTest.java:188)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:41.287 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestBadRequestHandler - Error handling request: Bad request error
java.lang.IllegalArgumentException: Bad request error
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestBadRequestHandler.handleRequest(AbstractRequestHandlerTest.java:198)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:41.325 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 00:08:41.372 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.372 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:08:41.372 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.372 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:08:41.390 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-04 00:08:41.390 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:08:41.391 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:41.423 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.423 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:08:41.423 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.423 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:08:41.428 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-04 00:08:41.428 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 00:08:41.428 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:41.459 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.459 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:08:41.461 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 58335
2025-06-04 00:08:41.464 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/service-one-id
2025-06-04 00:08:41.464 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/service-one-id
2025-06-04 00:08:41.464 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.impl.NoStackTraceThrowable: Service One unavailable
2025-06-04 00:08:41.464 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service One unavailable
java.lang.RuntimeException: Service unavailable: Service One unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:41.495 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.495 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:08:41.496 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 58337
2025-06-04 00:08:41.499 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/service-one-id
2025-06-04 00:08:41.500 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/service-one-id
2025-06-04 00:08:41.500 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"service-one-id","name":"Service One Item","description":"Service One Description"}
2025-06-04 00:08:41.530 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.530 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:08:41.531 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 58339
2025-06-04 00:08:41.537 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one
2025-06-04 00:08:41.537 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one
2025-06-04 00:08:41.538 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"new-service-one-id","name":"New Service One Item","description":"New Service One Description"}
2025-06-04 00:08:41.568 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.568 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 00:08:41.574 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-04 00:08:41.574 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error calling test-service service
io.vertx.core.impl.NoStackTraceThrowable: Service unavailable
2025-06-04 00:08:41.574 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:41.603 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.603 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 00:08:41.608 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-04 00:08:41.608 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:41.640 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.640 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 00:08:41.645 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test
2025-06-04 00:08:41.645 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:08:41.677 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.677 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:08:41.682 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/random
2025-06-04 00:08:41.682 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","type":"random"}
2025-06-04 00:08:41.711 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.711 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:08:41.716 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 00:08:41.716 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","id":"test-id"}
2025-06-04 00:08:41.745 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.745 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:08:41.750 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/cities
2025-06-04 00:08:41.751 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"cities"}
2025-06-04 00:08:41.779 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.779 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:08:41.784 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/forecast/london
2025-06-04 00:08:41.784 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"forecast"}
2025-06-04 00:08:41.812 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.813 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:08:41.817 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/stats
2025-06-04 00:08:41.817 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"stats"}
2025-06-04 00:08:41.847 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.847 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:08:41.851 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/custom
2025-06-04 00:08:41.851 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"custom"}
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:41.889 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:41.890 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:41.892 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:41.892 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:41.895 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-04 00:08:41.895 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-04 00:08:41.895 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-04 00:08:41.896 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 00:08:41.896 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 00:08:41.896 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 00:08:41.897 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:41 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 200 74 "-" "-"
2025-06-04 00:08:41.898 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:41.898 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:41.928 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:41.929 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:41.930 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:41.930 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:41.933 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:41 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 00:08:41.934 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:41.934 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:41.962 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:41.962 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:41.962 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:41.962 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:41.962 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:41.962 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.962 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.962 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:41.962 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.962 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:41.963 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:41.964 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:41.965 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:41.965 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:41.967 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:08:41.967 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-04 00:08:41.968 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-04 00:08:41.968 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-04 00:08:41.968 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:41.968 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:41.968 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:41.969 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:41 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 120 "-" "-"
2025-06-04 00:08:41.970 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:41.970 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:42.001 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:42.002 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:42.002 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:42.002 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:42.002 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:42.002 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:42.002 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:42.002 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:42.002 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:42.002 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:42.003 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:42.003 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:42.006 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one
2025-06-04 00:08:42.006 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"name":"New Item","description":"New Description"}
2025-06-04 00:08:42.006 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"name":"New Item","description":"New Description"}
2025-06-04 00:08:42.006 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:08:42.006 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:08:42.006 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-one service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:08:42.007 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:42 GMT] "POST /api/service-one HTTP/1.1" 200 65 "-" "-"
2025-06-04 00:08:42.008 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:42.009 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:42.038 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:42.039 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:42.040 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:42.041 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:42.043 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:08:42.043 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-04 00:08:42.044 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-04 00:08:42.044 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:42.044 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:42.044 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:08:42.044 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:42 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 68 "-" "-"
2025-06-04 00:08:42.046 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:42.046 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:42.074 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:08:42.074 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:42.074 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:42.074 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:42.074 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:42.074 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:08:42.075 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:42.076 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:08:42.076 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:08:42.076 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:08:42.076 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:08:42.076 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:42.076 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:42.076 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:42.077 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:08:42.077 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:08:42.079 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 00:08:42.080 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:42 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 00:08:42.081 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:08:42.081 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:08:42.113 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:42.113 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:42.131 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:42.133 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:08:42.136 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.logging.LoggingTest.lambda$setUp$0(LoggingTest.java:77)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:42.165 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:42.165 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:42.165 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:42.166 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:08:42.169 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 00:08:42.199 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:42.199 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:42.199 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:42.200 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:08:42.203 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 00:08:42.235 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:42.235 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:42.235 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:42.236 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:08:42.237 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:42.237 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:42.237 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:42.240 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.logging.LoggingTest.lambda$setUp$0(LoggingTest.java:77)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:42.241 [vert.x-eventloop-thread-1] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:42.275 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:42.275 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:42.275 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:42.276 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:08:42.277 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:42.277 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:42.277 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:42.280 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:08:42.310 [main] INFO  d.m.v.g.performance.PerformanceTest - Performance test setup complete. Assuming API Gateway is running on port 8888
2025-06-04 00:08:42.310 [main] INFO  d.m.v.g.performance.PerformanceTest - Starting warmup with 10 requests
2025-06-04 00:08:42.315 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Warmup complete, starting performance test with 100 concurrent requests
2025-06-04 00:08:42.349 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Performance test results:
2025-06-04 00:08:42.350 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Total requests: 100
2025-06-04 00:08:42.350 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Total time: 33 ms
2025-06-04 00:08:42.350 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Average response time: {:.2f} ms
2025-06-04 00:08:42.350 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Min response time: 0 ms
2025-06-04 00:08:42.350 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Max response time: 0 ms
2025-06-04 00:08:42.350 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Throughput: {:.2f} requests/second
2025-06-04 00:08:42.380 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:08:42.380 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:08:42.380 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:42.380 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:08:42.380 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:08:42.381 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:08:42.382 [vert.x-eventloop-thread-0] WARN  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now OPEN - requests will fail fast
2025-06-04 00:08:42.382 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit will attempt to reset after 2000ms
2025-06-04 00:08:44.390 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now HALF-OPEN - testing if service is available
2025-06-04 00:08:44.390 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Next request will determine if circuit returns to CLOSED or OPEN state
2025-06-04 00:08:44.886 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now CLOSED - service is operating normally
2025-06-04 00:08:44.914 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:08:44.914 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:08:44.914 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:44.914 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:08:44.915 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:08:44.915 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:08:44.948 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:08:44.948 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:08:44.948 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:44.948 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:08:44.948 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:08:44.948 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:08:44.950 [vert.x-eventloop-thread-0] WARN  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now OPEN - requests will fail fast
2025-06-04 00:08:44.950 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit will attempt to reset after 2000ms
2025-06-04 00:08:44.979 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:08:44.980 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:08:44.980 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:44.980 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:08:44.980 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:08:44.980 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:08:44.981 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker opened
2025-06-04 00:08:46.994 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker half-opened
2025-06-04 00:08:47.484 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker closed
2025-06-04 00:08:47.518 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:47.518 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:47.518 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:47.518 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:47.518 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:47.525 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:47 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-04 00:08:47.556 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:47.556 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:47.556 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:47.556 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:47.556 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:47.562 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:47 GMT] "OPTIONS /api/service-one/test-id HTTP/1.1" 204 0 "-" "-"
2025-06-04 00:08:47.563 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:08:47.592 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:47.592 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:47.592 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:47.592 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:47.592 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:47.592 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:47.592 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:47.593 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:47.593 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:47.593 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:47.593 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:47.593 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:47.593 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:47.593 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:47.593 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:47.597 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:47 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 00:08:47.627 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:47.627 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:47.627 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:47.627 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:47.627 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:47.631 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 00:08:47.632 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:47 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 00:08:47.662 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:47.662 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:47.662 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:47.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:47.662 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:47.667 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:47 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-04 00:08:47.696 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:08:47.696 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:08:47.696 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:08:47.696 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:08:47.696 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:08:47.701 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-04 00:08:47.701 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:08:47 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-04 00:08:47.735 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:08:47.736 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:08:47.737 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 00:08:47.775 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:08:47.776 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:08:47.808 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:08:47.809 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:08:47.842 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:08:47.844 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:08:47.844 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 00:08:47.847 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 00:08:47.876 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:08:47.878 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:08:47.880 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 00:08:47.880 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:08:47.910 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:47.911 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:47.911 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:47.911 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:47.913 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:47.915 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:08:47.915 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/any-role
2025-06-04 00:08:47.947 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:47.947 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:47.947 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:47.947 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:47.948 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:47.951 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:08:47.951 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - No authenticated user found for request: /api/admin
2025-06-04 00:08:47.981 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:47.981 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:47.981 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:47.981 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:47.983 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:47.986 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:08:47.986 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 00:08:48.016 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.016 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.016 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:48.016 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:48.017 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:48.017 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [manager, admin, user], requireAllRoles: true
2025-06-04 00:08:48.017 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.046 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.046 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.046 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:48.046 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:48.047 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:48.050 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:08:48.050 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:08:48.081 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.081 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.081 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:48.081 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:48.082 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:48.084 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 00:08:48.084 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/multi-role
2025-06-04 00:08:48.115 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.115 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.115 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:48.115 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:48.116 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:48.119 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:08:48.119 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 00:08:48.152 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.152 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.152 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:48.152 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:48.153 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:48.156 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 00:08:48.156 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/multi-role
2025-06-04 00:08:48.186 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.186 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.186 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:48.186 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:48.187 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:48.219 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.219 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.219 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:48.219 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:48.221 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:48.224 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:08:48.224 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/user
2025-06-04 00:08:48.253 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.253 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.253 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:08:48.253 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:08:48.255 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:08:48.258 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:08:48.258 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/admin
2025-06-04 00:08:48.289 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.290 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 00:08:48.290 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.290 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.320 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.320 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 00:08:48.320 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.320 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.351 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:08:48.351 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:08:48.351 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:08:48.380 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:08:48.380 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:08:48.380 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:08:48.407 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:08:48.407 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:08:48.407 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:08:48.438 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.438 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: legacy-test-key
2025-06-04 00:08:48.438 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.438 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.465 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.465 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 00:08:48.465 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.465 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.492 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.492 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 00:08:48.492 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.492 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.521 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.521 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:48.522 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.522 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.522 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.524 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:48.527 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:08:48.527 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:08:48.556 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.556 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:48.556 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.556 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.556 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.557 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:48.587 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.587 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:48.587 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.587 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.587 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.588 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:48.619 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.619 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:48.619 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.619 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.619 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.620 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:48.623 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:08:48.652 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.652 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:48.652 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.652 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.652 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.654 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:48.657 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:08:48.657 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User regular-user has required role(s) for request: /api/user
2025-06-04 00:08:48.686 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:08:48.686 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:08:48.687 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:08:48.687 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:08:48.687 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:08:48.688 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:08:48.691 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:08:48.691 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User admin-user has required role(s) for request: /api/admin
2025-06-04 00:08:48.724 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:48.724 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:48.724 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:48.724 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 00:08:48.724 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 00:08:48.724 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:48.724 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:48.724 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:48.725 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:48.725 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 00:08:48.725 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:48.725 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 00:08:48.725 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:48.725 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-04 00:08:48.725 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-04 00:08:48.725 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:48.725 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:48.725 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:48.725 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:48.725 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two.address
2025-06-04 00:08:48.725 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:48.725 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-04 00:08:48.754 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:48.754 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:48.754 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-three
2025-06-04 00:08:48.754 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-three with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:08:48.754 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-three (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:08:48.754 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-three
2025-06-04 00:08:48.754 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:48.754 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-three
2025-06-04 00:08:48.754 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-three created successfully
2025-06-04 00:08:48.754 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-three
2025-06-04 00:08:48.754 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:48.754 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-three
2025-06-04 00:08:48.781 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:48.781 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:48.781 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:48.782 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 00:08:48.782 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 00:08:48.782 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:48.782 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:48.782 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:48.782 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:48.782 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 00:08:48.782 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:48.782 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 00:08:48.807 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:08:48.807 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:08:48.808 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:08:48.808 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 00:08:48.808 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 00:08:48.808 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:08:48.808 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:48.808 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:08:48.808 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:08:48.808 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 00:08:48.808 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:48.808 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 00:08:48.808 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:08:48.808 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-04 00:08:48.808 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-04 00:08:48.808 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:08:48.808 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:08:48.808 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:08:48.808 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:08:48.809 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two.address
2025-06-04 00:08:48.809 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:08:48.809 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-04 00:25:48.927 [Thread-4] INFO  d.mars.vertx.gateway.ApiGatewayMain - Starting API Gateway
2025-06-04 00:25:48.976 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Starting configuration loading process
2025-06-04 00:25:48.977 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Adding environment variables store
2025-06-04 00:25:48.978 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Adding system properties store
2025-06-04 00:25:48.978 [Thread-4] INFO  d.m.vertx.common.config.ConfigLoader - Loading YAML configuration from: api-gateway/src/main/resources/config.yaml
2025-06-04 00:25:48.979 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Added YAML file store with path: api-gateway/src/main/resources/config.yaml
2025-06-04 00:25:48.979 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Creating config retriever with 3 stores
2025-06-04 00:25:49.000 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Retrieving configuration
2025-06-04 00:25:49.122 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Failed to load configuration: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\main\resources\config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:25:49.124 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Check if the file exists and is accessible: api-gateway/src/main/resources/config.yaml
2025-06-04 00:25:49.125 [vert.x-eventloop-thread-0] ERROR d.mars.vertx.gateway.ApiGatewayMain - Failed to load configuration
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\main\resources\config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:25:49.995 [main] INFO  d.mars.vertx.gateway.ApiGatewayMain - Initializing API Gateway for testing
2025-06-04 00:25:49.996 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Starting configuration loading process
2025-06-04 00:25:49.996 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Adding environment variables store
2025-06-04 00:25:49.996 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Adding system properties store
2025-06-04 00:25:49.996 [main] INFO  d.m.vertx.common.config.ConfigLoader - Loading YAML configuration from: api-gateway/src/test/resources/test-config.yaml
2025-06-04 00:25:49.996 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Added YAML file store with path: api-gateway/src/test/resources/test-config.yaml
2025-06-04 00:25:49.996 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Creating config retriever with 3 stores
2025-06-04 00:25:49.997 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Retrieving configuration
2025-06-04 00:25:50.000 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Failed to load configuration: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\test\resources\test-config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:25:50.001 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Check if the file exists and is accessible: api-gateway/src/test/resources/test-config.yaml
2025-06-04 00:25:50.001 [vert.x-eventloop-thread-0] ERROR d.mars.vertx.gateway.ApiGatewayMain - Failed to load test configuration
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\test\resources\test-config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 00:25:52.067 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:52.079 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:52.079 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:52.080 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:52.080 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:52.080 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.081 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.081 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:52.082 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.082 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:52.119 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:52.120 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:25:52.121 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.121 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:25:52.121 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:52.121 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.121 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.121 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:52.121 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.121 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:52.122 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:52.122 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:25:52.122 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.122 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:25:52.125 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:52.139 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:52.141 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:52.142 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:52.143 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:52.143 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:52.143 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:52.143 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:52.144 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:52.145 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:52.145 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:52.246 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:25:52.453 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:52 GMT] "GET /swagger-ui HTTP/1.1" 302 0 "-" "-"
2025-06-04 00:25:52.465 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:52.466 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:52.502 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:52.502 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:52.503 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:52.503 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:52.503 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:52.503 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.503 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.503 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:52.503 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.503 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:52.504 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:52.504 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:25:52.504 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.504 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:25:52.504 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:52.504 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.504 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.504 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:52.504 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.504 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:52.505 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:52.506 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:52.507 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:25:52.513 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 00:25:52.514 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-04 00:25:52.517 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-04 00:25:52.520 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-04 00:25:52.521 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:52.522 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:52.523 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:52.526 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:52 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-04 00:25:52.530 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:52.530 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:52.574 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:52.574 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:52.574 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:52.574 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:52.574 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:52.574 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.574 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.574 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:52.574 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.574 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:52.575 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:52.576 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:52.577 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:25:52.583 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:52 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 00:25:52.588 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:52.589 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:52.625 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:52.626 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:52.626 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:52.626 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:52.626 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:52.626 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.626 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.626 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:52.626 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.626 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.627 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:52.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:52.629 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:52.629 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:52.629 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:52.629 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:52.629 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:52.629 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:52.629 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:52.629 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:52.635 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:25:52.640 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:52 GMT] "GET /docs HTTP/1.1" 302 0 "-" "-"
2025-06-04 00:25:52.642 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:52.642 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:52.677 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:52.677 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:52.677 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:52.677 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:52.677 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:52.677 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.677 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.677 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:52.677 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.677 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:25:52.678 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:52.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:52.680 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:52.680 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:52.680 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:52.681 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:25:52.682 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:52.682 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:52.716 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.717 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:52.718 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:52.719 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:52.719 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:52.720 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:25:52.726 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:52 GMT] "GET /openapi.yaml HTTP/1.1" 200 15086 "-" "-"
2025-06-04 00:25:52.727 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:52.727 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:52.758 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:52.758 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:52.758 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:52.758 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:52.758 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:52.758 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.758 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.758 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:52.758 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.758 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:52.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:52.760 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:52.761 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:25:52.765 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:25:52.766 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-04 00:25:52.766 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-04 00:25:52.766 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-04 00:25:52.766 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:52.766 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:52.766 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:52.767 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:52 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-04 00:25:52.768 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:52.769 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:52.798 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:52.799 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:52.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:52.801 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:52.802 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 00:25:52.807 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 00:25:52.807 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:52 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 00:25:52.809 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:52.809 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:52.847 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestErrorHandler - Error handling request: Test error message
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestErrorHandler.handleRequest(AbstractRequestHandlerTest.java:188)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:52.926 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestBadRequestHandler - Error handling request: Bad request error
java.lang.IllegalArgumentException: Bad request error
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestBadRequestHandler.handleRequest(AbstractRequestHandlerTest.java:198)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:52.965 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 00:25:53.017 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.017 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:25:53.017 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.017 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:25:53.034 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-04 00:25:53.034 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:25:53.035 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:25:53.069 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.070 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:25:53.070 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.070 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:25:53.076 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-04 00:25:53.076 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 00:25:53.076 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:25:53.110 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.110 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:25:53.112 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 57191
2025-06-04 00:25:53.115 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/service-one-id
2025-06-04 00:25:53.116 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/service-one-id
2025-06-04 00:25:53.116 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.impl.NoStackTraceThrowable: Service One unavailable
2025-06-04 00:25:53.116 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service One unavailable
java.lang.RuntimeException: Service unavailable: Service One unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:53.149 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.149 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:25:53.151 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 57193
2025-06-04 00:25:53.154 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/service-one-id
2025-06-04 00:25:53.154 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/service-one-id
2025-06-04 00:25:53.154 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"service-one-id","name":"Service One Item","description":"Service One Description"}
2025-06-04 00:25:53.186 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.186 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 00:25:53.188 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 57195
2025-06-04 00:25:53.195 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one
2025-06-04 00:25:53.195 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one
2025-06-04 00:25:53.195 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"new-service-one-id","name":"New Service One Item","description":"New Service One Description"}
2025-06-04 00:25:53.228 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.228 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 00:25:53.235 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-04 00:25:53.235 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error calling test-service service
io.vertx.core.impl.NoStackTraceThrowable: Service unavailable
2025-06-04 00:25:53.235 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:53.267 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.267 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 00:25:53.272 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-04 00:25:53.273 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:25:53.304 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.304 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 00:25:53.309 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test
2025-06-04 00:25:53.310 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:25:53.342 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.342 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:25:53.348 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/random
2025-06-04 00:25:53.348 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","type":"random"}
2025-06-04 00:25:53.385 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.385 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:25:53.389 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 00:25:53.389 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","id":"test-id"}
2025-06-04 00:25:53.420 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.420 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:25:53.426 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/cities
2025-06-04 00:25:53.426 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"cities"}
2025-06-04 00:25:53.457 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.458 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:25:53.462 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/forecast/london
2025-06-04 00:25:53.462 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"forecast"}
2025-06-04 00:25:53.494 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.494 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:25:53.499 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/stats
2025-06-04 00:25:53.500 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"stats"}
2025-06-04 00:25:53.531 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.531 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 00:25:53.536 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/custom
2025-06-04 00:25:53.536 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"custom"}
2025-06-04 00:25:53.573 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:53.573 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:53.573 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:53.573 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:53.573 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:53.573 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.573 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.573 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:53.573 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.573 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:25:53.574 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:53.575 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:53.576 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:53.576 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:53.576 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:53.576 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:53.576 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:53.576 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:53.576 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:53.576 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:53.578 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:25:53.578 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:25:53.581 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-04 00:25:53.581 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-04 00:25:53.581 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-04 00:25:53.582 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 00:25:53.582 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 00:25:53.582 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 00:25:53.583 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:53 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 200 74 "-" "-"
2025-06-04 00:25:53.585 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:53.585 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:53.615 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:53.615 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:53.615 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:53.615 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:53.615 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:53.615 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.615 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.615 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:53.615 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.615 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:53.616 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:53.617 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:25:53.617 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:25:53.620 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:53 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 00:25:53.622 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:53.622 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:53.653 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:53.653 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:53.653 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:53.653 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:53.653 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:53.653 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.653 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.653 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:53.653 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.653 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:53.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:53.655 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:53.655 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:53.655 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:53.655 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:53.655 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:53.655 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:53.655 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:53.656 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:25:53.656 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:25:53.659 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:25:53.659 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-04 00:25:53.659 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-04 00:25:53.659 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-04 00:25:53.660 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:53.660 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:53.660 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:53.660 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:53 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 120 "-" "-"
2025-06-04 00:25:53.662 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:53.662 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:53.692 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:53.693 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:53.694 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:25:53.695 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:25:53.698 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one
2025-06-04 00:25:53.698 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"name":"New Item","description":"New Description"}
2025-06-04 00:25:53.698 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"name":"New Item","description":"New Description"}
2025-06-04 00:25:53.699 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:25:53.699 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:25:53.699 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-one service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 00:25:53.699 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:53 GMT] "POST /api/service-one HTTP/1.1" 200 65 "-" "-"
2025-06-04 00:25:53.701 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:53.701 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:53.732 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:53.733 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:25:53.733 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:25:53.736 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 00:25:53.736 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-04 00:25:53.737 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-04 00:25:53.737 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:25:53.737 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:25:53.737 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 00:25:53.738 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:53 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 68 "-" "-"
2025-06-04 00:25:53.739 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:53.739 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:25:53.772 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:53.773 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:53.774 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 00:25:53.774 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 00:25:53.777 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 00:25:53.777 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:53 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 00:25:53.779 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 00:25:53.779 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 00:25:53.813 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:25:53.813 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:25:53.832 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:25:53.834 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:25:53.838 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.logging.LoggingTest.lambda$setUp$0(LoggingTest.java:77)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:53.871 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:25:53.871 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:25:53.871 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:25:53.873 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:25:53.875 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 00:25:53.907 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:25:53.907 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:25:53.907 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:25:53.909 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:25:53.912 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 00:25:53.943 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:25:53.943 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:25:53.944 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:25:53.945 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:25:53.945 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:25:53.945 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:25:53.945 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:25:53.948 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.logging.LoggingTest.lambda$setUp$0(LoggingTest.java:77)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:53.949 [vert.x-eventloop-thread-1] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:53.980 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:25:53.980 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:25:53.981 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:25:53.982 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 00:25:53.982 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:25:53.982 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:25:53.982 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:25:53.985 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:25:54.017 [main] INFO  d.m.v.g.performance.PerformanceTest - Performance test setup complete. Assuming API Gateway is running on port 8888
2025-06-04 00:25:54.018 [main] INFO  d.m.v.g.performance.PerformanceTest - Starting warmup with 10 requests
2025-06-04 00:25:54.023 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Warmup complete, starting performance test with 100 concurrent requests
2025-06-04 00:25:54.060 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Performance test results:
2025-06-04 00:25:54.060 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Total requests: 100
2025-06-04 00:25:54.060 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Total time: 36 ms
2025-06-04 00:25:54.060 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Average response time: {:.2f} ms
2025-06-04 00:25:54.060 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Min response time: 0 ms
2025-06-04 00:25:54.060 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Max response time: 0 ms
2025-06-04 00:25:54.060 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Throughput: {:.2f} requests/second
2025-06-04 00:25:54.095 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:25:54.095 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:25:54.095 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:54.095 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:25:54.095 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:25:54.096 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:25:54.097 [vert.x-eventloop-thread-0] WARN  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now OPEN - requests will fail fast
2025-06-04 00:25:54.097 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit will attempt to reset after 2000ms
2025-06-04 00:25:56.111 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now HALF-OPEN - testing if service is available
2025-06-04 00:25:56.111 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Next request will determine if circuit returns to CLOSED or OPEN state
2025-06-04 00:25:56.609 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now CLOSED - service is operating normally
2025-06-04 00:25:56.645 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:25:56.645 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:25:56.645 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:56.645 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:25:56.646 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:25:56.646 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:25:56.672 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:25:56.672 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:25:56.672 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:56.672 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:25:56.673 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:25:56.673 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:25:56.674 [vert.x-eventloop-thread-0] WARN  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now OPEN - requests will fail fast
2025-06-04 00:25:56.674 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit will attempt to reset after 2000ms
2025-06-04 00:25:56.702 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 00:25:56.702 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 00:25:56.702 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:25:56.702 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 00:25:56.702 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 00:25:56.702 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 00:25:56.703 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker opened
2025-06-04 00:25:58.711 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker half-opened
2025-06-04 00:25:59.209 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker closed
2025-06-04 00:25:59.254 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:59.254 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:25:59.254 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:59.254 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:25:59.254 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:25:59.254 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:59.254 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:59.254 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:59.254 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:59.254 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:59.254 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:59.255 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:59.255 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:59.255 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:59.255 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:59.260 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:59 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-04 00:25:59.290 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:59.290 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:59.290 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:59.290 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:59.290 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:59.296 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:59 GMT] "OPTIONS /api/service-one/test-id HTTP/1.1" 204 0 "-" "-"
2025-06-04 00:25:59.296 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 00:25:59.326 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:59.326 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:25:59.326 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:59.326 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:25:59.326 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:25:59.326 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:59.326 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:59.326 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:59.326 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:59.326 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:59.327 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:59.327 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:59.327 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:59.327 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:59.327 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:59.332 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:59 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 00:25:59.362 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:59.362 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:59.362 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:59.362 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:59.362 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:59.366 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 00:25:59.366 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:59 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 00:25:59.395 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:59.395 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:59.395 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:59.395 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:59.395 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:59.400 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:59 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-04 00:25:59.428 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 00:25:59.428 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 00:25:59.428 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 00:25:59.428 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 00:25:59.428 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 00:25:59.432 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-04 00:25:59.433 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Tue, 3 Jun 2025 16:25:59 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-04 00:25:59.463 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:25:59.465 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:25:59.465 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 00:25:59.498 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:25:59.499 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:25:59.528 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:25:59.529 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:25:59.563 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:25:59.565 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:25:59.565 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 00:25:59.567 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 00:25:59.596 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 00:25:59.597 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 00:25:59.600 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 00:25:59.600 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:25:59.631 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.631 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.631 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.631 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.633 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.635 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:25:59.635 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/any-role
2025-06-04 00:25:59.664 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.664 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.664 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.664 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.665 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.668 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:25:59.668 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - No authenticated user found for request: /api/admin
2025-06-04 00:25:59.697 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.697 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.697 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.697 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.698 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.701 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:25:59.701 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 00:25:59.732 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.732 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.732 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.732 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.734 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.734 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [manager, admin, user], requireAllRoles: true
2025-06-04 00:25:59.734 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.763 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.764 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.764 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.764 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.765 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.767 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:25:59.767 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:25:59.798 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.798 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.798 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.798 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.799 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.802 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 00:25:59.802 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/multi-role
2025-06-04 00:25:59.830 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.830 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.830 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.830 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.831 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.834 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 00:25:59.834 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 00:25:59.863 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.863 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.863 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.863 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.864 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.867 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 00:25:59.867 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/multi-role
2025-06-04 00:25:59.898 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.899 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.899 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.899 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.900 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.929 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.929 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.929 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.929 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.930 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.933 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:25:59.933 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/user
2025-06-04 00:25:59.961 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:25:59.961 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:25:59.961 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 00:25:59.961 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 00:25:59.962 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 00:25:59.964 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:25:59.964 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/admin
2025-06-04 00:25:59.995 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:25:59.995 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 00:25:59.995 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:25:59.995 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.025 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:26:00.025 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 00:26:00.026 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:26:00.026 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.053 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:26:00.054 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:26:00.054 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:26:00.080 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:26:00.080 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:26:00.080 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:26:00.107 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 00:26:00.108 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 00:26:00.108 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 00:26:00.135 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:26:00.135 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: legacy-test-key
2025-06-04 00:26:00.135 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:26:00.135 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.167 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:26:00.167 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 00:26:00.167 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:26:00.167 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.196 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:26:00.196 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 00:26:00.196 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:26:00.196 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.225 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:26:00.225 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:26:00.225 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:26:00.226 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.226 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:26:00.227 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:26:00.230 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:26:00.230 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 00:26:00.259 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:26:00.259 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:26:00.259 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:26:00.259 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.259 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:26:00.260 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:26:00.290 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:26:00.290 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:26:00.290 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:26:00.290 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.290 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:26:00.291 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:26:00.322 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:26:00.322 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:26:00.322 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:26:00.322 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.322 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:26:00.323 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:26:00.326 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 00:26:00.355 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:26:00.355 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:26:00.355 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:26:00.355 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.355 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:26:00.356 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:26:00.359 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 00:26:00.359 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User regular-user has required role(s) for request: /api/user
2025-06-04 00:26:00.387 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 00:26:00.387 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 00:26:00.388 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 00:26:00.388 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 00:26:00.388 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 00:26:00.389 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 00:26:00.392 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 00:26:00.392 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User admin-user has required role(s) for request: /api/admin
2025-06-04 00:26:00.420 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:26:00.420 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:26:00.421 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:26:00.421 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 00:26:00.421 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 00:26:00.421 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:26:00.421 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:26:00.421 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:26:00.421 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:26:00.421 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 00:26:00.421 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:26:00.421 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 00:26:00.422 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:26:00.422 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-04 00:26:00.422 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-04 00:26:00.422 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:26:00.422 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:26:00.422 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:26:00.422 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:26:00.422 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two.address
2025-06-04 00:26:00.422 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:26:00.422 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-04 00:26:00.463 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:26:00.463 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:26:00.463 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-three
2025-06-04 00:26:00.463 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-three with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 00:26:00.463 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-three (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 00:26:00.463 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-three
2025-06-04 00:26:00.463 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:26:00.463 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-three
2025-06-04 00:26:00.463 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-three created successfully
2025-06-04 00:26:00.463 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-three
2025-06-04 00:26:00.463 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:26:00.463 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-three
2025-06-04 00:26:00.489 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:26:00.489 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:26:00.490 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:26:00.490 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 00:26:00.490 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 00:26:00.490 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:26:00.490 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:26:00.490 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:26:00.490 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:26:00.490 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 00:26:00.490 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:26:00.490 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 00:26:00.516 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 00:26:00.516 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 00:26:00.516 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 00:26:00.516 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 00:26:00.516 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 00:26:00.516 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 00:26:00.516 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:26:00.516 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 00:26:00.517 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 00:26:00.517 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 00:26:00.517 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:26:00.517 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 00:26:00.517 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 00:26:00.517 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-04 00:26:00.517 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-04 00:26:00.517 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 00:26:00.517 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 00:26:00.517 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 00:26:00.517 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 00:26:00.517 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two.address
2025-06-04 00:26:00.517 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 00:26:00.517 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-04 10:00:15.654 [Thread-4] INFO  d.mars.vertx.gateway.ApiGatewayMain - Starting API Gateway
2025-06-04 10:00:15.706 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Starting configuration loading process
2025-06-04 10:00:15.707 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Adding environment variables store
2025-06-04 10:00:15.708 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Adding system properties store
2025-06-04 10:00:15.708 [Thread-4] INFO  d.m.vertx.common.config.ConfigLoader - Loading YAML configuration from: api-gateway/src/main/resources/config.yaml
2025-06-04 10:00:15.710 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Added YAML file store with path: api-gateway/src/main/resources/config.yaml
2025-06-04 10:00:15.710 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Creating config retriever with 3 stores
2025-06-04 10:00:15.735 [Thread-4] DEBUG d.m.vertx.common.config.ConfigLoader - Retrieving configuration
2025-06-04 10:00:15.858 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Failed to load configuration: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\main\resources\config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 10:00:15.860 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Check if the file exists and is accessible: api-gateway/src/main/resources/config.yaml
2025-06-04 10:00:15.860 [vert.x-eventloop-thread-0] ERROR d.mars.vertx.gateway.ApiGatewayMain - Failed to load configuration
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/main/resources/config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\main\resources\config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 10:00:16.723 [main] INFO  d.mars.vertx.gateway.ApiGatewayMain - Initializing API Gateway for testing
2025-06-04 10:00:16.723 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Starting configuration loading process
2025-06-04 10:00:16.723 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Adding environment variables store
2025-06-04 10:00:16.723 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Adding system properties store
2025-06-04 10:00:16.724 [main] INFO  d.m.vertx.common.config.ConfigLoader - Loading YAML configuration from: api-gateway/src/test/resources/test-config.yaml
2025-06-04 10:00:16.724 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Added YAML file store with path: api-gateway/src/test/resources/test-config.yaml
2025-06-04 10:00:16.724 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Creating config retriever with 3 stores
2025-06-04 10:00:16.724 [main] DEBUG d.m.vertx.common.config.ConfigLoader - Retrieving configuration
2025-06-04 10:00:16.728 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Failed to load configuration: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\test\resources\test-config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 10:00:16.729 [vert.x-eventloop-thread-0] ERROR d.m.vertx.common.config.ConfigLoader - Check if the file exists and is accessible: api-gateway/src/test/resources/test-config.yaml
2025-06-04 10:00:16.729 [vert.x-eventloop-thread-0] ERROR d.mars.vertx.gateway.ApiGatewayMain - Failed to load test configuration
io.vertx.core.file.FileSystemException: Unable to read file at path 'api-gateway/src/test/resources/test-config.yaml'
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1070)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1063)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1174)
	at io.vertx.core.file.impl.FileSystemImpl$BlockingAction.handle(FileSystemImpl.java:1156)
	at io.vertx.core.impl.ContextBase.lambda$executeBlocking$1(ContextBase.java:180)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextBase.lambda$internalExecuteBlocking$2(ContextBase.java:199)
	at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.nio.file.NoSuchFileException: api-gateway\src\test\resources\test-config.yaml
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:234)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3292)
	at io.vertx.core.file.impl.FileSystemImpl$16.perform(FileSystemImpl.java:1067)
	... 11 common frames omitted
2025-06-04 10:00:18.783 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:18.789 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:18.790 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:18.790 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:18.790 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:18.791 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:18.791 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:18.791 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:18.792 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:18.792 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:18.821 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:18.821 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 10:00:18.822 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:18.822 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 10:00:18.822 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:18.822 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:18.822 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:18.822 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:18.822 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:18.823 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:18.823 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:18.823 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 10:00:18.823 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:18.823 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 10:00:18.825 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:18.837 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:18.838 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:18.839 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:18.840 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:18.840 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:18.840 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:18.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:18.842 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:18.842 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:18.842 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:18.842 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:18.939 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 10:00:19.131 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:19 GMT] "GET /swagger-ui HTTP/1.1" 302 0 "-" "-"
2025-06-04 10:00:19.143 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:19.144 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:19.179 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:19.180 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:19.180 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:19.180 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:19.180 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:19.180 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.180 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.180 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:19.180 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.180 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:19.181 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:19.181 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 10:00:19.181 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.181 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 10:00:19.181 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:19.181 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.181 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.181 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:19.181 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.181 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:19.182 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:19.182 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 10:00:19.182 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.182 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 10:00:19.182 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:19.182 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:19.182 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:19.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:19.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:19.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:19.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:19.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:19.184 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:19.184 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:19.185 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 10:00:19.192 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 10:00:19.193 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-04 10:00:19.197 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-04 10:00:19.199 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-04 10:00:19.200 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:19.201 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:19.202 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:19.204 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:19 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-04 10:00:19.209 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:19.209 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:19.252 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:19.252 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:19.252 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:19.252 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:19.252 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:19.252 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.252 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.252 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:19.252 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.252 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:19.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:19.254 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:19.255 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 10:00:19.260 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:19 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 10:00:19.264 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:19.264 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:19.298 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:19.299 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:19.300 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:19.301 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 10:00:19.305 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:19 GMT] "GET /docs HTTP/1.1" 302 0 "-" "-"
2025-06-04 10:00:19.306 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:19.306 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:19.337 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:19.337 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:19.337 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:19.337 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:19.337 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:19.337 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.337 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.337 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:19.337 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.337 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:19.338 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:19.339 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:19.340 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:19.340 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:19.340 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:19.340 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:19.340 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:19.340 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:19.340 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:19.340 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:19.341 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 10:00:19.342 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:19.342 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:19.374 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:19.374 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:19.374 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:19.374 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:19.374 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:19.374 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.375 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.375 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:19.375 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.375 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:19.375 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:19.375 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 10:00:19.375 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.375 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:19.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:19.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:19.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:19.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:19.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:19.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:19.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:19.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:19.377 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:19.378 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 10:00:19.383 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:19 GMT] "GET /openapi.yaml HTTP/1.1" 200 15086 "-" "-"
2025-06-04 10:00:19.384 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:19.385 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:19.436 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:19.437 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:19.437 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:19.437 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:19.437 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:19.437 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.437 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.437 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:19.437 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.437 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:19.438 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:19.438 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 10:00:19.438 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.438 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 10:00:19.438 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:19.438 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.438 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.438 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:19.438 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.438 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:19.439 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:19.440 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:19.440 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:19.440 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:19.440 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:19.440 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:19.440 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:19.440 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:19.440 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:19.440 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:19.441 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:19.441 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:19.441 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:19.441 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:19.441 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:19.441 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:19.444 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 10:00:19.451 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 10:00:19.451 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-04 10:00:19.452 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-04 10:00:19.452 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-04 10:00:19.452 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:19.453 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:55)
	at dev.mars.vertx.gateway.handler.ServiceHandler.handle(ServiceHandler.java:16)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:19.453 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:19.455 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:19 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-04 10:00:19.457 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:19.458 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-one
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-two
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:19.501 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:19.502 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:19.503 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:19.503 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:19.503 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:19.503 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:19.503 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:19.503 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:19.503 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:19.505 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-04 10:00:19.507 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 10:00:19.508 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:19 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 10:00:19.510 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:19.510 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:19.549 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestErrorHandler - Error handling request: Test error message
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestErrorHandler.handleRequest(AbstractRequestHandlerTest.java:188)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:19.625 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestBadRequestHandler - Error handling request: Bad request error
java.lang.IllegalArgumentException: Bad request error
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestBadRequestHandler.handleRequest(AbstractRequestHandlerTest.java:198)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:19.661 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 10:00:19.709 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.709 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 10:00:19.709 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.709 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 10:00:19.728 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-04 10:00:19.728 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 10:00:19.729 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 10:00:19.759 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.759 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 10:00:19.759 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.759 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 10:00:19.764 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-04 10:00:19.764 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 10:00:19.764 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 10:00:19.795 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.795 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 10:00:19.798 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 51057
2025-06-04 10:00:19.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/service-one-id
2025-06-04 10:00:19.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/service-one-id
2025-06-04 10:00:19.801 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.impl.NoStackTraceThrowable: Service One unavailable
2025-06-04 10:00:19.801 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service One unavailable
java.lang.RuntimeException: Service unavailable: Service One unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:19.831 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.831 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 10:00:19.833 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 51059
2025-06-04 10:00:19.836 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/service-one-id
2025-06-04 10:00:19.836 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/service-one-id
2025-06-04 10:00:19.836 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"service-one-id","name":"Service One Item","description":"Service One Description"}
2025-06-04 10:00:19.865 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.865 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-04 10:00:19.867 [vert.x-eventloop-thread-0] INFO  d.m.v.g.h.ServiceOneHandlerTest - Test server started on port 51061
2025-06-04 10:00:19.873 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one
2025-06-04 10:00:19.873 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one
2025-06-04 10:00:19.873 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"new-service-one-id","name":"New Service One Item","description":"New Service One Description"}
2025-06-04 10:00:19.904 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.904 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 10:00:19.909 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-04 10:00:19.909 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error calling test-service service
io.vertx.core.impl.NoStackTraceThrowable: Service unavailable
2025-06-04 10:00:19.909 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:19.941 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.941 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 10:00:19.946 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-04 10:00:19.946 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 10:00:19.972 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:19.973 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-04 10:00:19.977 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test
2025-06-04 10:00:19.978 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 10:00:20.009 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.009 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 10:00:20.015 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/random
2025-06-04 10:00:20.015 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","type":"random"}
2025-06-04 10:00:20.044 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.044 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 10:00:20.048 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id
2025-06-04 10:00:20.048 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","id":"test-id"}
2025-06-04 10:00:20.077 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.077 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 10:00:20.082 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/cities
2025-06-04 10:00:20.082 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"cities"}
2025-06-04 10:00:20.112 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.112 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 10:00:20.117 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/forecast/london
2025-06-04 10:00:20.117 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"forecast"}
2025-06-04 10:00:20.145 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.146 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 10:00:20.150 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/stats
2025-06-04 10:00:20.150 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"stats"}
2025-06-04 10:00:20.179 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.179 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-04 10:00:20.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/custom
2025-06-04 10:00:20.183 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"result":"success","action":"custom"}
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.224 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:20.225 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:20.226 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 10:00:20.226 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 10:00:20.229 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-04 10:00:20.229 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-04 10:00:20.230 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-04 10:00:20.231 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 10:00:20.231 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 10:00:20.231 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-04 10:00:20.231 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:20 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 200 74 "-" "-"
2025-06-04 10:00:20.232 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:20.233 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:20.259 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:20.260 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:20.261 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:20.261 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:20.261 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:20.261 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:20.261 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:20.261 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:20.261 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:20.261 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:20.262 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 10:00:20.262 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 10:00:20.265 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:20 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 10:00:20.266 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:20.266 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:20.292 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:20.293 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:20.294 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:20.295 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 10:00:20.295 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 10:00:20.298 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 10:00:20.298 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-04 10:00:20.298 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-04 10:00:20.299 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-04 10:00:20.299 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:20.299 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.handler.ServiceHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:20.299 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.handler.ServiceHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceHandler.lambda$handle$1(ServiceHandler.java:62)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:20.299 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:20 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 120 "-" "-"
2025-06-04 10:00:20.301 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:20.301 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:20.328 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:20.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:20.330 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:20.331 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 10:00:20.331 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 10:00:20.334 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one
2025-06-04 10:00:20.334 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"name":"New Item","description":"New Description"}
2025-06-04 10:00:20.334 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"name":"New Item","description":"New Description"}
2025-06-04 10:00:20.334 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 10:00:20.334 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 10:00:20.334 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-one service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-04 10:00:20.335 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:20 GMT] "POST /api/service-one HTTP/1.1" 200 65 "-" "-"
2025-06-04 10:00:20.336 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:20.336 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:20.364 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:20.365 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:20.366 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 10:00:20.366 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 10:00:20.369 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Handling service-one service request: /api/service-one/test-id
2025-06-04 10:00:20.369 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-04 10:00:20.369 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-04 10:00:20.369 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 10:00:20.369 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 10:00:20.369 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.handler.ServiceHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-04 10:00:20.369 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:20 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 68 "-" "-"
2025-06-04 10:00:20.371 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:20.371 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 15 handlers
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/stats
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /swagger-ui
2025-06-04 10:00:20.398 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/forecast/:city
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /openapi.yaml
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /docs
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added PUT route: /api/service-one/:id
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added DELETE route: /api/service-one/:id
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/random
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/cities
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:20.399 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:20.400 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-04 10:00:20.400 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-04 10:00:20.402 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 10:00:20.403 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:20 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 10:00:20.404 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-04 10:00:20.404 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-04 10:00:20.435 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:20.435 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:20.473 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:20.474 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 10:00:20.478 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.logging.LoggingTest.lambda$setUp$0(LoggingTest.java:77)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:20.509 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:20.509 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:20.509 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:20.510 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 10:00:20.513 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 10:00:20.543 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:20.543 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:20.543 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:20.544 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 10:00:20.547 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-04 10:00:20.577 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:20.577 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:20.577 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:20.579 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 10:00:20.579 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:20.579 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:20.579 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:20.582 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.logging.LoggingTest.lambda$setUp$0(LoggingTest.java:77)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:20.582 [vert.x-eventloop-thread-1] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:20.613 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:20.613 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:20.614 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:20.615 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.logging.LoggingTest - Test server started on port 9998
2025-06-04 10:00:20.615 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:20.615 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:20.615 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:20.618 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 10:00:20.650 [main] INFO  d.m.v.g.performance.PerformanceTest - Performance test setup complete. Assuming API Gateway is running on port 8888
2025-06-04 10:00:20.650 [main] INFO  d.m.v.g.performance.PerformanceTest - Starting warmup with 10 requests
2025-06-04 10:00:20.656 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Warmup complete, starting performance test with 100 concurrent requests
2025-06-04 10:00:20.689 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Performance test results:
2025-06-04 10:00:20.689 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Total requests: 100
2025-06-04 10:00:20.689 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Total time: 31 ms
2025-06-04 10:00:20.689 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Average response time: {:.2f} ms
2025-06-04 10:00:20.689 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Min response time: 0 ms
2025-06-04 10:00:20.689 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Max response time: 0 ms
2025-06-04 10:00:20.689 [vert.x-eventloop-thread-1] INFO  d.m.v.g.performance.PerformanceTest - Throughput: {:.2f} requests/second
2025-06-04 10:00:20.718 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 10:00:20.718 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 10:00:20.718 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:20.718 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 10:00:20.718 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 10:00:20.719 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 10:00:20.720 [vert.x-eventloop-thread-0] WARN  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now OPEN - requests will fail fast
2025-06-04 10:00:20.720 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit will attempt to reset after 2000ms
2025-06-04 10:00:22.736 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now HALF-OPEN - testing if service is available
2025-06-04 10:00:22.736 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Next request will determine if circuit returns to CLOSED or OPEN state
2025-06-04 10:00:23.235 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now CLOSED - service is operating normally
2025-06-04 10:00:23.265 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 10:00:23.265 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 10:00:23.265 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:23.265 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 10:00:23.265 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 10:00:23.265 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 10:00:23.292 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 10:00:23.292 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 10:00:23.292 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:23.292 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 10:00:23.293 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 10:00:23.293 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 10:00:23.294 [vert.x-eventloop-thread-0] WARN  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker is now OPEN - requests will fail fast
2025-06-04 10:00:23.294 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit will attempt to reset after 2000ms
2025-06-04 10:00:23.322 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: test-circuit-breaker (maxFailures=3, timeout=1000ms, resetTimeout=2000ms)
2025-06-04 10:00:23.322 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: test-circuit-breaker
2025-06-04 10:00:23.322 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:23.322 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: test-circuit-breaker
2025-06-04 10:00:23.323 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker test-circuit-breaker created successfully
2025-06-04 10:00:23.323 [main] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker test setup complete
2025-06-04 10:00:23.324 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker opened
2025-06-04 10:00:25.335 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker half-opened
2025-06-04 10:00:25.836 [vert.x-eventloop-thread-0] INFO  d.m.v.g.r.CircuitBreakerTest - Circuit breaker closed
2025-06-04 10:00:25.881 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:25.881 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:25.881 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:25.881 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:25.881 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:25.886 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:25 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-04 10:00:25.912 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:25.912 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 10:00:25.912 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:25.912 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 10:00:25.912 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 10:00:25.912 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:25.912 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:25.913 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:25.913 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:25.913 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:25.913 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:25.913 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:25.913 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:25.913 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:25.913 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:25.918 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:25 GMT] "OPTIONS /api/service-one/test-id HTTP/1.1" 204 0 "-" "-"
2025-06-04 10:00:25.919 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-04 10:00:25.943 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:25.943 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 10:00:25.943 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:25.943 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 10:00:25.943 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 10:00:25.943 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:25.943 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:25.943 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:25.943 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:25.943 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:25.943 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:25.943 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:25.943 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:25.944 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:25.944 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:25.949 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:25 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-04 10:00:25.983 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:25.983 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 10:00:25.983 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:25.983 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 10:00:25.983 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 10:00:25.983 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:25.984 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:25.984 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:25.984 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:25.984 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:25.984 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:25.984 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:25.984 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:25.984 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:25.984 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:25.988 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-04 10:00:25.988 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:25 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-04 10:00:26.015 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:26.015 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:26.015 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:26.015 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:26.015 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:26.020 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:26 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-04 10:00:26.047 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-04 10:00:26.047 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router with 5 handlers
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed headers: ["Custom-Header"]
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added custom allowed method: PATCH
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Using allowed origin: *
2025-06-04 10:00:26.047 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with custom settings
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-one/:id
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added default GET route: /health
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-one
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added GET route: /api/service-two/:id
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Added POST route: /api/service-two
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-04 10:00:26.047 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-04 10:00:26.047 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-04 10:00:26.051 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-04 10:00:26.052 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Wed, 4 Jun 2025 02:00:26 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-04 10:00:26.081 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 10:00:26.083 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 10:00:26.083 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 10:00:26.115 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 10:00:26.116 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 10:00:26.142 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 10:00:26.144 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 10:00:26.174 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 10:00:26.175 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 10:00:26.175 [main] DEBUG d.m.v.g.security.JwtAuthHandler - Generating JWT token for user: test-user
2025-06-04 10:00:26.178 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 10:00:26.205 [main] INFO  d.m.v.g.security.JwtAuthHandler - Created JWT authentication handler for realm: test-realm
2025-06-04 10:00:26.206 [vert.x-eventloop-thread-1] INFO  d.m.v.g.security.JwtAuthHandlerTest - Test server started on port 9998
2025-06-04 10:00:26.209 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.security.JwtAuthHandler - Handling JWT authentication for request: /api/secured
2025-06-04 10:00:26.209 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 10:00:26.239 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.239 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.239 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.239 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.241 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.243 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 10:00:26.243 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/any-role
2025-06-04 10:00:26.272 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.272 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.272 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.272 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.273 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.276 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 10:00:26.276 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - No authenticated user found for request: /api/admin
2025-06-04 10:00:26.306 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.306 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.306 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.306 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.308 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.310 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 10:00:26.310 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 10:00:26.339 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.339 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.339 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.339 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.340 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.340 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [manager, admin, user], requireAllRoles: true
2025-06-04 10:00:26.340 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.368 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.368 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.368 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.368 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.369 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.372 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 10:00:26.372 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 10:00:26.399 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.399 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.399 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.399 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.400 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.403 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 10:00:26.403 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/multi-role
2025-06-04 10:00:26.429 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.429 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.429 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.429 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.430 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.432 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/any-role
2025-06-04 10:00:26.432 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/any-role
2025-06-04 10:00:26.460 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.460 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.460 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.460 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.461 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.464 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/multi-role
2025-06-04 10:00:26.464 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/multi-role
2025-06-04 10:00:26.490 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.490 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.490 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.490 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.491 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.521 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.521 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.521 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.521 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.522 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.525 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 10:00:26.525 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/user
2025-06-04 10:00:26.556 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.556 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.556 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: true
2025-06-04 10:00:26.556 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin, user], requireAllRoles: false
2025-06-04 10:00:26.557 [vert.x-eventloop-thread-1] INFO  d.m.v.g.s.RoleBasedAuthorizationHandlerTest - Test server started on port 9997
2025-06-04 10:00:26.560 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 10:00:26.560 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user has required role(s) for request: /api/admin
2025-06-04 10:00:26.592 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.592 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 10:00:26.592 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.592 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.621 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.622 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key
2025-06-04 10:00:26.622 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.622 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.653 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 10:00:26.653 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 10:00:26.653 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 10:00:26.680 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 10:00:26.680 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 10:00:26.680 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 10:00:26.706 [main] INFO  d.m.v.g.security.SecurityManager - Security is disabled
2025-06-04 10:00:26.706 [main] WARN  d.m.v.g.security.SecurityManager - Cannot create role-based auth handler: security is disabled
2025-06-04 10:00:26.706 [main] WARN  d.m.v.g.security.SecurityManager - Cannot generate token: security is disabled
2025-06-04 10:00:26.735 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.735 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: legacy-test-key
2025-06-04 10:00:26.735 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.735 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.761 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.761 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 10:00:26.762 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.762 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.790 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.790 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: default-api-gateway-secret-key
2025-06-04 10:00:26.790 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.790 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.820 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.820 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:26.820 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.820 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.821 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.822 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 10:00:26.825 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 10:00:26.825 [vert.x-eventloop-thread-1] WARN  d.m.v.g.s.RoleBasedAuthorizationHandler - User test-user does not have required role(s) for request: /api/admin
2025-06-04 10:00:26.857 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.857 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:26.858 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.858 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.858 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.859 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 10:00:26.887 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.887 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:26.887 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.887 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.887 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.888 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 10:00:26.923 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.923 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:26.923 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.923 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.923 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.924 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 10:00:26.927 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.handler.HttpException: Unauthorized
2025-06-04 10:00:26.954 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.954 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:26.954 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.954 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.954 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.955 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 10:00:26.958 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/user
2025-06-04 10:00:26.958 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User regular-user has required role(s) for request: /api/user
2025-06-04 10:00:26.986 [main] INFO  d.m.v.g.security.SecurityManager - Initializing security manager with security enabled
2025-06-04 10:00:26.986 [main] INFO  d.m.v.g.security.SecurityManager - Using symmetric key for JWT authentication: test-symmetric-key-for-jwt-authentication
2025-06-04 10:00:26.986 [main] INFO  d.m.v.g.security.SecurityManager - Security manager initialized with JWT authentication
2025-06-04 10:00:26.986 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [admin], requireAllRoles: false
2025-06-04 10:00:26.986 [main] INFO  d.m.v.g.s.RoleBasedAuthorizationHandler - Created role-based authorization handler with required roles: [user], requireAllRoles: false
2025-06-04 10:00:26.987 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.security.SecurityTest - Test server started on port 9999
2025-06-04 10:00:26.990 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - Handling role-based authorization for request: /api/admin
2025-06-04 10:00:26.990 [vert.x-eventloop-thread-1] DEBUG d.m.v.g.s.RoleBasedAuthorizationHandler - User admin-user has required role(s) for request: /api/admin
2025-06-04 10:00:27.019 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:27.019 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:27.019 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:27.019 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 10:00:27.019 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 10:00:27.019 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:27.020 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:27.020 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:27.020 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:27.020 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 10:00:27.020 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:27.020 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 10:00:27.020 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:27.020 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-04 10:00:27.020 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-04 10:00:27.020 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:27.020 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:27.020 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:27.021 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:27.021 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two.address
2025-06-04 10:00:27.021 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:27.021 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-04 10:00:27.048 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:27.048 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:27.048 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-three
2025-06-04 10:00:27.048 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-three with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-04 10:00:27.048 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-three (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-04 10:00:27.048 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-three
2025-06-04 10:00:27.048 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:27.048 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-three
2025-06-04 10:00:27.048 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-three created successfully
2025-06-04 10:00:27.048 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.service-three
2025-06-04 10:00:27.048 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:27.048 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-three
2025-06-04 10:00:27.073 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:27.073 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:27.073 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:27.073 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 10:00:27.073 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 10:00:27.073 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:27.073 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:27.073 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:27.074 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:27.074 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 10:00:27.074 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:27.074 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 10:00:27.101 [main] INFO  d.m.v.c.e.ServiceDiscoveryManager - ServiceDiscoveryManager initialized
2025-06-04 10:00:27.101 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-04 10:00:27.102 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-04 10:00:27.102 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-04 10:00:27.102 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-04 10:00:27.102 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-04 10:00:27.102 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:27.102 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-04 10:00:27.102 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-04 10:00:27.102 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.one.address
2025-06-04 10:00:27.102 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:27.102 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-04 10:00:27.102 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-04 10:00:27.102 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-04 10:00:27.102 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-04 10:00:27.102 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-04 10:00:27.102 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-04 10:00:27.102 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-04 10:00:27.102 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-04 10:00:27.102 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client with address: service.two.address
2025-06-04 10:00:27.102 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-04 10:00:27.102 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
