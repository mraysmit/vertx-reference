2025-06-01 18:47:08.163 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 18:47:22.160 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestErrorHandler - Error handling request: Test error message
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestErrorHandler.handleRequest(AbstractRequestHandlerTest.java:188)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:47:22.351 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestBadRequestHandler - Error handling request: Bad request error
java.lang.IllegalArgumentException: Bad request error
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestBadRequestHandler.handleRequest(AbstractRequestHandlerTest.java:198)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:50:35.705 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:50:35.707 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 18:50:35.978 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-01 18:50:35.979 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error handling request: Cannot invoke "io.vertx.core.buffer.Buffer.length()" because the return value of "io.vertx.ext.web.RoutingContext.getBody()" is null
java.lang.NullPointerException: Cannot invoke "io.vertx.core.buffer.Buffer.length()" because the return value of "io.vertx.ext.web.RoutingContext.getBody()" is null
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.createRequestObject(ServiceRequestHandler.java:62)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:32)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:50:36.103 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:50:36.104 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 18:50:36.108 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-01 18:50:36.109 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error handling request: Cannot invoke "io.vertx.core.buffer.Buffer.length()" because the return value of "io.vertx.ext.web.RoutingContext.getBody()" is null
java.lang.NullPointerException: Cannot invoke "io.vertx.core.buffer.Buffer.length()" because the return value of "io.vertx.ext.web.RoutingContext.getBody()" is null
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.createRequestObject(ServiceRequestHandler.java:62)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:32)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:50:36.155 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:50:36.156 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 18:50:36.163 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test
2025-06-01 18:50:36.164 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 18:51:20.306 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:51:20.308 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 18:51:20.555 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-01 18:51:20.557 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error calling test-service service
io.vertx.core.impl.NoStackTraceThrowable: Service unavailable
2025-06-01 18:51:20.558 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:51:20.683 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:51:20.683 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 18:51:20.688 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-01 18:51:20.688 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 18:51:20.730 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:51:20.730 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 18:51:20.738 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test
2025-06-01 18:51:20.739 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 18:57:18.417 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:57:18.419 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-01 18:57:18.420 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:57:18.420 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-01 18:57:18.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 18:57:18.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 18:57:18.680 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 18:57:18.805 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:57:18.805 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-01 18:57:18.805 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:57:18.805 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-01 18:57:18.810 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 18:57:18.811 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 18:57:18.811 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 18:58:17.265 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:58:17.271 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:58:17.273 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 18:58:17.273 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 18:58:17.273 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:58:17.274 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:17.274 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:58:17.295 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:58:17.296 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:17.296 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 18:58:17.298 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:58:17.298 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-01 18:58:17.299 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-01 18:58:17.299 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:58:17.299 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:17.299 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:58:17.299 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:58:17.299 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:17.299 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-01 18:58:17.376 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:58:17.376 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-three
2025-06-01 18:58:17.377 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-three with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:17.377 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-three (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:17.377 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-three
2025-06-01 18:58:17.377 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:17.377 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-three
2025-06-01 18:58:17.378 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-three created successfully
2025-06-01 18:58:17.378 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:17.378 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-three
2025-06-01 18:58:17.434 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:58:17.434 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:58:17.434 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 18:58:17.435 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 18:58:17.435 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:58:17.435 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:17.435 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:58:17.436 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:58:17.436 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:17.436 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 18:58:17.476 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:58:17.477 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:58:17.477 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 18:58:17.477 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 18:58:17.477 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:58:17.477 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:17.477 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:58:17.478 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:58:17.478 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:17.478 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 18:58:17.478 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:58:17.478 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-01 18:58:17.478 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-01 18:58:17.478 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:58:17.478 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:17.478 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:58:17.478 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:58:17.478 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:17.478 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-01 18:58:32.223 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:32.224 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:32.229 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:58:32.236 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 18:58:32.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:58:32.246 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:58:32.247 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:58:32.508 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 10:58:32 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 18:58:32.611 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:32.611 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:32.611 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:58:32.611 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 18:58:32.612 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:58:32.612 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:58:32.612 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:58:32.619 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:58:32.661 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:32.662 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:32.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:58:32.662 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 18:58:32.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:58:32.662 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:58:32.662 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:58:32.668 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 10:58:32 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 18:58:32.707 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:32.708 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:32.708 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:58:32.708 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 18:58:32.708 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:58:32.708 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:58:32.708 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:58:32.713 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 18:58:32.713 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 10:58:32 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 18:58:32.751 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:32.751 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:32.751 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:58:32.751 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 18:58:32.752 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:58:32.752 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:58:32.752 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:58:32.757 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 10:58:32 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 18:58:32.795 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:32.795 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:32.795 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:58:32.795 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 18:58:32.795 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:58:32.795 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:58:32.795 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:58:32.800 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 18:58:32.800 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 10:58:32 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-01 18:58:42.754 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 18:58:42.755 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:58:42.756 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:42.758 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:58:42.759 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:42.760 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:42.760 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:58:42.761 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:42.761 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:58:42.779 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:58:42.780 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:42.780 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 18:58:42.780 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:58:42.780 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:42.780 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:42.780 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:58:42.780 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:42.780 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:58:42.781 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:58:42.781 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:42.781 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 18:58:42.781 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:42.785 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:58:42.865 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 18:58:42.866 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:58:42.866 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:42.866 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:58:42.866 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:42.866 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:42.866 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:58:42.866 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:42.866 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:58:42.866 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:42.867 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:58:42.910 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 18:58:42.910 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:58:42.910 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:42.910 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:58:42.910 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:42.910 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:42.910 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:58:42.910 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:42.910 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:58:42.911 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:58:42.911 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:42.911 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 18:58:42.911 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:58:42.911 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:42.911 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:42.911 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:58:42.911 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:42.911 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:58:42.912 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:58:42.912 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:42.912 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 18:58:42.912 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:42.912 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:58:42.951 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 18:58:42.951 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:58:42.952 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:42.952 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:58:42.952 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:42.952 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:42.952 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:58:42.952 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:42.952 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:42.953 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 18:58:42.954 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:42.954 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:58:42.988 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 18:58:42.989 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:58:42.989 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:58:42.989 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:58:42.989 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:42.989 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:42.989 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:58:42.989 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:42.989 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:58:42.989 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:58:42.990 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:42.990 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 18:58:42.990 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:58:42.990 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:58:42.990 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:58:42.990 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:58:42.990 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:58:42.990 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:58:42.990 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:58:42.991 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:58:42.991 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 18:58:42.991 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:58:42.991 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:59:48.919 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 18:59:48.920 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:59:48.921 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:59:48.924 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:59:48.926 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:59:48.927 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:59:48.927 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:59:48.927 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:59:48.927 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:59:48.944 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:59:48.945 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:59:48.945 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 18:59:48.946 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:59:48.946 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:59:48.946 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:59:48.946 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:59:48.946 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:59:48.946 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:59:48.946 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:59:48.947 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:59:48.947 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 18:59:48.947 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:59:48.950 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:59:48.958 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 18:59:48.964 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:59:48.965 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:59:48.965 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:59:49.046 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 18:59:49.202 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 18:59:49.202 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 18:59:49.204 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 18:59:49.228 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 18:59:49.230 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 18:59:49.231 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:59:49.236 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:59:49.236 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:59:49.242 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 10:59:49 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 18:59:49.253 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 18:59:49.256 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 18:59:49.321 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 18:59:49.321 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:59:49.321 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:59:49.321 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:59:49.321 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:59:49.321 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:59:49.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:59:49.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:59:49.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:59:49.322 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:59:49.322 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:59:49.322 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 18:59:49.322 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:59:49.322 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:59:49.322 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:59:49.322 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:59:49.322 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:59:49.322 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:59:49.322 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:59:49.323 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:59:49.323 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 18:59:49.323 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:59:49.323 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:59:49.323 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 18:59:49.323 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:59:49.324 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:59:49.324 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:59:49.325 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 18:59:49.329 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 18:59:49.330 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 10:59:49 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 18:59:49.348 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 18:59:49.348 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:59:49.385 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:59:49.386 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 18:59:49.387 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:59:49.387 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:59:49.387 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:59:49.388 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 18:59:49.389 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 18:59:49.389 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 18:59:49.423 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 18:59:49.423 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:59:49.423 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:59:49.423 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:59:49.424 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:59:49.425 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:59:49.425 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:59:49.425 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 18:59:49.425 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:59:49.425 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:59:49.425 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 18:59:49.425 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:59:49.425 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:59:49.425 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:59:49.427 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 18:59:49.430 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 18:59:49.430 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 18:59:49.430 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 18:59:49.430 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 18:59:49.430 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 18:59:49.430 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:59:49.431 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:59:49.431 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 18:59:49.432 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 10:59:49 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 18:59:49.434 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 18:59:49.434 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 18:59:49.466 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 18:59:49.466 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 18:59:49.466 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 18:59:49.466 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 18:59:49.466 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:59:49.466 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:59:49.466 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 18:59:49.466 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:59:49.466 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 18:59:49.467 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 18:59:49.468 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 18:59:49.472 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 18:59:49.472 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 10:59:49 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 18:59:49.474 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 18:59:49.475 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:00:51.040 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 19:00:51.042 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:00:51.043 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:00:51.046 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:00:51.048 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:00:51.048 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:00:51.048 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:00:51.049 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:00:51.049 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:00:51.067 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:00:51.068 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:51.068 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 19:00:51.069 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:00:51.069 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:00:51.069 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:00:51.069 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:00:51.069 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:00:51.069 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:00:51.069 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:00:51.069 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:51.070 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 19:00:51.070 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:00:51.074 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:00:51.081 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 19:00:51.087 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:00:51.088 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:00:51.088 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:00:51.169 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 19:00:51.315 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 19:00:51.316 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 19:00:51.318 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 19:00:51.341 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 19:00:51.344 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 19:00:51.345 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 19:00:51.349 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 19:00:51.350 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 19:00:51.355 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:00:51 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 19:00:51.367 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 19:00:51.369 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:00:51.432 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 19:00:51.432 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:00:51.432 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:00:51.432 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:00:51.432 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:00:51.432 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:00:51.432 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:00:51.432 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:00:51.432 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:00:51.433 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:00:51.433 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:51.433 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 19:00:51.433 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:00:51.433 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:00:51.433 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:00:51.433 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:00:51.433 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:00:51.433 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:00:51.434 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:00:51.434 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:51.434 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 19:00:51.434 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:00:51.434 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:00:51.434 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 19:00:51.434 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:00:51.434 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:00:51.434 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:00:51.436 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 19:00:51.439 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 19:00:51.440 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:00:51 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 19:00:51.456 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 19:00:51.457 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:00:51.497 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:00:51.498 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:00:51.498 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:00:51.498 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:00:51.498 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:00:51.498 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:51.498 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 19:00:51.498 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:00:51.498 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:00:51.498 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 19:00:51.498 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:00:51.499 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:00:51.499 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:00:51.500 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 19:00:51.501 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 19:00:51.501 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:00:51.537 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 19:00:51.537 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:00:51.537 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:00:51.537 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:00:51.537 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:00:51.537 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:00:51.537 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:00:51.537 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:00:51.537 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:00:51.538 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:00:51.539 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 19:00:51.539 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:00:51.539 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:00:51.539 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:00:51.540 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 19:00:51.544 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 19:00:51.544 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 19:00:51.544 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 19:00:51.544 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 19:00:51.544 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 19:00:51.544 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 19:00:51.545 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 19:00:51.545 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 19:00:51.546 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:00:51 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 19:00:51.547 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 19:00:51.547 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:00:51.582 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 19:00:51.582 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:00:51.582 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:00:51.582 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:00:51.582 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:00:51.582 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:00:51.582 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:00:51.582 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:00:51.582 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 19:00:51.583 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:00:51.584 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:00:51.584 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:00:51.585 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 19:00:51.588 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 19:00:51.589 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:00:51 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 19:00:51.591 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 19:00:51.591 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:00:53.943 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestErrorHandler - Error handling request: Test error message
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestErrorHandler.handleRequest(AbstractRequestHandlerTest.java:188)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 19:00:54.109 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestBadRequestHandler - Error handling request: Bad request error
java.lang.IllegalArgumentException: Bad request error
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestBadRequestHandler.handleRequest(AbstractRequestHandlerTest.java:198)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 19:00:55.854 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 19:00:57.530 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:57.531 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-01 19:00:57.533 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:57.533 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-01 19:00:57.778 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 19:00:57.779 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 19:00:57.780 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 19:00:57.904 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:57.905 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-01 19:00:57.905 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:57.905 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-01 19:00:57.910 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 19:00:57.910 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 19:00:57.910 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 19:00:59.399 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:59.400 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 19:00:59.658 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-01 19:00:59.659 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error calling test-service service
io.vertx.core.impl.NoStackTraceThrowable: Service unavailable
2025-06-01 19:00:59.661 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 19:00:59.783 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:59.783 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 19:00:59.790 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-01 19:00:59.790 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 19:00:59.833 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:00:59.834 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 19:00:59.843 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test
2025-06-01 19:00:59.843 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 19:01:01.372 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:01:01.373 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:01:01.377 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:01:01.384 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:01:01.392 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:01:01.392 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:01:01.392 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:01:01.650 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:01:01 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 19:01:01.751 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:01:01.751 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:01:01.752 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:01:01.752 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:01:01.752 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:01:01.752 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:01:01.752 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:01:01.759 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 19:01:01.802 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:01:01.802 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:01:01.802 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:01:01.802 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:01:01.802 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:01:01.802 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:01:01.803 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:01:01.808 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:01:01 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 19:01:01.845 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:01:01.845 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:01:01.845 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:01:01.845 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:01:01.846 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:01:01.846 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:01:01.846 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:01:01.851 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 19:01:01.852 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:01:01 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 19:01:01.892 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:01:01.892 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:01:01.892 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:01:01.892 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:01:01.893 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:01:01.893 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:01:01.893 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:01:01.898 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:01:01 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 19:01:01.941 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:01:01.941 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:01:01.941 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:01:01.941 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:01:01.941 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:01:01.941 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:01:01.941 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:01:01.946 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 19:01:01.946 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:01:01 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-01 19:01:03.306 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:01:03.313 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:01:03.315 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 19:01:03.315 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 19:01:03.316 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:01:03.316 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:01:03.316 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:01:03.337 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:01:03.338 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:01:03.338 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 19:01:03.340 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:01:03.340 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-01 19:01:03.340 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-01 19:01:03.340 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:01:03.340 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:01:03.340 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:01:03.341 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:01:03.341 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:01:03.341 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-01 19:01:03.408 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:01:03.409 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-three
2025-06-01 19:01:03.409 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-three with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:01:03.409 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-three (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:01:03.409 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-three
2025-06-01 19:01:03.409 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:01:03.409 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-three
2025-06-01 19:01:03.410 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-three created successfully
2025-06-01 19:01:03.410 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:01:03.410 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-three
2025-06-01 19:01:03.457 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:01:03.457 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:01:03.457 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 19:01:03.457 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 19:01:03.457 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:01:03.457 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:01:03.457 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:01:03.458 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:01:03.458 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:01:03.458 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 19:01:03.494 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:01:03.494 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:01:03.494 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 19:01:03.494 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 19:01:03.495 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:01:03.495 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:01:03.495 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:01:03.495 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:01:03.495 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:01:03.495 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 19:01:03.495 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:01:03.495 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-01 19:01:03.495 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-01 19:01:03.495 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:01:03.495 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:01:03.495 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:01:03.496 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:01:03.496 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:01:03.496 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-01 19:02:21.360 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 19:02:21.361 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:02:21.362 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:21.363 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:02:21.364 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:21.364 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:21.364 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:02:21.365 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:21.365 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:02:21.378 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:02:21.378 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:21.378 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 19:02:21.379 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:02:21.379 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:21.379 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:21.379 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:02:21.379 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:21.379 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:02:21.380 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:02:21.380 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:21.380 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 19:02:21.380 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:21.382 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:21.387 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 19:02:21.392 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:21.392 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:21.392 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:21.455 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 19:02:21.600 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 19:02:21.601 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 19:02:21.601 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 19:02:21.630 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 19:02:21.632 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 19:02:21.633 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-01 19:02:21.636 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-01 19:02:21.637 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-01 19:02:21.642 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:02:21 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 19:02:21.652 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 19:02:21.654 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:02:21.702 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 19:02:21.702 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:02:21.702 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:21.702 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:02:21.702 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:21.702 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:21.702 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:02:21.702 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:21.702 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:02:21.703 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:02:21.703 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:21.703 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 19:02:21.703 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:02:21.703 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:21.703 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:21.703 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:02:21.703 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:21.703 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:02:21.704 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:02:21.704 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:21.704 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 19:02:21.704 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:21.704 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:21.704 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 19:02:21.705 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:21.706 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:21.706 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:21.707 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 19:02:21.711 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 19:02:21.712 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:02:21 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 19:02:21.721 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 19:02:21.721 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:02:21.757 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 19:02:21.757 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:02:21.757 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:21.757 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:02:21.757 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:21.757 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:21.758 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:02:21.759 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:02:21.759 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:21.759 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 19:02:21.759 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:21.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:21.759 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 19:02:21.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:21.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:21.759 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:21.760 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 19:02:21.761 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 19:02:21.761 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:02:21.793 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 19:02:21.793 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:02:21.793 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:21.793 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:02:21.793 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:21.793 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:21.793 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:02:21.793 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:21.793 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:21.794 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:21.795 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 19:02:21.795 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:21.795 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:21.795 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:21.796 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 19:02:21.799 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 19:02:21.799 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 19:02:21.799 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 19:02:21.800 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 19:02:21.800 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 19:02:21.800 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-01 19:02:21.800 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-01 19:02:21.801 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-01 19:02:21.802 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:02:21 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 19:02:21.803 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 19:02:21.803 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:02:21.834 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 19:02:21.834 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:02:21.834 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:21.834 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:21.835 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 19:02:21.836 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:21.836 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:21.836 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 19:02:21.836 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:21.836 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:21.836 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:21.837 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 19:02:21.840 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 19:02:21.841 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:02:21 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 19:02:21.842 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 19:02:21.842 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 19:02:21.889 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestErrorHandler - Error handling request: Test error message
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestErrorHandler.handleRequest(AbstractRequestHandlerTest.java:188)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-01 19:02:21.965 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestBadRequestHandler - Error handling request: Bad request error
java.lang.IllegalArgumentException: Bad request error
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestBadRequestHandler.handleRequest(AbstractRequestHandlerTest.java:198)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-01 19:02:22.006 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 19:02:22.038 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.038 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-01 19:02:22.038 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.038 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-01 19:02:22.043 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 19:02:22.043 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 19:02:22.043 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 19:02:22.072 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.072 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-01 19:02:22.072 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.072 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-01 19:02:22.076 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 19:02:22.076 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 19:02:22.076 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 19:02:22.112 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.112 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 19:02:22.117 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-01 19:02:22.117 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error calling test-service service
io.vertx.core.impl.NoStackTraceThrowable: Service unavailable
2025-06-01 19:02:22.117 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-01 19:02:22.148 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.148 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 19:02:22.152 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-01 19:02:22.153 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 19:02:22.183 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.183 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 19:02:22.190 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test
2025-06-01 19:02:22.190 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 19:02:22.225 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:22.225 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:22.225 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:22.225 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:02:22.225 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:22.225 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:22.225 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:22.229 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:02:22 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 19:02:22.258 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:22.258 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:22.258 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:22.258 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:02:22.258 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:22.258 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:22.258 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:22.263 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-06-01 19:02:22.294 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:22.294 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:22.294 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:22.294 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:02:22.294 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:22.294 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:22.294 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:22.299 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:02:22 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 19:02:22.327 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:22.327 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:22.327 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:22.327 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:02:22.328 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:22.328 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:22.328 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:22.331 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 19:02:22.332 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:02:22 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 19:02:22.360 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:22.360 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:22.360 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:22.360 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:02:22.360 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:22.360 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:22.360 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:22.364 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:02:22 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 19:02:22.394 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 19:02:22.394 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 19:02:22.394 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 19:02:22.394 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 19:02:22.394 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 19:02:22.394 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 19:02:22.394 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 19:02:22.398 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 19:02:22.398 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 11:02:22 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-01 19:02:22.431 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:02:22.431 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:02:22.431 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 19:02:22.431 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 19:02:22.432 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:02:22.432 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:22.432 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:02:22.432 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:02:22.432 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.432 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 19:02:22.433 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:02:22.433 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-01 19:02:22.433 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-01 19:02:22.433 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:02:22.433 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:22.433 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:02:22.433 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:02:22.433 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.433 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-01 19:02:22.462 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:02:22.462 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-three
2025-06-01 19:02:22.462 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-three with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 19:02:22.463 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-three (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 19:02:22.463 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-three
2025-06-01 19:02:22.463 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:22.463 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-three
2025-06-01 19:02:22.463 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-three created successfully
2025-06-01 19:02:22.463 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.463 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-three
2025-06-01 19:02:22.489 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:02:22.489 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:02:22.490 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 19:02:22.490 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 19:02:22.490 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:02:22.490 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:22.490 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:02:22.490 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:02:22.490 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.490 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 19:02:22.517 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 19:02:22.518 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 19:02:22.518 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 19:02:22.518 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 19:02:22.518 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 19:02:22.518 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:22.518 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 19:02:22.519 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 19:02:22.519 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.519 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 19:02:22.519 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 19:02:22.519 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-01 19:02:22.519 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-01 19:02:22.519 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 19:02:22.519 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 19:02:22.519 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 19:02:22.519 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 19:02:22.519 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 19:02:22.519 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-01 20:07:43.809 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:07:43.811 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:07:43.811 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:07:43.814 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:07:43.816 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:43.817 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:43.817 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:07:43.818 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:43.818 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:07:43.837 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:07:43.839 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:43.839 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:07:43.839 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:07:43.839 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:43.839 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:43.839 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:07:43.839 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:43.839 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:07:43.840 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:07:43.840 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:43.840 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:07:43.840 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:07:43.845 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:07:43.854 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:07:43.860 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:07:43.861 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:07:43.861 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:07:43.932 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:07:43.933 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:07:44.078 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id-2
2025-06-01 20:07:44.078 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-01 20:07:44.080 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id-2"}
2025-06-01 20:07:44.112 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id-2"}
2025-06-01 20:07:44.114 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 20:07:44.115 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.119 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.121 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.127 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:07:44 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 500 146 "-" "-"
2025-06-01 20:07:44.142 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:07:44.144 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:07:44.204 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:07:44.204 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:07:44.204 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:07:44.204 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:07:44.204 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:44.204 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:44.204 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:07:44.204 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:44.204 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:07:44.205 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:07:44.205 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:44.205 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:07:44.205 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:07:44.205 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:44.205 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:44.205 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:07:44.205 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:44.205 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:07:44.206 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:07:44.206 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:44.206 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:07:44.206 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:07:44.206 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:07:44.206 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:07:44.207 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:07:44.207 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:07:44.207 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:07:44.208 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:07:44.208 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:07:44.211 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 20:07:44.213 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:07:44 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 20:07:44.230 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:07:44.230 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:07:44.269 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:07:44.269 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:07:44.269 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:07:44.269 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:07:44.269 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:44.269 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:44.269 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:07:44.269 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:44.269 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:07:44.270 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:07:44.271 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:07:44.271 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:07:44.271 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:07:44.271 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:07:44.271 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:07:44.272 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:07:44.272 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:07:44.275 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:07:44.276 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:07:44.276 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 20:07:44.276 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 20:07:44.276 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 20:07:44.276 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.277 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.278 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.278 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:07:44 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 20:07:44.280 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:07:44.280 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:44.313 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:07:44.314 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:07:44.316 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:07:44.316 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:07:44.323 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one
2025-06-01 20:07:44.323 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one
2025-06-01 20:07:44.324 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"name":"New Item","description":"New Description"}
2025-06-01 20:07:44.324 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"name":"New Item","description":"New Description"}
2025-06-01 20:07:44.324 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 20:07:44.324 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler.doEnd(BodyHandlerImpl.java:359)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler.end(BodyHandlerImpl.java:336)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.http.impl.HttpEventHandler.handleEnd(HttpEventHandler.java:76)
	at io.vertx.core.http.impl.Http1xServerRequest.onEnd(Http1xServerRequest.java:595)
	at io.vertx.core.http.impl.Http1xServerRequest.lambda$pendingQueue$1(Http1xServerRequest.java:133)
	at io.vertx.core.streams.impl.InboundBuffer.handleEvent(InboundBuffer.java:255)
	at io.vertx.core.streams.impl.InboundBuffer.write(InboundBuffer.java:134)
	at io.vertx.core.http.impl.Http1xServerRequest.handleEnd(Http1xServerRequest.java:576)
	at io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:76)
	at io.vertx.core.impl.DuplicatedContext.execute(DuplicatedContext.java:174)
	at io.vertx.core.http.impl.Http1xServerConnection.onEnd(Http1xServerConnection.java:221)
	at io.vertx.core.http.impl.Http1xServerConnection.onContent(Http1xServerConnection.java:209)
	at io.vertx.core.http.impl.Http1xServerConnection.handleOther(Http1xServerConnection.java:189)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:176)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.324 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler.doEnd(BodyHandlerImpl.java:359)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler.end(BodyHandlerImpl.java:336)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.http.impl.HttpEventHandler.handleEnd(HttpEventHandler.java:76)
	at io.vertx.core.http.impl.Http1xServerRequest.onEnd(Http1xServerRequest.java:595)
	at io.vertx.core.http.impl.Http1xServerRequest.lambda$pendingQueue$1(Http1xServerRequest.java:133)
	at io.vertx.core.streams.impl.InboundBuffer.handleEvent(InboundBuffer.java:255)
	at io.vertx.core.streams.impl.InboundBuffer.write(InboundBuffer.java:134)
	at io.vertx.core.http.impl.Http1xServerRequest.handleEnd(Http1xServerRequest.java:576)
	at io.vertx.core.impl.EventLoopContext.execute(EventLoopContext.java:76)
	at io.vertx.core.impl.DuplicatedContext.execute(DuplicatedContext.java:174)
	at io.vertx.core.http.impl.Http1xServerConnection.onEnd(Http1xServerConnection.java:221)
	at io.vertx.core.http.impl.Http1xServerConnection.onContent(Http1xServerConnection.java:209)
	at io.vertx.core.http.impl.Http1xServerConnection.handleOther(Http1xServerConnection.java:189)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:176)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.325 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.325 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:07:44 GMT] "POST /api/service-one HTTP/1.1" 500 136 "-" "-"
2025-06-01 20:07:44.327 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:07:44.327 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:07:44.358 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:07:44.358 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:07:44.359 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:07:44.360 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:44.360 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:07:44.360 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:07:44.360 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:07:44.360 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:07:44.360 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:07:44.360 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:07:44.360 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:07:44.361 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:07:44.361 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:07:44.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:07:44.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:07:44.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 20:07:44.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 20:07:44.365 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 20:07:44.365 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.366 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.366 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:07:44.367 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:07:44 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 20:07:44.369 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:07:44.370 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:07:44.401 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:07:44.402 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:07:44.404 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:07:44.404 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:07:44.406 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 20:07:44.407 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:07:44 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 20:07:44.409 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:07:44.409 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:08:27.832 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:08:27.834 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:08:27.834 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:08:27.836 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:08:27.838 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:27.838 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:27.839 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:08:27.839 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:27.839 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:08:27.855 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:08:27.856 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:27.856 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:08:27.856 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:08:27.856 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:27.856 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:27.856 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:08:27.856 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:27.856 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:08:27.857 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:08:27.857 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:27.857 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:08:27.857 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:08:27.861 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:08:27.868 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:08:27.875 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:08:27.876 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:08:27.876 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:08:27.944 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:08:27.944 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:08:28.071 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id-2
2025-06-01 20:08:28.071 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-01 20:08:28.072 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-01 20:08:28.096 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-01 20:08:28.099 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 20:08:28.099 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 20:08:28.100 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 20:08:28.104 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:08:28 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 200 74 "-" "-"
2025-06-01 20:08:28.133 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:08:28.134 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:08:28.194 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:08:28.194 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:08:28.194 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:08:28.194 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:08:28.194 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:28.194 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:28.194 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:08:28.194 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:28.194 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:08:28.195 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:08:28.195 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:28.195 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:08:28.195 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:08:28.195 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:28.195 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:28.195 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:08:28.195 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:28.195 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:08:28.196 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:08:28.196 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:28.196 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:08:28.196 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:08:28.196 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:08:28.196 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:08:28.196 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:08:28.196 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:08:28.197 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:08:28.198 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:08:28.198 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:08:28.201 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 20:08:28.203 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:08:28 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 20:08:28.205 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:08:28.205 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:08:28.242 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:08:28.242 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:08:28.242 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:08:28.242 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:08:28.242 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:28.242 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:28.242 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:08:28.242 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:28.242 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:08:28.242 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:08:28.243 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:08:28.244 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:08:28.244 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:08:28.244 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:08:28.245 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:08:28.245 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:08:28.248 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:08:28.248 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:08:28.248 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 20:08:28.248 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 20:08:28.249 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-01 20:08:28.249 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:08:28.251 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:08:28.252 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:08:28.252 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:08:28 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 120 "-" "-"
2025-06-01 20:08:28.254 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:08:28.254 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:08:28.288 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:08:28.288 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:08:28.288 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:08:28.288 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:08:28.288 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:28.288 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:28.288 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:08:28.288 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:28.288 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:08:28.288 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:08:28.289 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:08:28.290 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:08:28.290 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:08:28.290 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:08:28.291 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:08:28.291 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:08:28.296 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one
2025-06-01 20:08:28.297 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one
2025-06-01 20:08:28.297 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"name":"New Item","description":"New Description"}
2025-06-01 20:08:28.297 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"name":"New Item","description":"New Description"}
2025-06-01 20:08:28.297 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 20:08:28.297 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 20:08:28.297 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 20:08:28.298 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:08:28 GMT] "POST /api/service-one HTTP/1.1" 200 65 "-" "-"
2025-06-01 20:08:28.299 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:08:28.299 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:28.332 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:08:28.333 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:08:28.333 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:28.333 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:08:28.333 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:08:28.333 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:08:28.333 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:08:28.333 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:08:28.333 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:08:28.333 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:08:28.334 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:08:28.334 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:08:28.337 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:08:28.337 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:08:28.337 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 20:08:28.338 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 20:08:28.338 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:08:28.338 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:08:28.338 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:08:28.339 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:08:28 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 68 "-" "-"
2025-06-01 20:08:28.340 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:08:28.340 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:08:28.378 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:08:28.379 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:08:28.380 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:08:28.381 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:08:28.383 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 20:08:28.384 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:08:28 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 20:08:28.385 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:08:28.386 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:11:24.764 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:11:24.765 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-01 20:11:24.766 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:11:24.767 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-01 20:11:25.011 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:11:25.011 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:11:25.012 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:11:25.131 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:11:25.131 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-01 20:11:25.131 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:11:25.131 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-01 20:11:25.137 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 20:11:25.137 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 20:11:25.137 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:12:01.634 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestErrorHandler - Error handling request: Test error message
java.lang.RuntimeException: Test error message
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestErrorHandler.handleRequest(AbstractRequestHandlerTest.java:188)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:12:01.802 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.AbstractRequestHandlerTest$TestBadRequestHandler - Error handling request: Bad request error
java.lang.IllegalArgumentException: Bad request error
	at dev.mars.vertx.gateway.handler.AbstractRequestHandlerTest$TestBadRequestHandler.handleRequest(AbstractRequestHandlerTest.java:198)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:12:04.194 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 20:12:05.891 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:05.892 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-01 20:12:05.893 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:05.894 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-01 20:12:06.127 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:12:06.127 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:12:06.127 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:12:06.242 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:06.242 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-one
2025-06-01 20:12:06.242 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:06.242 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service-two
2025-06-01 20:12:06.248 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 20:12:06.248 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 20:12:06.248 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:12:07.768 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:07.769 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 20:12:07.988 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-01 20:12:07.989 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error calling test-service service
io.vertx.core.impl.NoStackTraceThrowable: Service unavailable
2025-06-01 20:12:07.990 [vert.x-eventloop-thread-0] ERROR d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FailedFuture.onFailure(FailedFuture.java:91)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:40)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:12:08.102 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:08.102 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 20:12:08.107 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test/test-id
2025-06-01 20:12:08.107 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:12:08.144 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:08.144 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: test-service
2025-06-01 20:12:08.152 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Handling test-service service request: /api/test
2025-06-01 20:12:08.153 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.h.ServiceRequestHandlerTest$TestServiceRequestHandler - Received response from test-service service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 20:12:26.128 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:12:26.129 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:12:26.133 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:12:26.141 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:12:26.149 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:12:26.151 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:12:26.151 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:12:26.400 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:12:26 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 20:12:26.491 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:12:26.491 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:12:26.491 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:12:26.491 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:12:26.491 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:12:26.491 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:12:26.491 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:12:26.504 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:12:26.544 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:12:26.544 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:12:26.544 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:12:26.544 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:12:26.545 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:12:26.545 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:12:26.545 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:12:26.551 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:12:26 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 20:12:26.585 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:12:26.585 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:12:26.585 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:12:26.585 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:12:26.585 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:12:26.585 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:12:26.585 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:12:26.590 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 20:12:26.590 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:12:26 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 20:12:26.623 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:12:26.623 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:12:26.623 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:12:26.623 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:12:26.623 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:12:26.623 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:12:26.623 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:12:26.627 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:12:26 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 20:12:26.663 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:12:26.664 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:12:26.664 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:12:26.664 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:12:26.664 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:12:26.664 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:12:26.664 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:12:26.668 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 20:12:26.669 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:12:26 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-01 20:12:44.048 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:12:44.052 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:12:44.054 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 20:12:44.055 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 20:12:44.055 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:12:44.056 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:12:44.056 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:12:44.074 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:12:44.075 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:44.075 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 20:12:44.076 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:12:44.076 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-01 20:12:44.077 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-01 20:12:44.077 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:12:44.077 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:12:44.077 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:12:44.077 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:12:44.077 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:44.077 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-01 20:12:44.147 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:12:44.148 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-three
2025-06-01 20:12:44.148 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-three with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:12:44.148 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-three (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:12:44.148 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-three
2025-06-01 20:12:44.148 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:12:44.148 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-three
2025-06-01 20:12:44.149 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-three created successfully
2025-06-01 20:12:44.149 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:44.149 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-three
2025-06-01 20:12:44.188 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:12:44.189 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:12:44.189 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 20:12:44.189 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 20:12:44.189 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:12:44.189 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:12:44.189 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:12:44.190 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:12:44.190 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:44.190 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 20:12:44.224 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:12:44.224 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:12:44.224 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=3, timeout=5000, resetTimeout=10000
2025-06-01 20:12:44.224 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=3, timeout=5000ms, resetTimeout=10000ms)
2025-06-01 20:12:44.224 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:12:44.224 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:12:44.224 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:12:44.225 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:12:44.225 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:44.225 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one.address
2025-06-01 20:12:44.225 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:12:44.225 [main] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=7000, resetTimeout=15000
2025-06-01 20:12:44.225 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=7000ms, resetTimeout=15000ms)
2025-06-01 20:12:44.225 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:12:44.225 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:12:44.225 [main] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:12:44.225 [main] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:12:44.225 [main] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:12:44.226 [main] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two.address
2025-06-01 20:15:29.480 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:29.481 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:29.482 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:29.483 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:29.485 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:29.485 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:29.485 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:29.486 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:29.486 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:29.500 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:29.501 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:29.502 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:15:29.502 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:29.502 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:29.502 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:29.502 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:29.502 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:29.502 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:29.503 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:29.503 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:29.503 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:15:29.503 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:29.506 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:29.513 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:29.520 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:29.520 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:29.520 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:29.588 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:15:29.589 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:15:29.715 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id-2
2025-06-01 20:15:29.715 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-01 20:15:29.716 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-01 20:15:29.741 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-01 20:15:29.744 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 20:15:29.745 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 20:15:29.745 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 20:15:29.749 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:15:29 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 200 74 "-" "-"
2025-06-01 20:15:29.781 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:29.782 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:15:29.847 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:29.847 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:29.847 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:29.847 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:29.847 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:29.847 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:29.848 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:29.848 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:29.848 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:29.849 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:29.849 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:29.849 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:15:29.849 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:29.849 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:29.849 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:29.849 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:29.849 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:29.849 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:29.850 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:29.850 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:29.851 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:15:29.851 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:29.851 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:29.851 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:29.851 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:29.852 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:29.852 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:29.854 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:15:29.854 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:15:29.857 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 20:15:29.858 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:15:29 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 20:15:29.862 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:29.862 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:15:29.900 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:29.900 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:29.900 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:29.900 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:29.900 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:29.900 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:29.900 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:29.900 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:29.900 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:29.901 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:29.901 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:29.901 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:15:29.901 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:29.901 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:29.901 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:29.901 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:29.901 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:29.901 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:29.901 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:29.902 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:29.902 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:15:29.902 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:29.902 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:29.902 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:29.902 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:29.902 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:29.902 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:29.903 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:15:29.903 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:15:29.906 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:15:29.906 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:15:29.907 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 20:15:29.907 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 20:15:29.907 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-01 20:15:29.907 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:15:29.910 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:15:29.910 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:15:29.910 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:15:29 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 120 "-" "-"
2025-06-01 20:15:29.912 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:29.912 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:15:29.945 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:29.946 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:29.947 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:29.949 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:15:29.949 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:15:29.956 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one
2025-06-01 20:15:29.956 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one
2025-06-01 20:15:29.956 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"name":"New Item","description":"New Description"}
2025-06-01 20:15:29.956 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"name":"New Item","description":"New Description"}
2025-06-01 20:15:29.957 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 20:15:29.957 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 20:15:29.957 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 20:15:29.957 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:15:29 GMT] "POST /api/service-one HTTP/1.1" 200 65 "-" "-"
2025-06-01 20:15:29.959 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:29.959 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:29.991 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:29.992 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:29.992 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:29.992 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:15:29.992 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:29.992 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:29.992 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:29.992 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:29.992 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:29.992 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:29.993 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:15:29.994 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:15:29.996 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:15:29.996 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:15:29.996 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 20:15:29.996 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 20:15:29.997 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:15:29.997 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:15:29.997 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 20:15:29.997 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:15:29 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 68 "-" "-"
2025-06-01 20:15:29.999 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:29.999 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:15:30.035 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:30.035 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:30.035 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:30.035 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:30.035 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:30.035 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:30.035 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:30.035 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:30.035 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:30.036 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:30.037 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:30.037 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:30.038 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 20:15:30.038 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 20:15:30.041 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 20:15:30.042 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:15:30 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 20:15:30.044 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:30.044 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:15:32.360 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:32.361 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:32.362 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:32.364 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:32.365 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:32.366 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:32.366 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:32.367 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:32.367 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:32.388 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:32.388 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:32.389 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:15:32.389 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:32.389 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:32.389 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:32.389 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:32.389 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:32.389 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:32.390 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:32.390 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:32.390 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:15:32.390 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:32.393 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:32.399 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:32.406 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:32.406 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:32.407 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:32.479 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:15:32.620 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 20:15:32.620 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 20:15:32.621 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 20:15:32.644 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 20:15:32.647 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 20:15:32.648 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:15:32.654 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:15:32.655 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:15:32.663 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:15:32 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 20:15:32.677 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:32.679 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:15:32.742 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:32.742 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:32.742 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:32.743 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:32.744 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:32.744 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:32.744 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:32.744 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:32.744 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:32.744 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:32.744 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:15:32.744 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:32.744 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:32.744 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:32.745 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:32.745 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:32.745 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:32.746 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:15:32.750 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 20:15:32.751 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:15:32 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 20:15:32.768 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:32.768 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:15:32.806 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:32.806 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:32.806 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:32.806 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:32.806 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:32.806 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:32.806 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:32.806 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:32.806 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:32.807 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:32.809 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:15:32.810 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:32.810 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:32.848 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:32.849 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:32.851 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:15:32.854 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:15:32.854 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:15:32.854 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 20:15:32.854 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 20:15:32.855 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 20:15:32.855 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:15:32.855 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$2(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:15:32.855 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:15:32.856 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:15:32 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 20:15:32.857 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:32.858 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:15:32.890 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:15:32.891 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:15:32.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:15:32.892 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:15:32.892 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully
2025-06-01 20:15:32.893 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:15:32.896 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 20:15:32.897 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:15:32 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 20:15:32.898 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:15:32.899 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:34:21.183 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:34:21.185 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:34:21.185 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:21.187 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:34:21.189 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:21.189 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:21.189 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:34:21.190 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:21.190 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:34:21.206 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:34:21.207 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:21.207 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:34:21.208 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:34:21.208 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:21.208 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:21.208 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:34:21.208 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:21.208 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:34:21.208 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:34:21.209 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:21.209 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:34:21.209 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:21.460 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:21.460 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:21.460 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:21.460 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:21.460 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:21.460 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:21.485 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:21.486 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:34:21.486 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:21.491 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:21.491 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:21.491 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:21.492 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:21.537 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:34:21.675 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:21 GMT] "GET /swagger-ui HTTP/1.1" 302 0 "-" "-"
2025-06-01 20:34:21.676 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /swagger-ui
2025-06-01 20:34:21.676 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:21.676 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:109)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.680 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:268)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:109)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.698 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:34:21.699 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:34:21.792 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: null
2025-06-01 20:34:21.792 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.handler.impl.StaticHandlerImpl.lambda$null$0(StaticHandlerImpl.java:338)
	at io.vertx.ext.web.handler.impl.StaticHandlerImpl.getFileProps(StaticHandlerImpl.java:386)
	at io.vertx.ext.web.handler.impl.StaticHandlerImpl.lambda$sendStatic$1(StaticHandlerImpl.java:295)
	at io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)
	at io.vertx.core.impl.future.FutureBase.lambda$emitSuccess$0(FutureBase.java:54)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.844 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:34:21.844 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:34:21.844 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:21.844 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:34:21.844 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:21.844 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:21.844 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:34:21.844 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:21.844 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:34:21.845 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:34:21.845 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:21.845 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:34:21.845 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:34:21.845 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:21.845 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:21.845 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:34:21.845 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:21.845 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:34:21.845 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:34:21.846 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:21.846 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:34:21.846 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:21.864 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:21.865 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:21.865 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:21.865 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:21.865 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:21.865 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:21.866 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:21.866 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:34:21.866 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:21.866 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:21.866 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:21.866 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:21.866 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:21.868 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:34:21.879 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 20:34:21.879 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 20:34:21.879 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 20:34:21.883 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 20:34:21.886 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 20:34:21.886 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:99)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.888 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-two/test-id
2025-06-01 20:34:21.889 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:21 GMT] "GET /api/service-two/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 20:34:21.889 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:21.889 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.889 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:109)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.890 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:99)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.890 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.890 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendError(AbstractRequestHandler.java:66)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handleError(AbstractRequestHandler.java:49)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.892 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:34:21.893 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:34:21.930 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:21.943 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:21.943 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:21.943 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:21.943 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:21.943 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:21.943 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:21.944 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:21.944 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:34:21.944 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:21.945 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:21.945 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:21.945 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:21.945 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:21.946 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:34:21.950 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 20:34:21.951 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:21 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 20:34:21.951 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /health
2025-06-01 20:34:21.951 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:21.952 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.952 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:268)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.952 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:21.952 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:105)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:21.957 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:34:21.957 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:34:21.994 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:34:21.995 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:22.007 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:22.008 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:22.008 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:22.008 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:22.008 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:22.008 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:22.010 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:22.010 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:34:22.010 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:22.010 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:22.010 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:22.010 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:22.010 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:22.012 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:34:22.016 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:22 GMT] "GET /docs HTTP/1.1" 302 0 "-" "-"
2025-06-01 20:34:22.016 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /docs
2025-06-01 20:34:22.016 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:22.016 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.016 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:268)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.017 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:22.017 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:105)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.019 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:34:22.020 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:34:22.053 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:22.054 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:34:22.055 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:34:22.055 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:22.055 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:34:22.055 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:22.065 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:22.065 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:22.065 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:22.065 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:22.065 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:22.065 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:22.066 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:22.066 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:34:22.066 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:22.067 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:22.067 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:22.067 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:22.067 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:22.068 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:34:22.072 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:34:22.073 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:34:22.111 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:34:22.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:34:22.111 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:22.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:34:22.111 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:22.111 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:22.111 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:34:22.111 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:22.111 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:34:22.112 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:22.121 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:22.121 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:22.121 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:22.121 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:22.121 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:22.121 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:22.123 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:22.123 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:34:22.123 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:22.123 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:22.123 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:22.123 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:22.123 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:22.124 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:34:22.147 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /openapi.yaml
2025-06-01 20:34:22.147 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:22.147 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.148 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:268)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.148 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:22.148 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:105)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.150 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:22 GMT] "GET /openapi.yaml HTTP/1.1" 200 7137 "-" "-"
2025-06-01 20:34:22.151 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:34:22.151 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:34:22.188 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:34:22.189 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:22.198 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:22.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:22.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:22.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:22.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:22.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:22.200 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:22.200 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:34:22.200 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:22.200 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:22.200 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:22.200 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:22.200 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:22.201 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:34:22.205 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:34:22.205 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:34:22.205 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 20:34:22.205 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 20:34:22.205 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 20:34:22.205 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:99)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.206 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 20:34:22.206 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:22 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 20:34:22.206 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:22.206 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.207 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:109)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.207 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:99)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.208 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.208 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendError(AbstractRequestHandler.java:66)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handleError(AbstractRequestHandler.java:49)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.209 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:34:22.209 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:34:22.243 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:34:22.243 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:34:22.243 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:22.243 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:34:22.243 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:22.243 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:22.243 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:34:22.243 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:22.243 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:34:22.244 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:22.253 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:22.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:22.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:22.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:22.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:22.253 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:22.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:22.254 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:34:22.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:22.254 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:22.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:22.254 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:22.254 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:22.256 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:34:22.259 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 20:34:22.260 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:22 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 20:34:22.260 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:22.260 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.260 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.261 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:22.261 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:105)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:22.264 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:34:22.264 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:34:55.322 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:55.323 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:55.591 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:55.592 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:55.593 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:55.594 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:55.594 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:55.594 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:55.619 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:55.621 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:34:55.621 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:55.627 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:55.627 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:55.627 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:55.628 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:55.820 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:55 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 20:34:55.820 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-two/test-id
2025-06-01 20:34:55.820 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:55.820 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:55.822 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:268)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:55.823 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:55.823 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:105)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:55.894 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:55.895 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:55.915 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:55.915 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:55.915 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:55.915 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:55.915 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:55.916 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:55.917 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:55.917 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:34:55.917 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:55.918 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:55.918 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:55.918 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:55.918 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:55.925 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:55 GMT] "OPTIONS /api/service-one/test-id HTTP/1.1" 204 0 "-" "-"
2025-06-01 20:34:55.925 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 20:34:55.925 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:55.926 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:55.926 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:268)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:55.926 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:55.926 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:105)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:55.928 [vert.x-eventloop-thread-1] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:55.971 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:55.971 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:55.986 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:55.986 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:55.986 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:55.986 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:55.986 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:55.986 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:55.987 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:55.987 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:34:55.987 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:55.987 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:55.987 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:55.988 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:55.988 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:55.993 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:55 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 20:34:55.993 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /health
2025-06-01 20:34:55.993 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:55.993 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:55.994 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:268)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:55.994 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:55.994 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:105)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:56.034 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:56.034 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:56.048 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:56.048 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:56.048 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:56.048 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:56.048 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:56.048 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:56.050 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:56.051 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:34:56.051 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:56.051 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:56.051 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:56.051 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:56.051 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:56.055 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 20:34:56.056 [vert.x-eventloop-thread-1] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:56 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 20:34:56.056 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:56.056 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:56.056 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:56.057 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:56.057 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:105)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:56.095 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:56.095 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:56.106 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:56.106 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:56.106 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:56.106 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:56.106 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:56.106 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:56.108 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:56.108 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:34:56.108 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:56.108 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:56.108 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:56.109 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:56.109 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:56.115 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:56 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 20:34:56.115 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 20:34:56.115 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:56.115 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:56.115 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:268)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:113)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:56.115 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:34:56.115 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:105)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:56.158 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:34:56.158 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:34:56.169 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:34:56.169 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:34:56.169 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:34:56.169 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:34:56.169 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:34:56.169 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:34:56.171 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:34:56.171 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:34:56.171 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:34:56.171 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:34:56.171 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:34:56.171 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:34:56.171 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:34:56.178 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 20:34:56.178 [vert.x-eventloop-thread-1] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:34:56 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-01 20:34:56.179 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error
	at dev.mars.vertx.gateway.router.RouterFactoryTest$TestServiceHandler.handle(RouterFactoryTest.java:338)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:99)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:56.179 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 20:34:56.179 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:294)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:109)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:34:56.179 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error
	at dev.mars.vertx.gateway.router.RouterFactoryTest$TestServiceHandler.handle(RouterFactoryTest.java:338)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:99)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:108)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:104)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:20.826 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:20.827 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:21.095 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:21.095 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:21.096 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:21.097 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:21.097 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:21.097 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:21.097 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:21.097 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:21.097 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:21.121 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:21.122 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:43:21.122 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:21.127 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:21.127 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:21.127 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:21.128 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:21.310 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:21 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 20:43:21.310 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-two/test-id
2025-06-01 20:43:21.310 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:21.310 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.313 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.313 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:21.313 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.390 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:21.390 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:21.414 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:21.415 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:21.415 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:21.415 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:21.415 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:21.415 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:21.415 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:21.415 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:21.415 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:21.416 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:21.416 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:43:21.417 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:21.417 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:21.417 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:21.417 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:21.417 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:21.423 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:21 GMT] "OPTIONS /api/service-one/test-id HTTP/1.1" 204 0 "-" "-"
2025-06-01 20:43:21.424 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 20:43:21.424 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:21.424 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.424 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.425 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:21.425 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.426 [vert.x-eventloop-thread-1] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.466 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:21.466 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:21.481 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:21.481 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:21.481 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:21.481 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:21.481 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:21.481 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:21.481 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:21.481 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:21.481 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:21.482 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:21.482 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:43:21.483 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:21.483 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:21.483 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:21.483 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:21.483 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:21.488 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:21 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 20:43:21.488 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /health
2025-06-01 20:43:21.488 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:21.489 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.489 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.489 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:21.489 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.533 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:21.534 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:21.554 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:21.554 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:21.554 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:21.554 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:21.554 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:21.554 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:21.554 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:21.554 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:21.554 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:21.557 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:21.557 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:43:21.557 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:21.557 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:21.557 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:21.557 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:21.557 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:21.562 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 20:43:21.562 [vert.x-eventloop-thread-1] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:21 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 20:43:21.563 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:21.563 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.563 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.563 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:21.564 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.603 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:21.603 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:21.616 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:21.616 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:21.616 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:21.616 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:21.616 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:21.616 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:21.616 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:21.617 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:21.617 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:21.618 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:21.618 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:43:21.618 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:21.618 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:21.618 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:21.618 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:21.618 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:21.623 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:21 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 20:43:21.623 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 20:43:21.623 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:21.623 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.624 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.624 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:21.624 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.661 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:21.661 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:21.673 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:21.674 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:21.674 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:21.674 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:21.674 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:21.674 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:21.674 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:21.674 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:21.674 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:21.676 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:21.676 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 20:43:21.676 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:21.677 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:21.677 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:21.677 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:21.677 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:21.682 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 20:43:21.683 [vert.x-eventloop-thread-1] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:21 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-01 20:43:21.683 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error
	at dev.mars.vertx.gateway.router.RouterFactoryTest$TestServiceHandler.handle(RouterFactoryTest.java:338)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.683 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 20:43:21.683 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:21.683 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error
	at dev.mars.vertx.gateway.router.RouterFactoryTest$TestServiceHandler.handle(RouterFactoryTest.java:338)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:40.998 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:43:41.000 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:43:41.001 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:41.002 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:43:41.004 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.005 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.005 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:43:41.005 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.005 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:43:41.023 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:43:41.024 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.024 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:43:41.025 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:43:41.025 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.025 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:43:41.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.025 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:43:41.026 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:43:41.026 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.026 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:43:41.026 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:41.293 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:41.293 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:41.293 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:41.293 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:41.293 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:41.293 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:41.293 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:41.293 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:41.293 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:41.319 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:41.321 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:43:41.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:41.325 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:41.325 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:41.325 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:41.326 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:41.369 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:43:41.502 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:41 GMT] "GET /swagger-ui HTTP/1.1" 302 0 "-" "-"
2025-06-01 20:43:41.502 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /swagger-ui
2025-06-01 20:43:41.502 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:41.502 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.504 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.523 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:43:41.524 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:43:41.617 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: null
2025-06-01 20:43:41.617 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.handler.impl.StaticHandlerImpl.lambda$null$0(StaticHandlerImpl.java:338)
	at io.vertx.ext.web.handler.impl.StaticHandlerImpl.getFileProps(StaticHandlerImpl.java:386)
	at io.vertx.ext.web.handler.impl.StaticHandlerImpl.lambda$sendStatic$1(StaticHandlerImpl.java:295)
	at io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)
	at io.vertx.core.impl.future.FutureBase.lambda$emitSuccess$0(FutureBase.java:54)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.666 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:43:41.666 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:43:41.666 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:41.666 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:43:41.667 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.667 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.667 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:43:41.667 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.667 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:43:41.668 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:41.693 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:41.693 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:41.693 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:41.693 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:41.693 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:41.693 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:41.693 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:41.693 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:41.693 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:41.696 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:41.696 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:43:41.696 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:41.696 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:41.696 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:41.696 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:41.696 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:41.698 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:43:41.706 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 20:43:41.706 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 20:43:41.707 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 20:43:41.710 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 20:43:41.713 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 20:43:41.713 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.714 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-two/test-id
2025-06-01 20:43:41.715 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:41 GMT] "GET /api/service-two/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 20:43:41.715 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:41.715 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.716 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.717 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.718 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.718 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendError(AbstractRequestHandler.java:66)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handleError(AbstractRequestHandler.java:49)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.720 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:43:41.720 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:43:41.755 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:43:41.755 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:43:41.755 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:41.755 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:43:41.755 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.755 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.755 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:43:41.755 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.755 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:43:41.756 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:41.771 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:41.771 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:41.771 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:41.771 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:41.771 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:41.771 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:41.771 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:41.771 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:41.771 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:41.772 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:41.773 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:43:41.773 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:41.773 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:41.773 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:41.773 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:41.773 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:41.774 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:43:41.777 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 20:43:41.779 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:41 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 20:43:41.779 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /health
2025-06-01 20:43:41.779 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:41.779 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.780 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.780 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:41.780 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.784 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:43:41.784 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.820 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:43:41.821 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:43:41.821 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.821 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:43:41.821 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:41.834 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:41.834 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:41.834 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:41.834 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:41.834 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:41.834 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:41.834 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:41.834 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:41.834 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:41.836 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:41.836 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:43:41.836 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:41.836 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:41.836 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:41.836 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:41.836 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:41.838 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:43:41.841 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:41 GMT] "GET /docs HTTP/1.1" 302 0 "-" "-"
2025-06-01 20:43:41.841 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /docs
2025-06-01 20:43:41.841 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:41.841 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.841 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.841 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:41.841 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.844 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:43:41.845 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:43:41.885 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:43:41.886 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:41.898 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:41.898 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:41.898 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:41.898 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:41.898 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:41.898 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:41.898 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:41.898 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:41.898 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:41.901 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:41.901 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:43:41.901 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:41.901 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:41.901 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:41.901 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:41.901 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:41.903 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:43:41.904 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:43:41.904 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:43:41.946 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:43:41.946 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:43:41.946 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:41.946 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:43:41.946 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.946 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.946 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:43:41.946 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.946 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:43:41.947 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:41.958 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:41.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:41.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:41.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:41.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:41.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:41.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:41.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:41.959 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:41.961 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:41.961 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:43:41.961 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:41.961 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:41.961 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:41.962 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:41.962 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:41.963 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:43:41.988 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /openapi.yaml
2025-06-01 20:43:41.988 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:41.988 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.989 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.989 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:41.989 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:41.991 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:41 GMT] "GET /openapi.yaml HTTP/1.1" 200 10827 "-" "-"
2025-06-01 20:43:41.992 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:43:41.992 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:43:42.027 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:43:42.028 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:42.039 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:42.039 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:42.039 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:42.039 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:42.039 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:42.039 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:42.039 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:42.039 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:42.039 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:42.042 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:42.042 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:43:42.042 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:42.042 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:42.042 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:42.042 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:42.042 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:42.044 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:43:42.047 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 20:43:42.047 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 20:43:42.047 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 20:43:42.048 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 20:43:42.048 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 20:43:42.048 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:42.048 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 20:43:42.049 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:42 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 20:43:42.049 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:42.049 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:42.049 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:42.050 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:42.050 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:42.050 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendError(AbstractRequestHandler.java:66)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handleError(AbstractRequestHandler.java:49)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:42.051 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:43:42.051 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 20:43:42.087 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 20:43:42.088 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 20:43:42.088 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 20:43:42.100 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 20:43:42.100 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 20:43:42.101 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 20:43:42.101 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 20:43:42.101 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 20:43:42.101 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 20:43:42.101 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 20:43:42.101 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 20:43:42.101 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 20:43:42.102 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 20:43:42.102 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 20:43:42.102 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 20:43:42.102 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 20:43:42.102 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 20:43:42.102 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 20:43:42.102 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 20:43:42.104 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 20:43:42.107 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 20:43:42.107 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 12:43:42 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 20:43:42.108 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:42.108 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:42.108 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:42.108 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 20:43:42.109 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 20:43:42.113 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 20:43:42.114 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:25:34.061 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:25:34.062 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:25:34.063 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:25:34.066 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:25:34.069 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.070 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.070 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:25:34.071 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.071 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:25:34.088 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:25:34.089 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.089 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:25:34.090 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:25:34.090 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.090 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.090 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:25:34.090 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.091 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:25:34.092 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:25:34.092 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.092 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:25:34.092 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:25:34.372 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:25:34.372 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:25:34.373 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:25:34.373 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:25:34.373 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:25:34.373 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:25:34.373 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:25:34.373 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:25:34.373 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:25:34.406 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:25:34.409 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:25:34.409 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:25:34.414 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:25:34.414 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:25:34.414 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:25:34.415 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:25:34.473 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:25:34.473 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:25:34.615 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id-2
2025-06-01 21:25:34.615 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-01 21:25:34.617 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-01 21:25:34.622 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-01 21:25:34.624 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-two/test-id-2
2025-06-01 21:25:34.627 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:25:34 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 404 113 "-" "-"
2025-06-01 21:25:34.628 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:25:34.628 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.630 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.632 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:25:34.633 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:25:34.634 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:25:34.634 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:193)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:68)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendResponse(AbstractRequestHandler.java:79)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$0(ServiceRequestHandler.java:38)
	at io.vertx.core.impl.future.FutureImpl$1.onSuccess(FutureImpl.java:91)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onSuccess(FutureImpl.java:262)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:246)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.647 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:25:34.649 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:25:34.703 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:25:34.704 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:25:34.704 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:25:34.704 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:25:34.704 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.704 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.704 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:25:34.704 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.704 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:25:34.705 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:25:34.705 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.705 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:25:34.705 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:25:34.705 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.705 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.705 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:25:34.705 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.705 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:25:34.706 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:25:34.706 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.706 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:25:34.706 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:25:34.731 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:25:34.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:25:34.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:25:34.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:25:34.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:25:34.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:25:34.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:25:34.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:25:34.731 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:25:34.733 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:25:34.733 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:25:34.733 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:25:34.733 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:25:34.733 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:25:34.733 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:25:34.733 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:25:34.735 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:25:34.735 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:25:34.739 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:25:34.740 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:25:34 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:25:34.741 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /health
2025-06-01 21:25:34.741 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:25:34.741 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.741 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.742 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:25:34.742 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.746 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:25:34.746 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.788 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.789 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:25:34.789 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.789 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:25:34.789 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:25:34.789 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.789 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:25:34.789 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:25:34.805 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:25:34.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:25:34.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:25:34.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:25:34.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:25:34.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:25:34.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:25:34.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:25:34.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:25:34.807 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:25:34.807 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:25:34.807 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:25:34.807 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:25:34.807 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:25:34.807 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:25:34.807 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:25:34.808 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:25:34.808 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:25:34.811 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:25:34.811 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:25:34.811 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:25:34.811 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:25:34.811 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:25:34.812 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:25:34 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 21:25:34.812 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:25:34.812 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.812 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.813 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-01 21:25:34.813 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.814 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.814 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.815 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendError(AbstractRequestHandler.java:66)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handleError(AbstractRequestHandler.java:49)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.815 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:25:34.815 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:25:34.853 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:25:34.853 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:25:34.853 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:25:34.853 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:25:34.853 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.853 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:25:34.854 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:25:34.867 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:25:34.868 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:25:34.868 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:25:34.868 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:25:34.868 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:25:34.868 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:25:34.868 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:25:34.868 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:25:34.868 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:25:34.870 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:25:34.871 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:25:34.871 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:25:34.871 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:25:34.871 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:25:34.871 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:25:34.871 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:25:34.872 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:25:34.872 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:25:34.880 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 400: [Bad Request] Body application/json parsing error: Null body
2025-06-01 21:25:34.880 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:25:34 GMT] "POST /api/service-one HTTP/1.1" 400 132 "-" "-"
2025-06-01 21:25:34.880 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.validation.BodyProcessorException: [Bad Request] Body application/json parsing error: Null body
	at io.vertx.ext.web.validation.BodyProcessorException.createParsingError(BodyProcessorException.java:52)
	at io.vertx.ext.web.validation.impl.body.JsonBodyProcessorImpl.process(JsonBodyProcessorImpl.java:33)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.validateBody(ValidationHandlerImpl.java:247)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:143)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: io.vertx.ext.web.validation.MalformedValueException: Null body
	at io.vertx.ext.web.validation.impl.body.JsonBodyProcessorImpl.process(JsonBodyProcessorImpl.java:34)
	... 78 common frames omitted
2025-06-01 21:25:34.881 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 400: [Bad Request] Body application/json parsing error: Null body
2025-06-01 21:25:34.881 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.883 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:25:34.883 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:25:34.914 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:25:34.914 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:25:34.914 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:25:34.914 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:25:34.914 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.914 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.914 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:25:34.914 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.914 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:25:34.915 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:25:34.931 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:25:34.931 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:25:34.932 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:25:34.932 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:25:34.932 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:25:34.932 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:25:34.932 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:25:34.932 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:25:34.932 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:25:34.934 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:25:34.934 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:25:34.934 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:25:34.934 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:25:34.934 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:25:34.934 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:25:34.934 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:25:34.935 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:25:34.935 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:25:34.939 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:25:34.939 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:25:34.939 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:25:34.939 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:25:34.940 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:25:34.940 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:25:34 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 21:25:34.940 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:25:34.940 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.941 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.941 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:25:34.941 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:25:34.942 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:25:34.942 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:193)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:68)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendResponse(AbstractRequestHandler.java:79)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$0(ServiceRequestHandler.java:38)
	at io.vertx.core.impl.future.FutureImpl$1.onSuccess(FutureImpl.java:91)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onSuccess(FutureImpl.java:262)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:246)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:34.943 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:25:34.943 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:25:34.981 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:25:34.981 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:25:34.981 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:25:34.981 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:25:34.981 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.981 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.981 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:25:34.981 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.981 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:25:34.982 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:25:34.983 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:25:34.983 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:25:34.994 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:25:34.994 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:25:34.994 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:25:34.994 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:25:34.994 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:25:34.994 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:25:34.994 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:25:34.994 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:25:34.994 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:25:34.996 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:25:34.996 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:25:34.996 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:25:34.997 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:25:34.997 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:25:34.997 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:25:34.997 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:25:34.999 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:25:34.999 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:25:35.004 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:25:35.004 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:25:35 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:25:35.004 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:25:35.005 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:35.005 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:35.005 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:25:35.005 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:25:35.008 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:25:35.008 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:27:43.271 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:27:43.275 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:27:43.276 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:27:43.279 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:27:43.280 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:43.281 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:43.281 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:27:43.282 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:43.282 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:27:43.300 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:27:43.301 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:43.301 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:27:43.301 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:27:43.301 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:43.301 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:43.301 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:27:43.301 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:43.301 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:27:43.302 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:27:43.302 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:43.302 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:27:43.302 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:27:43.586 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:27:43.587 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:27:43.587 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:27:43.587 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:27:43.587 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:27:43.587 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:27:43.587 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:27:43.587 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:27:43.587 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:27:43.617 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:27:43.619 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:27:43.619 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:27:43.624 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:27:43.624 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:27:43.624 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:27:43.625 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:27:43.671 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:27:43.818 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:27:43 GMT] "GET /swagger-ui HTTP/1.1" 302 0 "-" "-"
2025-06-01 21:27:43.818 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /swagger-ui
2025-06-01 21:27:43.818 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:43.818 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:43.821 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:43.845 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:27:43.855 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:27:43.949 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: null
2025-06-01 21:27:43.949 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.handler.impl.StaticHandlerImpl.lambda$null$0(StaticHandlerImpl.java:338)
	at io.vertx.ext.web.handler.impl.StaticHandlerImpl.getFileProps(StaticHandlerImpl.java:386)
	at io.vertx.ext.web.handler.impl.StaticHandlerImpl.lambda$sendStatic$1(StaticHandlerImpl.java:295)
	at io.vertx.core.impl.future.FutureImpl$3.onSuccess(FutureImpl.java:141)
	at io.vertx.core.impl.future.FutureBase.lambda$emitSuccess$0(FutureBase.java:54)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:43.994 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:27:43.994 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:27:43.994 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:27:43.994 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:27:43.994 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:43.994 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:43.994 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:27:43.994 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:43.994 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:27:43.995 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:27:43.995 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:43.995 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:27:43.995 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:27:43.995 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:43.995 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:43.995 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:27:43.995 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:43.995 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:27:43.996 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:27:43.996 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:43.996 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:27:43.996 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:27:44.027 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:27:44.027 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:27:44.027 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:27:44.027 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:27:44.027 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:27:44.027 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:27:44.027 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:27:44.027 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:27:44.027 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:27:44.029 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:27:44.029 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:27:44.029 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:27:44.029 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:27:44.029 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:27:44.029 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:27:44.030 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:27:44.032 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:27:44.041 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 21:27:44.041 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 21:27:44.042 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 21:27:44.046 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 21:27:44.048 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 21:27:44.049 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.050 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-two/test-id
2025-06-01 21:27:44.051 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:27:44 GMT] "GET /api/service-two/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 21:27:44.051 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:44.051 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.051 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.052 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.053 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.053 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendError(AbstractRequestHandler.java:66)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handleError(AbstractRequestHandler.java:49)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.055 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:27:44.056 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:27:44.096 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.097 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:27:44.098 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:27:44.098 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.098 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:27:44.098 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:27:44.119 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:27:44.119 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:27:44.120 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:27:44.120 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:27:44.120 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:27:44.120 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:27:44.120 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:27:44.120 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:27:44.120 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:27:44.123 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:27:44.123 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:27:44.124 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:27:44.124 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:27:44.124 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:27:44.124 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:27:44.124 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:27:44.126 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:27:44.130 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:27:44.132 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:27:44 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:27:44.132 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /health
2025-06-01 21:27:44.132 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:44.132 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.133 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.134 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:44.134 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.139 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:27:44.139 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:27:44.177 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:27:44.177 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:27:44.177 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:27:44.177 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:27:44.177 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.177 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.177 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:27:44.177 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.177 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:27:44.177 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:27:44.178 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:27:44.195 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:27:44.196 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:27:44.196 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:27:44.196 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:27:44.196 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:27:44.196 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:27:44.196 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:27:44.196 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:27:44.196 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:27:44.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:27:44.198 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:27:44.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:27:44.198 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:27:44.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:27:44.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:27:44.198 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:27:44.200 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:27:44.203 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:27:44 GMT] "GET /docs HTTP/1.1" 302 0 "-" "-"
2025-06-01 21:27:44.203 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /docs
2025-06-01 21:27:44.204 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:44.204 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.204 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.205 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:44.205 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.208 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:27:44.208 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:27:44.242 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:27:44.243 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:27:44.256 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:27:44.256 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:27:44.256 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:27:44.256 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:27:44.256 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:27:44.256 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:27:44.256 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:27:44.256 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:27:44.256 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:27:44.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:27:44.258 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:27:44.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:27:44.259 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:27:44.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:27:44.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:27:44.259 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:27:44.260 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:27:44.261 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:27:44.262 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:27:44.307 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:27:44.308 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:27:44.308 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:27:44.308 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:27:44.308 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.308 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.308 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:27:44.308 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.308 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:27:44.309 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:27:44.321 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:27:44.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:27:44.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:27:44.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:27:44.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:27:44.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:27:44.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:27:44.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:27:44.321 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:27:44.323 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:27:44.323 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:27:44.323 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:27:44.323 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:27:44.323 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:27:44.323 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:27:44.323 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:27:44.326 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:27:44.349 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /openapi.yaml
2025-06-01 21:27:44.349 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:44.349 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.350 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.350 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:44.350 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.352 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:27:44 GMT] "GET /openapi.yaml HTTP/1.1" 200 10827 "-" "-"
2025-06-01 21:27:44.352 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:27:44.353 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:27:44.393 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:27:44.393 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:27:44.393 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:27:44.393 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:27:44.394 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:27:44.406 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:27:44.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:27:44.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:27:44.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:27:44.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:27:44.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:27:44.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:27:44.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:27:44.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:27:44.410 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:27:44.410 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:27:44.410 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:27:44.410 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:27:44.410 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:27:44.410 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:27:44.410 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:27:44.412 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:27:44.416 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:27:44.416 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:27:44.416 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 21:27:44.416 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 21:27:44.416 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 21:27:44.416 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.417 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:27:44.417 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:27:44 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 21:27:44.417 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:44.417 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.418 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.419 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.419 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.420 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendError(AbstractRequestHandler.java:66)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handleError(AbstractRequestHandler.java:49)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.421 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:27:44.421 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:27:44.460 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:27:44.461 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:27:44.461 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:27:44.461 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:27:44.461 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:27:44.461 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:27:44.461 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:27:44.472 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:27:44.472 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:27:44.472 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:27:44.472 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:27:44.472 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:27:44.472 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:27:44.472 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:27:44.472 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:27:44.472 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:27:44.474 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:27:44.474 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:27:44.474 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:27:44.474 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:27:44.474 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:27:44.474 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:27:44.474 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:27:44.476 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:27:44.480 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:27:44.480 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:27:44 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:27:44.480 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:44.481 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.481 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.481 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:27:44.481 [vert.x-eventloop-thread-0] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:27:44.484 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:27:44.485 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:29:47.470 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:29:47.472 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:29:47.748 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:29:47.748 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:29:47.749 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:29:47.750 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:29:47.750 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:29:47.750 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:29:47.750 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:29:47.750 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:29:47.750 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:29:47.774 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:29:47.776 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:29:47.776 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:29:47.780 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:29:47.780 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:29:47.780 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:29:47.780 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:29:47.965 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:29:47 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 21:29:47.965 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-two/test-id
2025-06-01 21:29:47.966 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:29:47.966 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:47.967 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:47.968 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:29:47.968 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.042 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:29:48.042 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:29:48.073 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:29:48.073 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:29:48.073 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:29:48.073 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:29:48.073 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:29:48.073 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:29:48.073 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:29:48.073 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:29:48.073 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:29:48.075 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:29:48.075 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:29:48.075 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:29:48.075 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:29:48.075 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:29:48.075 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:29:48.075 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:29:48.082 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:29:48 GMT] "OPTIONS /api/service-one/test-id HTTP/1.1" 204 0 "-" "-"
2025-06-01 21:29:48.082 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:29:48.082 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:29:48.082 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.082 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.083 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:29:48.083 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.083 [vert.x-eventloop-thread-1] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.123 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:29:48.123 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:29:48.138 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:29:48.138 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:29:48.138 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:29:48.138 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:29:48.138 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:29:48.138 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:29:48.138 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:29:48.138 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:29:48.138 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:29:48.140 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:29:48.140 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:29:48.140 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:29:48.140 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:29:48.140 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:29:48.140 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:29:48.140 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:29:48.146 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:29:48 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:29:48.146 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /health
2025-06-01 21:29:48.146 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:29:48.146 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.146 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.147 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:29:48.147 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.186 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:29:48.186 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:29:48.199 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:29:48.200 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:29:48.200 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:29:48.200 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:29:48.200 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:29:48.200 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:29:48.200 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:29:48.200 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:29:48.200 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:29:48.201 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:29:48.201 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:29:48.201 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:29:48.202 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:29:48.202 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:29:48.202 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:29:48.202 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:29:48.206 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:29:48.206 [vert.x-eventloop-thread-1] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:29:48 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:29:48.206 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:29:48.206 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.207 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.207 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:29:48.207 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.244 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:29:48.244 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:29:48.257 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:29:48.257 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:29:48.257 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:29:48.257 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:29:48.257 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:29:48.257 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:29:48.257 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:29:48.257 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:29:48.257 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:29:48.260 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:29:48.260 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:29:48.260 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:29:48.260 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:29:48.260 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:29:48.260 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:29:48.260 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:29:48.266 [vert.x-eventloop-thread-1] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:29:48 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 21:29:48.266 [vert.x-eventloop-thread-1] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:29:48.266 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:29:48.266 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.266 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.267 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:29:48.267 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.315 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:29:48.315 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:29:48.326 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:29:48.326 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:29:48.326 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:29:48.326 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:29:48.326 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:29:48.326 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:29:48.326 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:29:48.326 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:29:48.326 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:29:48.328 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:29:48.328 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:29:48.328 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:29:48.328 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:29:48.328 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:29:48.328 [vert.x-eventloop-thread-1] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:29:48.328 [vert.x-eventloop-thread-1] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:29:48.333 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 21:29:48.334 [vert.x-eventloop-thread-1] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:29:48 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-01 21:29:48.334 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error
	at dev.mars.vertx.gateway.router.RouterFactoryTest$TestServiceHandler.handle(RouterFactoryTest.java:338)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.334 [vert.x-eventloop-thread-1] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 21:29:48.334 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:29:48.335 [vert.x-eventloop-thread-1] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.RuntimeException: Test error
	at dev.mars.vertx.gateway.router.RouterFactoryTest$TestServiceHandler.handle(RouterFactoryTest.java:338)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$2(RouterFactory.java:106)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.lambda$handle$5(ValidationHandlerImpl.java:168)
	at io.vertx.core.impl.future.SucceededFuture.onComplete(SucceededFuture.java:81)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:159)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:119)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:07.776 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:30:07.778 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:30:07.779 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:30:07.781 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:30:07.782 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:07.783 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:07.783 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:30:07.784 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:07.784 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:30:07.800 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:30:07.801 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:07.801 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:30:07.801 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:30:07.801 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:07.801 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:07.801 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:30:07.801 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:07.801 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:30:07.802 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:30:07.802 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:07.802 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:30:07.802 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:30:08.059 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:30:08.059 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:30:08.060 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:30:08.060 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:30:08.060 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:30:08.060 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:30:08.060 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:30:08.060 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:30:08.060 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:30:08.084 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:30:08.086 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:30:08.087 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:30:08.092 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:30:08.092 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:30:08.092 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:30:08.093 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:30:08.143 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:30:08.143 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:30:08.263 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id-2
2025-06-01 21:30:08.263 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-01 21:30:08.264 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-01 21:30:08.269 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-01 21:30:08.271 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-two/test-id-2
2025-06-01 21:30:08.275 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:30:08 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 404 113 "-" "-"
2025-06-01 21:30:08.276 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:30:08.276 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.278 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.279 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:30:08.279 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:30:08.280 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:30:08.280 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:193)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:68)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendResponse(AbstractRequestHandler.java:79)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$0(ServiceRequestHandler.java:38)
	at io.vertx.core.impl.future.FutureImpl$1.onSuccess(FutureImpl.java:91)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onSuccess(FutureImpl.java:262)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:246)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.302 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:30:08.304 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:30:08.353 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:30:08.353 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:30:08.353 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:30:08.353 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:30:08.353 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:08.353 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:08.353 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:30:08.353 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:08.353 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:30:08.354 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:30:08.354 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:08.354 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:30:08.354 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:30:08.354 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:08.354 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:08.354 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:30:08.354 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:08.354 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:30:08.355 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:30:08.355 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:08.355 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:30:08.355 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:30:08.378 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:30:08.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:30:08.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:30:08.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:30:08.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:30:08.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:30:08.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:30:08.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:30:08.378 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:30:08.380 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:30:08.380 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:30:08.380 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:30:08.380 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:30:08.380 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:30:08.380 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:30:08.380 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:30:08.382 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:30:08.382 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:30:08.386 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:30:08.387 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:30:08 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:30:08.387 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /health
2025-06-01 21:30:08.387 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:30:08.387 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.388 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.388 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:30:08.388 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.392 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:30:08.393 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:30:08.431 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:30:08.431 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:30:08.431 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:30:08.431 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:30:08.431 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:08.431 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:08.431 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:30:08.431 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:08.431 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:30:08.432 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:30:08.432 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:08.432 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:30:08.432 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:30:08.432 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:08.432 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:08.432 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:30:08.432 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:08.432 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:30:08.432 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:30:08.433 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:08.433 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:30:08.433 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:30:08.449 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:30:08.449 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:30:08.449 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:30:08.449 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:30:08.449 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:30:08.449 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:30:08.449 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:30:08.449 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:30:08.449 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:30:08.451 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:30:08.451 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:30:08.451 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:30:08.451 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:30:08.451 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:30:08.451 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:30:08.451 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:30:08.452 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:30:08.452 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:30:08.454 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:30:08.455 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:30:08.455 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:30:08.455 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:30:08.455 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:30:08.455 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:30:08 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 21:30:08.455 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:30:08.455 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.456 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.457 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-01 21:30:08.457 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.457 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:30:08.458 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.458 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.458 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendError(AbstractRequestHandler.java:66)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handleError(AbstractRequestHandler.java:49)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.459 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:08.490 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:30:08.491 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:30:08.491 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:08.491 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:08.491 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:30:08.491 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:08.491 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:30:08.491 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:30:08.491 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:08.491 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:30:08.491 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:30:08.507 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:30:08.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:30:08.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:30:08.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:30:08.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:30:08.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:30:08.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:30:08.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:30:08.507 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:30:08.510 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:30:08.511 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:30:08.511 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:30:08.511 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:30:08.511 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:30:08.511 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:30:08.511 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:30:08.512 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:30:08.512 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:30:08.520 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 400: [Bad Request] Body application/json parsing error: Null body
2025-06-01 21:30:08.520 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:30:08 GMT] "POST /api/service-one HTTP/1.1" 400 132 "-" "-"
2025-06-01 21:30:08.520 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.validation.BodyProcessorException: [Bad Request] Body application/json parsing error: Null body
	at io.vertx.ext.web.validation.BodyProcessorException.createParsingError(BodyProcessorException.java:52)
	at io.vertx.ext.web.validation.impl.body.JsonBodyProcessorImpl.process(JsonBodyProcessorImpl.java:33)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.validateBody(ValidationHandlerImpl.java:247)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:143)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: io.vertx.ext.web.validation.MalformedValueException: Null body
	at io.vertx.ext.web.validation.impl.body.JsonBodyProcessorImpl.process(JsonBodyProcessorImpl.java:34)
	... 78 common frames omitted
2025-06-01 21:30:08.521 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 400: [Bad Request] Body application/json parsing error: Null body
2025-06-01 21:30:08.521 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.523 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:30:08.523 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:30:08.556 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:30:08.557 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:30:08.569 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:30:08.569 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:30:08.569 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:30:08.569 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:30:08.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:30:08.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:30:08.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:30:08.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:30:08.570 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:30:08.572 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:30:08.572 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:30:08.572 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:30:08.572 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:30:08.572 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:30:08.572 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:30:08.572 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:30:08.574 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:30:08.574 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:30:08.576 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:30:08.577 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:30:08.577 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:30:08.577 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:30:08.577 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:30:08.577 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:30:08 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 21:30:08.577 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:30:08.577 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.578 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.578 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:30:08.578 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:30:08.579 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:30:08.579 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:193)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:68)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendResponse(AbstractRequestHandler.java:79)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$0(ServiceRequestHandler.java:38)
	at io.vertx.core.impl.future.FutureImpl$1.onSuccess(FutureImpl.java:91)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onSuccess(FutureImpl.java:262)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:246)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.579 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:30:08.580 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:30:08.612 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:30:08.612 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:30:08.612 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:30:08.612 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:30:08.613 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:30:08.625 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:30:08.625 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:30:08.625 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:30:08.625 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:30:08.625 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:30:08.625 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:30:08.625 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:30:08.625 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:30:08.625 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:30:08.627 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:30:08.627 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:30:08.627 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:30:08.627 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:30:08.627 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:30:08.627 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:30:08.627 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:30:08.629 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:30:08.629 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:30:08.632 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:30:08.632 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:30:08 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:30:08.633 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:30:08.633 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.633 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.633 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:30:08.633 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:30:08.635 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:30:08.636 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:44:22.717 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:44:22.718 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:44:22.719 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:44:22.720 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:44:22.722 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:22.722 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:22.722 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:44:22.723 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:22.723 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:44:22.738 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:44:22.739 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:22.739 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:44:22.740 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:44:22.740 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:22.740 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:22.740 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:44:22.740 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:22.740 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:44:22.741 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:44:22.741 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:22.741 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:44:22.741 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:44:22.981 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:44:22.981 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:44:22.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:44:22.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:44:22.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:44:22.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:44:22.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:44:22.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:44:22.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:44:23.007 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:44:23.009 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:44:23.009 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:44:23.014 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:44:23.014 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:44:23.014 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:44:23.014 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:44:23.061 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:44:23.062 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:44:23.183 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id-2
2025-06-01 21:44:23.183 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-01 21:44:23.184 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-01 21:44:23.190 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-01 21:44:23.194 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-two/test-id-2
2025-06-01 21:44:23.199 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:44:23 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 404 113 "-" "-"
2025-06-01 21:44:23.199 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:44:23.200 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.201 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.203 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:44:23.203 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:44:23.204 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:44:23.204 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:193)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:68)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendResponse(AbstractRequestHandler.java:79)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$0(ServiceRequestHandler.java:38)
	at io.vertx.core.impl.future.FutureImpl$1.onSuccess(FutureImpl.java:91)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onSuccess(FutureImpl.java:262)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:246)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.225 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:44:23.227 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:44:23.270 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:44:23.270 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:44:23.270 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:44:23.270 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:44:23.270 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:23.270 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:23.270 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:44:23.270 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:23.270 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:44:23.271 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:44:23.271 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:23.271 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:44:23.271 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:44:23.271 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:23.271 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:23.271 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:44:23.271 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:23.271 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:44:23.272 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:44:23.272 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:23.272 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:44:23.272 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:44:23.292 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:44:23.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:44:23.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:44:23.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:44:23.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:44:23.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:44:23.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:44:23.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:44:23.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:44:23.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:44:23.294 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:44:23.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:44:23.294 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:44:23.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:44:23.294 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:44:23.294 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:44:23.296 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:44:23.297 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:44:23.300 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:44:23.301 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:44:23 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:44:23.301 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /health
2025-06-01 21:44:23.301 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:44:23.302 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.302 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.302 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:44:23.302 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.306 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:44:23.306 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:44:23.344 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:44:23.344 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:44:23.344 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:44:23.344 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:44:23.344 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:23.344 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:23.344 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:44:23.344 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:23.344 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:44:23.345 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:44:23.345 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:23.345 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:44:23.345 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:44:23.345 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:23.345 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:23.345 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:44:23.345 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:23.345 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:44:23.346 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:44:23.346 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:23.346 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:44:23.346 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:44:23.359 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:44:23.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:44:23.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:44:23.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:44:23.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:44:23.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:44:23.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:44:23.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:44:23.359 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:44:23.361 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:44:23.361 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:44:23.361 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:44:23.361 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:44:23.361 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:44:23.361 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:44:23.361 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:44:23.362 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:44:23.363 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:44:23.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:44:23.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:44:23.365 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:44:23.366 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:44:23.366 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:44:23.366 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:44:23 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 21:44:23.366 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:44:23.366 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.367 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.368 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-01 21:44:23.368 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.369 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:44:23.369 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.369 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.370 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendError(AbstractRequestHandler.java:66)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handleError(AbstractRequestHandler.java:49)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.370 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:44:23.399 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:44:23.400 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:44:23.413 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:44:23.414 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:44:23.414 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:44:23.414 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:44:23.414 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:44:23.414 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:44:23.414 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:44:23.414 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:44:23.414 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:44:23.417 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:44:23.417 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:44:23.417 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:44:23.417 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:44:23.417 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:44:23.417 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:44:23.417 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:44:23.419 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:44:23.419 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:44:23.425 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 400: [Bad Request] Body application/json parsing error: Null body
2025-06-01 21:44:23.426 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:44:23 GMT] "POST /api/service-one HTTP/1.1" 400 132 "-" "-"
2025-06-01 21:44:23.426 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.validation.BodyProcessorException: [Bad Request] Body application/json parsing error: Null body
	at io.vertx.ext.web.validation.BodyProcessorException.createParsingError(BodyProcessorException.java:52)
	at io.vertx.ext.web.validation.impl.body.JsonBodyProcessorImpl.process(JsonBodyProcessorImpl.java:33)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.validateBody(ValidationHandlerImpl.java:247)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:143)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: io.vertx.ext.web.validation.MalformedValueException: Null body
	at io.vertx.ext.web.validation.impl.body.JsonBodyProcessorImpl.process(JsonBodyProcessorImpl.java:34)
	... 78 common frames omitted
2025-06-01 21:44:23.426 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 400: [Bad Request] Body application/json parsing error: Null body
2025-06-01 21:44:23.426 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.428 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:44:23.428 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:44:23.460 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:44:23.460 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:44:23.460 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:44:23.460 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:44:23.460 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:23.461 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:44:23.462 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:44:23.462 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:23.462 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:44:23.462 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:44:23.477 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:44:23.477 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:44:23.477 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:44:23.477 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:44:23.477 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:44:23.477 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:44:23.477 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:44:23.477 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:44:23.477 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:44:23.480 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:44:23.480 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:44:23.480 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:44:23.480 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:44:23.480 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:44:23.480 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:44:23.480 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:44:23.481 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:44:23.482 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:44:23.484 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:44:23.485 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:44:23.485 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:44:23.485 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:44:23.485 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:44:23.485 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:44:23 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 21:44:23.485 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:44:23.485 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.486 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.486 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:44:23.486 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:44:23.486 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:44:23.486 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:193)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:68)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendResponse(AbstractRequestHandler.java:79)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$0(ServiceRequestHandler.java:38)
	at io.vertx.core.impl.future.FutureImpl$1.onSuccess(FutureImpl.java:91)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onSuccess(FutureImpl.java:262)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:246)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.487 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:44:23.488 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:44:23.520 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:44:23.521 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:44:23.521 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:44:23.521 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:44:23.521 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:44:23.531 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:44:23.531 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:44:23.531 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:44:23.531 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:44:23.531 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:44:23.531 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:44:23.531 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:44:23.531 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:44:23.531 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:44:23.533 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:44:23.533 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:44:23.533 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:44:23.533 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:44:23.533 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:44:23.533 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:44:23.533 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:44:23.535 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:44:23.535 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:44:23.538 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:44:23.538 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:44:23 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:44:23.538 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:44:23.538 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.539 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.539 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:44:23.539 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:44:23.541 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:44:23.542 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:47:40.132 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:47:40.133 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:47:40.135 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:47:40.136 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:47:40.137 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:40.138 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:40.138 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:47:40.139 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:40.139 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:47:40.154 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:47:40.155 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:40.155 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:47:40.156 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:47:40.156 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:40.156 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:40.156 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:47:40.156 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:40.156 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:47:40.157 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:47:40.157 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:40.157 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:47:40.157 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:47:40.421 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:47:40.421 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:47:40.421 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:47:40.421 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:47:40.421 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:47:40.421 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:47:40.421 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:47:40.421 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:47:40.421 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:47:40.448 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:47:40.450 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:47:40.450 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:47:40.455 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:47:40.455 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:47:40.455 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:47:40.455 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:47:40.506 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:47:40.506 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:47:40.632 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id-2
2025-06-01 21:47:40.632 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-01 21:47:40.633 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-01 21:47:40.636 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-01 21:47:40.638 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-two/test-id-2
2025-06-01 21:47:40.641 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:47:40 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 404 113 "-" "-"
2025-06-01 21:47:40.641 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:47:40.641 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.651 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.653 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:47:40.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:47:40.654 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:47:40.654 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:193)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:68)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendResponse(AbstractRequestHandler.java:79)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$0(ServiceRequestHandler.java:38)
	at io.vertx.core.impl.future.FutureImpl$1.onSuccess(FutureImpl.java:91)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onSuccess(FutureImpl.java:262)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:246)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.668 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:47:40.669 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:47:40.715 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:47:40.715 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:47:40.715 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:47:40.715 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:47:40.715 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:40.715 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:40.715 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:47:40.715 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:40.715 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:47:40.716 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:47:40.716 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:40.716 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:47:40.716 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:47:40.716 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:40.716 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:40.716 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:47:40.716 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:40.716 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:47:40.717 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:47:40.717 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:40.717 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:47:40.717 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:47:40.752 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:47:40.752 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:47:40.752 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:47:40.752 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:47:40.752 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:47:40.752 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:47:40.752 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:47:40.753 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:47:40.753 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:47:40.754 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:47:40.754 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:47:40.754 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:47:40.754 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:47:40.754 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:47:40.755 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:47:40.755 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:47:40.756 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:47:40.756 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:47:40.759 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:47:40.761 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:47:40 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:47:40.761 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /health
2025-06-01 21:47:40.761 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:47:40.761 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:182)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.761 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureFallbackHandler$0(RouterFactory.java:279)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.761 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:47:40.762 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.765 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:47:40.766 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:47:40.804 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:47:40.804 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:47:40.804 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:47:40.804 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:47:40.804 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:40.804 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:40.804 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:47:40.804 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:40.804 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:47:40.805 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:47:40.805 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:40.805 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:47:40.805 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:47:40.805 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:40.805 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:40.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:47:40.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:40.805 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:47:40.806 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:47:40.806 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:40.806 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:47:40.806 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:47:40.835 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:47:40.835 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:47:40.835 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:47:40.835 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:47:40.835 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:47:40.835 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:47:40.835 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:47:40.835 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:47:40.835 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:47:40.837 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:47:40.837 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:47:40.837 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:47:40.837 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:47:40.837 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:47:40.837 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:47:40.837 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:47:40.839 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:47:40.839 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:47:40.842 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:47:40.842 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:47:40.842 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:47:40.842 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:47:40.843 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:47:40.843 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:47:40 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 21:47:40.843 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:47:40.843 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.843 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.845 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-01 21:47:40.845 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.845 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:47:40.846 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.846 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.846 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendError(AbstractRequestHandler.java:66)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handleError(AbstractRequestHandler.java:49)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.846 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:47:40.876 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:47:40.877 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:40.877 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:40.877 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:47:40.877 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:40.877 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:47:40.877 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:47:40.877 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:40.877 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:47:40.877 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:47:40.903 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:47:40.903 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:47:40.903 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:47:40.903 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:47:40.903 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:47:40.903 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:47:40.903 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:47:40.903 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:47:40.903 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:47:40.905 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:47:40.905 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:47:40.905 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:47:40.905 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:47:40.905 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:47:40.905 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:47:40.905 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:47:40.907 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:47:40.907 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:47:40.914 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 400: [Bad Request] Body application/json parsing error: Null body
2025-06-01 21:47:40.914 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:47:40 GMT] "POST /api/service-one HTTP/1.1" 400 132 "-" "-"
2025-06-01 21:47:40.914 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
io.vertx.ext.web.validation.BodyProcessorException: [Bad Request] Body application/json parsing error: Null body
	at io.vertx.ext.web.validation.BodyProcessorException.createParsingError(BodyProcessorException.java:52)
	at io.vertx.ext.web.validation.impl.body.JsonBodyProcessorImpl.process(JsonBodyProcessorImpl.java:33)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.validateBody(ValidationHandlerImpl.java:247)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:143)
	at io.vertx.ext.web.validation.impl.ValidationHandlerImpl.handle(ValidationHandlerImpl.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:54)
	at io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl.handle(ResponseContentTypeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.openapi.impl.OpenAPI3RouterBuilderImpl.lambda$createRouter$12(OpenAPI3RouterBuilderImpl.java:349)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: io.vertx.ext.web.validation.MalformedValueException: Null body
	at io.vertx.ext.web.validation.impl.body.JsonBodyProcessorImpl.process(JsonBodyProcessorImpl.java:34)
	... 78 common frames omitted
2025-06-01 21:47:40.915 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 400: [Bad Request] Body application/json parsing error: Null body
2025-06-01 21:47:40.915 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.917 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:47:40.918 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:40.952 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:47:40.953 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:47:40.953 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:40.953 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:47:40.953 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:47:40.977 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:47:40.978 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:47:40.978 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:47:40.978 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:47:40.978 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:47:40.978 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:47:40.978 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:47:40.978 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:47:40.978 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:47:40.981 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:47:40.981 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:47:40.981 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:47:40.982 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:47:40.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:47:40.982 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:47:40.982 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:47:40.983 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:47:40.983 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:47:40.986 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:47:40.986 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:47:40.986 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:47:40.986 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:47:40.986 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /api/service-one/test-id
2025-06-01 21:47:40.987 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:47:40 GMT] "GET /api/service-one/test-id HTTP/1.1" 404 109 "-" "-"
2025-06-01 21:47:40.987 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:47:40.987 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.987 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:116)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.988 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:47:40.988 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:47:40.988 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:47:40.988 [vert.x-eventloop-thread-4] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:193)
	at io.vertx.core.http.impl.Http1xServerResponse.putHeader(Http1xServerResponse.java:68)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.sendResponse(AbstractRequestHandler.java:79)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$0(ServiceRequestHandler.java:38)
	at io.vertx.core.impl.future.FutureImpl$1.onSuccess(FutureImpl.java:91)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onSuccess(FutureImpl.java:262)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:246)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:40.989 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:47:40.989 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:47:41.022 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:47:41.022 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:47:41.022 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:47:41.022 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:47:41.022 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:41.022 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:41.022 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:47:41.022 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:41.022 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:47:41.023 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:47:41.046 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - RouterBuilder created successfully
2025-06-01 21:47:41.047 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceTwoItem
2025-06-01 21:47:41.047 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: deleteServiceOneItem
2025-06-01 21:47:41.047 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: updateServiceOneItem
2025-06-01 21:47:41.047 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceTwoItem
2025-06-01 21:47:41.047 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: createServiceOneItem
2025-06-01 21:47:41.047 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getServiceOneItem
2025-06-01 21:47:41.047 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: getHealth
2025-06-01 21:47:41.047 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Adding handler for operation: listServiceOneItems
2025-06-01 21:47:41.048 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:47:41.048 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:47:41.048 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:47:41.048 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:47:41.048 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:47:41.048 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:47:41.048 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully from OpenAPI specification
2025-06-01 21:47:41.050 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:47:41.050 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:47:41.053 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:47:41.053 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:47:41 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:47:41.053 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:47:41.054 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:174)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.doFail(RoutingContextImpl.java:564)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:200)
	at io.vertx.ext.web.impl.RoutingContextImpl.fail(RoutingContextImpl.java:189)
	at io.vertx.ext.web.impl.RoutingContextImplBase.handleInHandlerRuntimeFailure(RoutingContextImplBase.java:215)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:148)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:41.054 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at io.vertx.ext.web.impl.RoutingContextImpl.checkHandleNoMatch(RoutingContextImpl.java:159)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:145)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$5(RouterFactory.java:120)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$4(RouterFactory.java:115)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:140)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:111)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:41.054 [vert.x-eventloop-thread-4] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Response head already sent
2025-06-01 21:47:41.054 [vert.x-eventloop-thread-4] ERROR io.vertx.ext.web.RoutingContext - Unhandled exception in router
java.lang.IllegalStateException: Response head already sent
	at io.vertx.core.http.impl.Http1xServerResponse.checkHeadWritten(Http1xServerResponse.java:703)
	at io.vertx.core.http.impl.Http1xServerResponse.setStatusCode(Http1xServerResponse.java:150)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$configureErrorHandler$0(RouterFactory.java:305)
	at io.vertx.ext.web.impl.RouteState.handleFailure(RouteState.java:1292)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:144)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at dev.mars.vertx.gateway.router.RouterFactory.lambda$createRouterFromOpenAPI$3(RouterFactory.java:112)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:47:41.057 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:47:41.057 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:50:49.863 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:50:49.865 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:50:49.866 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:50:49.867 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:50:49.869 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:49.869 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:49.869 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:50:49.870 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:49.870 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:50:49.884 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:50:49.885 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:49.885 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:50:49.885 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:50:49.885 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:49.885 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:49.885 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:50:49.885 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:49.885 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:50:49.886 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:50:49.886 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:49.886 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:50:49.886 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:50:49.886 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:50:49.889 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:50:49.896 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:50:49.904 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:50:49.904 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:50:49.904 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:50:49.980 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:50:49.981 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:50:50.118 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id-2
2025-06-01 21:50:50.118 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-01 21:50:50.119 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-01 21:50:50.141 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-01 21:50:50.144 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:50:50.145 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:50:50.145 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:50:50.149 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:50:50 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 200 74 "-" "-"
2025-06-01 21:50:50.180 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:50:50.187 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:50:50.241 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:50:50.241 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:50:50.241 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:50:50.241 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:50:50.241 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:50.241 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:50.241 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:50:50.241 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:50.241 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:50:50.242 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:50:50.242 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:50.242 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:50:50.242 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:50:50.242 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:50.242 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:50.242 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:50:50.242 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:50.242 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:50:50.243 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:50:50.243 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:50.243 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:50:50.243 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:50:50.243 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:50:50.243 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:50:50.243 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:50:50.243 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:50:50.243 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:50:50.243 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:50:50.244 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:50:50.244 [vert.x-eventloop-thread-2] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:50:50.247 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:50:50.249 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:50:50 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:50:50.252 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:50:50.252 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:50:50.290 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:50:50.290 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:50.291 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:50:50.292 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:50:50.292 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:50.292 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:50:50.292 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:50:50.292 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:50:50.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:50:50.292 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:50:50.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:50:50.292 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:50:50.293 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:50:50.294 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:50:50.294 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:50:50.297 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:50:50.298 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:50:50.298 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:50:50.298 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:50:50.298 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-01 21:50:50.298 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:50:50.301 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:50:50.301 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:50:50.302 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:50:50 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 120 "-" "-"
2025-06-01 21:50:50.303 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:50:50.303 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:50.339 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:50:50.340 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:50:50.340 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:50.340 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:50:50.340 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:50:50.340 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:50:50.340 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:50:50.340 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:50:50.341 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:50:50.341 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:50:50.341 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:50:50.342 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:50:50.343 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:50:50.348 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one
2025-06-01 21:50:50.349 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one
2025-06-01 21:50:50.349 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"name":"New Item","description":"New Description"}
2025-06-01 21:50:50.349 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"name":"New Item","description":"New Description"}
2025-06-01 21:50:50.350 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 21:50:50.350 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 21:50:50.350 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 21:50:50.350 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:50:50 GMT] "POST /api/service-one HTTP/1.1" 200 65 "-" "-"
2025-06-01 21:50:50.352 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:50:50.352 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:50:50.384 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:50:50.385 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:50:50.386 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:50:50.386 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:50:50.386 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:50:50.387 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:50:50.387 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:50:50.390 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:50:50.390 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:50:50.390 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:50:50.390 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:50:50.390 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:50:50.390 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:50:50.391 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:50:50.391 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:50:50 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 68 "-" "-"
2025-06-01 21:50:50.393 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:50:50.393 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:50:50.427 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:50:50.427 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:50:50.427 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:50:50.427 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:50:50.427 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:50.427 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:50.427 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:50:50.427 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:50.427 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:50:50.428 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:50:50.429 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:50:50.429 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:50:50.429 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:50:50.430 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:50:50.430 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:50:50.433 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:50:50.433 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:50:50 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:50:50.435 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:50:50.435 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:51:13.259 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:13.261 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:13.261 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:13.264 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:13.272 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:51:13.283 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:13.283 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:13.283 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:13.528 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:13 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 21:51:13.618 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:13.618 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:13.618 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:13.618 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:13.618 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:51:13.618 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:13.618 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:13.618 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:13.630 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:51:13.669 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:13.669 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:13.669 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:13.669 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:13.669 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:51:13.670 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:13.670 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:13.670 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:13.676 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:13 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:51:13.710 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:13.710 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:13.710 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:13.710 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:13.710 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:51:13.711 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:13.711 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:13.711 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:13.714 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:51:13.715 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:13 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:51:13.748 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:13.748 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:13.748 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:13.748 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:13.748 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:51:13.748 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:13.748 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:13.748 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:13.753 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:13 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 21:51:13.787 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:13.787 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:13.787 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:13.787 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:13.787 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:51:13.788 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:13.788 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:13.788 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:13.792 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 21:51:13.792 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:13 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
2025-06-01 21:51:23.798 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:51:23.799 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:51:23.800 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:23.801 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:51:23.803 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:23.804 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:23.804 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:51:23.805 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:23.805 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:51:23.822 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:51:23.823 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:23.823 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:51:23.823 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:51:23.824 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:23.824 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:23.824 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:51:23.824 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:23.824 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:51:23.824 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:51:23.824 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:23.824 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:51:23.824 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:23.824 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:23.828 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:23.834 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:51:23.840 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:23.841 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:23.841 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:23.916 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:51:24.052 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /swagger-ui
2025-06-01 21:51:24.077 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:24 GMT] "GET /swagger-ui HTTP/1.1" 404 83 "-" "-"
2025-06-01 21:51:24.099 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:51:24.103 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:51:24.151 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:51:24.151 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:51:24.151 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:24.151 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:51:24.151 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.151 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:51:24.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.151 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:51:24.152 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:51:24.152 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.152 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:51:24.152 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:51:24.152 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.152 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.152 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:51:24.152 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.152 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:51:24.153 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:51:24.153 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.153 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:51:24.153 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:24.153 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:24.153 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:24.153 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:51:24.153 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:24.154 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:24.154 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:24.161 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:51:24.165 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 21:51:24.166 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 21:51:24.167 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 21:51:24.169 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 21:51:24.171 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 21:51:24.171 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:51:24.175 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:51:24.175 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:51:24.178 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:24 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 21:51:24.179 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:51:24.180 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:51:24.216 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:51:24.216 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:51:24.216 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:24.216 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:51:24.216 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.216 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.216 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:51:24.216 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.216 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:51:24.216 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:24.217 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:51:24.218 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:24.218 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:24.218 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:24.219 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:51:24.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:51:24.223 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:24 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:51:24.239 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:51:24.240 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:51:24.275 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:51:24.275 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:51:24.275 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:24.275 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:51:24.275 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.275 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.275 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:51:24.275 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.275 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.276 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:51:24.277 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:24.277 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:24.277 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:24.277 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:51:24.277 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:24.277 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:24.277 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:24.278 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:51:24.281 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /docs
2025-06-01 21:51:24.282 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:24 GMT] "GET /docs HTTP/1.1" 404 71 "-" "-"
2025-06-01 21:51:24.284 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:51:24.284 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:51:24.316 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:51:24.317 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:51:24.318 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.318 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:51:24.318 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:24.318 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:24.318 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:24.318 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:51:24.318 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:24.318 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:24.318 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:24.319 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:51:24.320 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:51:24.320 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.355 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:51:24.356 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:51:24.356 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.356 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:51:24.356 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:24.356 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:24.356 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:24.356 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:51:24.356 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:24.356 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:24.356 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:24.357 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:51:24.361 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /openapi.yaml
2025-06-01 21:51:24.361 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:24 GMT] "GET /openapi.yaml HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:51:24.363 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:51:24.363 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:51:24.392 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:24.393 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:51:24.394 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:24.394 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:24.394 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:24.395 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:51:24.398 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:51:24.398 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:51:24.398 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 21:51:24.398 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 21:51:24.398 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 21:51:24.398 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:51:24.399 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:51:24.399 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:51:24.400 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:24 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 21:51:24.401 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:51:24.401 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:51:24.433 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:51:24.435 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:51:24.436 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:51:24.436 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:51:24.437 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:51:24.440 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:51:24.440 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:51:24 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:51:24.442 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:51:24.442 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:52:09.730 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:52:09.731 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:52:09.732 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:52:09.734 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:52:09.736 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:09.737 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:09.737 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:52:09.737 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:09.737 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:52:09.753 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:52:09.754 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:09.754 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:52:09.754 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:52:09.754 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:09.754 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:09.754 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:52:09.754 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:09.754 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:52:09.755 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:52:09.755 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:09.755 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:52:09.755 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:52:09.755 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:52:09.759 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:52:09.767 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:52:09.774 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:52:09.784 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:52:09.784 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:52:09.784 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:52:09.784 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:52:09.865 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:52:10.142 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:52:10 GMT] "GET /swagger-ui HTTP/1.1" 301 0 "-" "-"
2025-06-01 21:52:10.159 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:52:10.163 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:52:10.214 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:52:10.214 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:52:10.214 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:52:10.214 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:52:10.214 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.214 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.214 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:52:10.214 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.214 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:52:10.215 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:52:10.215 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.215 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:52:10.215 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:52:10.215 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.215 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.215 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:52:10.215 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.215 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:52:10.216 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:52:10.216 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.216 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:52:10.216 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:52:10.216 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:52:10.216 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:52:10.216 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:52:10.216 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:52:10.217 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:52:10.217 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:52:10.217 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:52:10.217 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:52:10.218 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:52:10.223 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 21:52:10.223 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 21:52:10.224 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 21:52:10.257 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 21:52:10.260 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 21:52:10.261 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:52:10.264 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:52:10.265 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:52:10.268 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:52:10 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 21:52:10.271 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:52:10.271 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.309 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:52:10.310 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:52:10.310 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.310 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:52:10.310 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:52:10.310 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:52:10.310 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:52:10.310 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:52:10.311 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:52:10.311 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:52:10.311 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:52:10.311 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:52:10.311 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:52:10.313 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:52:10.319 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:52:10.321 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:52:10 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:52:10.338 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:52:10.338 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:52:10.375 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:52:10.375 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:52:10.375 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:52:10.375 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:52:10.375 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.375 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:52:10.376 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.377 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:52:10.377 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:52:10.377 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:52:10.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:52:10.377 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:52:10.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:52:10.377 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:52:10.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:52:10.377 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:52:10.377 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:52:10.379 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:52:10.383 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:52:10 GMT] "GET /docs HTTP/1.1" 302 0 "-" "-"
2025-06-01 21:52:10.386 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:52:10.386 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:52:10.422 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:52:10.422 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:52:10.422 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:52:10.422 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:52:10.422 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.422 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.422 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:52:10.422 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.422 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:52:10.423 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:52:10.424 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:52:10.424 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:52:10.424 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:52:10.425 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:52:10.425 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:52:10.425 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.462 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:52:10.463 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:52:10.465 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:52:10.488 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:52:10 GMT] "GET /openapi.yaml HTTP/1.1" 200 10827 "-" "-"
2025-06-01 21:52:10.490 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:52:10.490 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:52:10.523 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:52:10.523 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:52:10.523 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:52:10.523 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:52:10.524 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:52:10.525 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:52:10.525 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:52:10.525 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:52:10.525 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:52:10.525 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:52:10.526 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:52:10.529 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:52:10.529 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:52:10.529 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 21:52:10.529 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 21:52:10.530 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 21:52:10.530 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:52:10.530 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:52:10.530 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:52:10.531 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:52:10 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 21:52:10.532 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:52:10.533 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:52:10.568 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:52:10.568 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:52:10.569 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:52:10.570 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:52:10.572 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:52:10.575 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:52:10.576 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:52:10 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:52:10.577 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:52:10.578 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:53:28.624 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:53:28.625 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:53:28.626 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:53:28.627 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:53:28.629 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:28.630 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:28.630 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:53:28.631 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:28.631 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:53:28.649 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:53:28.649 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:28.649 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:53:28.650 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:53:28.650 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:28.650 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:28.650 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:53:28.650 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:28.650 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:53:28.651 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:53:28.651 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:28.651 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:53:28.651 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:53:28.651 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:53:28.654 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:53:28.661 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:53:28.668 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:53:28.676 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:53:28.676 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:53:28.676 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:53:28.676 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:53:28.754 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:53:29.013 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:53:28 GMT] "GET /swagger-ui HTTP/1.1" 301 0 "-" "-"
2025-06-01 21:53:29.029 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:53:29.032 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:53:29.085 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:53:29.085 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:53:29.085 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:53:29.085 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:53:29.085 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.085 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.085 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:53:29.085 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.085 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:53:29.085 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.086 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:53:29.087 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:53:29.087 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:53:29.087 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:53:29.087 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:53:29.087 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:53:29.087 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:53:29.088 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:53:29.088 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:53:29.088 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:53:29.089 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:53:29.093 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 21:53:29.094 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 21:53:29.095 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 21:53:29.120 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 21:53:29.122 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 21:53:29.123 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:53:29.126 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:53:29.126 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:53:29.129 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:53:29 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 21:53:29.132 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:53:29.132 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:53:29.166 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.167 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:53:29.168 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:53:29.169 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:53:29.172 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:53:29.173 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:53:29 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:53:29.188 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:53:29.189 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:53:29.221 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:53:29.221 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:53:29.221 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:53:29.221 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:53:29.221 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.221 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.221 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:53:29.221 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.221 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:53:29.222 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:53:29.222 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.222 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:53:29.222 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:53:29.222 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.222 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:53:29.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.222 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:53:29.222 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:53:29.223 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:53:29.224 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:53:29.228 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:53:29 GMT] "GET /docs HTTP/1.1" 302 0 "-" "-"
2025-06-01 21:53:29.230 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:53:29.230 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:53:29.261 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:53:29.262 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:53:29.263 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:53:29.263 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:53:29.263 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:53:29.263 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:53:29.263 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:53:29.264 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:53:29.265 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:53:29.266 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:53:29.300 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:53:29.301 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.302 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:53:29.302 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:53:29.302 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.302 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:53:29.302 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:53:29.302 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:53:29.302 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:53:29.302 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:53:29.303 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:53:29.303 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:53:29.303 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:53:29.303 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:53:29.303 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:53:29.306 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:53:29.329 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:53:29 GMT] "GET /openapi.yaml HTTP/1.1" 200 10827 "-" "-"
2025-06-01 21:53:29.331 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:53:29.331 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:53:29.364 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:53:29.364 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:53:29.364 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:53:29.364 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:53:29.364 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.364 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.364 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:53:29.364 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.364 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:53:29.365 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:53:29.366 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:53:29.366 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:53:29.366 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:53:29.366 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:53:29.366 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:53:29.367 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:53:29.370 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:53:29.370 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:53:29.370 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 21:53:29.370 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 21:53:29.371 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 21:53:29.371 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:53:29.373 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:53:29.373 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:53:29.374 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:53:29 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 21:53:29.375 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:53:29.375 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:53:29.405 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:53:29.405 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:53:29.405 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:53:29.405 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:53:29.405 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.405 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.405 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:53:29.405 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.405 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:53:29.405 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:53:29.406 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:53:29.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:53:29.407 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:53:29.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:53:29.407 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:53:29.407 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:53:29.408 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:53:29.411 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:53:29.411 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:53:29 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:53:29.413 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:53:29.413 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:54:41.671 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:54:41.672 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:54:41.673 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:54:41.675 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:54:41.676 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:54:41.677 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:54:41.677 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:54:41.677 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:54:41.677 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:54:41.694 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:54:41.695 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:54:41.696 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:54:41.696 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:54:41.696 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:54:41.696 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:54:41.697 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:54:41.697 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:54:41.697 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:54:41.697 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:54:41.697 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:54:41.697 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:54:41.697 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:54:41.698 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:54:41.702 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:54:41.708 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:54:41.714 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:54:41.721 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:54:41.721 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:54:41.722 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:54:41.722 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:54:41.794 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:54:42.041 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:54:41 GMT] "GET /swagger-ui HTTP/1.1" 301 0 "-" "-"
2025-06-01 21:54:42.056 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:54:42.059 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:56:09.671 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:56:09.673 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:56:09.674 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:56:09.676 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:56:09.677 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:56:09.678 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:56:09.678 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:56:09.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:56:09.679 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:56:09.695 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:56:09.696 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:56:09.697 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:56:09.697 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:56:09.697 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:56:09.697 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:56:09.697 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:56:09.697 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:56:09.697 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:56:09.698 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:56:09.698 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:56:09.698 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:56:09.698 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:56:09.698 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:56:09.703 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:56:09.711 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:56:09.720 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:56:09.730 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:56:09.730 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:56:09.730 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:56:09.730 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:56:09.804 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:56:10.059 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:56:09 GMT] "GET /swagger-ui HTTP/1.1" 301 0 "-" "-"
2025-06-01 21:56:10.074 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:56:10.076 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:57:33.898 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:57:33.901 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:57:33.903 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:57:33.906 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:57:33.909 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:33.910 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:33.910 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:57:33.911 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:33.911 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:57:33.936 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:57:33.937 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:33.937 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:57:33.938 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:57:33.938 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:33.938 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:33.938 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:57:33.938 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:33.938 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:57:33.939 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:57:33.939 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:33.939 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:57:33.939 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:57:33.939 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:57:33.943 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:57:33.952 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:57:33.961 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:57:33.969 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:57:33.969 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:57:33.969 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:57:33.970 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:57:34.061 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:57:34.225 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:57:34 GMT] "GET /swagger-ui HTTP/1.1" 302 0 "-" "-"
2025-06-01 21:57:34.241 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:57:34.243 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:57:58.622 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:57:58.624 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:57:58.624 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:57:58.626 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:57:58.627 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:58.628 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:58.628 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:57:58.629 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:58.629 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:57:58.648 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:57:58.649 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:58.649 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:57:58.649 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:57:58.649 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:58.650 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:58.650 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:57:58.650 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:58.650 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:57:58.651 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:57:58.651 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:58.651 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:57:58.651 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:57:58.651 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:57:58.655 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:57:58.663 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:57:58.670 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:57:58.678 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:57:58.678 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:57:58.678 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:57:58.679 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:57:58.755 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:57:58.897 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:57:58 GMT] "GET /swagger-ui HTTP/1.1" 302 0 "-" "-"
2025-06-01 21:57:58.915 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:57:58.918 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:57:58.980 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:57:58.980 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:57:58.980 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:57:58.980 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:57:58.980 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:58.980 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:58.980 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:57:58.980 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:58.980 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:57:58.981 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:57:58.981 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:58.981 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:57:58.981 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:57:58.981 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:58.981 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:58.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:57:58.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:58.981 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:57:58.982 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:57:58.982 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:58.982 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:57:58.982 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:57:58.982 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:57:58.982 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:57:58.982 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:57:58.983 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:57:58.983 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:57:58.983 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:57:58.983 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:57:58.983 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:57:58.985 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:57:58.989 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id
2025-06-01 21:57:58.989 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id
2025-06-01 21:57:58.990 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-two: {"id":"test-id"}
2025-06-01 21:57:59.012 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-two: {"id":"test-id"}
2025-06-01 21:57:59.014 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-two: No handlers for address service.service-two
2025-06-01 21:57:59.014 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-two request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:57:59.018 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error calling service-two service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-two
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceTwoHandler.handleRequest(ServiceTwoHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:57:59.018 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceTwoHandler - Error handling request: Service unavailable: No handlers for address service.service-two
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-two
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:57:59.021 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:57:58 GMT] "GET /api/service-two/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 21:57:59.024 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:57:59.024 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:57:59.060 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:57:59.060 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:57:59.060 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:57:59.060 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:57:59.060 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.060 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.060 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:57:59.060 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.060 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:57:59.061 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:57:59.062 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:57:59.062 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:57:59.062 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:57:59.062 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:57:59.062 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:57:59.063 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:57:59.066 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:57:59.067 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:57:59 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:57:59.083 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:57:59.084 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:57:59.117 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:57:59.117 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:57:59.117 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:57:59.117 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:57:59.117 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.117 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.117 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:57:59.117 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.117 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:57:59.118 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:57:59.119 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:57:59.119 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:57:59.119 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:57:59.119 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:57:59.119 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:57:59.120 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:57:59.123 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:57:59 GMT] "GET /docs HTTP/1.1" 302 0 "-" "-"
2025-06-01 21:57:59.125 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:57:59.125 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:57:59.158 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:57:59.158 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:57:59.158 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:57:59.158 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:57:59.158 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.158 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.158 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:57:59.158 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.158 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:57:59.159 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:57:59.159 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.159 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:57:59.159 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:57:59.159 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.159 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.159 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:57:59.159 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.159 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:57:59.160 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:57:59.161 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:57:59.162 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.198 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:57:59.199 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.199 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:57:59.199 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:57:59.199 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.199 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:57:59.199 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:57:59.199 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:57:59.199 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:57:59.199 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:57:59.199 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:57:59.200 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:57:59.200 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:57:59.200 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:57:59.200 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:57:59.201 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:57:59.224 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:57:59 GMT] "GET /openapi.yaml HTTP/1.1" 200 10827 "-" "-"
2025-06-01 21:57:59.225 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:57:59.225 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.258 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:57:59.259 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:57:59.259 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.259 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:57:59.259 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:57:59.259 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:57:59.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:57:59.259 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:57:59.259 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:57:59.259 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:57:59.260 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:57:59.260 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:57:59.260 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:57:59.261 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:57:59.263 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:57:59.263 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:57:59.264 [vert.x-eventloop-thread-0] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.service-one: {"id":"test-id"}
2025-06-01 21:57:59.264 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.service-one: {"id":"test-id"}
2025-06-01 21:57:59.264 [vert.x-eventloop-thread-0] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.service-one: No handlers for address service.service-one
2025-06-01 21:57:59.264 [vert.x-eventloop-thread-0] ERROR d.m.v.g.service.MicroserviceClient - Service service.service-one request failed
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:57:59.264 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: No handlers for address service.service-one
	at io.vertx.core.eventbus.impl.EventBusImpl.deliverMessageLocally(EventBusImpl.java:384)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendLocally(EventBusImpl.java:341)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPub(EventBusImpl.java:329)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.execute(OutboundDeliveryContext.java:109)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.OutboundDeliveryContext.next(OutboundDeliveryContext.java:28)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:422)
	at io.vertx.core.eventbus.impl.EventBusImpl.sendOrPubInternal(EventBusImpl.java:428)
	at io.vertx.core.eventbus.impl.EventBusImpl.request(EventBusImpl.java:127)
	at io.vertx.core.eventbus.EventBus.request(EventBus.java:106)
	at dev.mars.vertx.common.eventbus.EventBusService.lambda$send$0(EventBusService.java:65)
	at io.vertx.core.Future.future(Future.java:194)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:64)
	at dev.mars.vertx.common.eventbus.EventBusService.send(EventBusService.java:46)
	at dev.mars.vertx.gateway.service.MicroserviceClient.lambda$sendRequest$0(MicroserviceClient.java:47)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeOperation(CircuitBreakerImpl.java:410)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeAndReportWithFallback(CircuitBreakerImpl.java:255)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.executeWithFallback(CircuitBreakerImpl.java:426)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.execute(CircuitBreakerImpl.java:431)
	at dev.mars.vertx.gateway.service.MicroserviceClient.sendRequest(MicroserviceClient.java:46)
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.handleRequest(ServiceRequestHandler.java:35)
	at dev.mars.vertx.gateway.handler.ServiceOneHandler.handleRequest(ServiceOneHandler.java:28)
	at dev.mars.vertx.gateway.handler.AbstractRequestHandler.handle(AbstractRequestHandler.java:18)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:95)
	at io.vertx.ext.web.handler.impl.BodyHandlerImpl.handle(BodyHandlerImpl.java:45)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:39)
	at io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl.handle(ResponseTimeHandlerImpl.java:28)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:189)
	at io.vertx.ext.web.handler.impl.LoggerHandlerImpl.handle(LoggerHandlerImpl.java:48)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:204)
	at io.vertx.ext.web.handler.impl.CorsHandlerImpl.handle(CorsHandlerImpl.java:41)
	at io.vertx.ext.web.impl.RouteState.handleContext(RouteState.java:1286)
	at io.vertx.ext.web.impl.RoutingContextImplBase.iterateNext(RoutingContextImplBase.java:177)
	at io.vertx.ext.web.impl.RoutingContextImpl.next(RoutingContextImpl.java:144)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:68)
	at io.vertx.ext.web.impl.RouterImpl.handle(RouterImpl.java:37)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:67)
	at io.vertx.core.http.impl.Http1xServerRequestHandler.handle(Http1xServerRequestHandler.java:30)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.DuplicatedContext.emit(DuplicatedContext.java:179)
	at io.vertx.core.http.impl.Http1xServerConnection.handleMessage(Http1xServerConnection.java:174)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.onHttpRequestChannelRead(WebSocketServerExtensionHandler.java:160)
	at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:83)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xUpgradeToH2CHandler.channelRead(Http1xUpgradeToH2CHandler.java:124)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.end(Http1xOrH2CHandler.java:61)
	at io.vertx.core.http.impl.Http1xOrH2CHandler.channelRead(Http1xOrH2CHandler.java:38)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:57:59.264 [vert.x-eventloop-thread-0] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: No handlers for address service.service-one
java.lang.RuntimeException: Service unavailable: No handlers for address service.service-one
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:57:59.265 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:57:59 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 144 "-" "-"
2025-06-01 21:57:59.266 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:57:59.266 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:57:59.296 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:57:59.296 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:57:59.296 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:57:59.296 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:57:59.296 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.296 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.296 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:57:59.296 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.296 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-one
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.service-two
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:57:59.297 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:57:59.298 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:57:59.298 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:57:59.298 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:57:59.298 [vert.x-eventloop-thread-0] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:57:59.298 [vert.x-eventloop-thread-0] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:57:59.299 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8888
2025-06-01 21:57:59.302 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:57:59.303 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:57:59 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:57:59.304 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:57:59.304 [vert.x-eventloop-thread-0] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:58:11.806 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:58:11.808 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:58:11.808 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:11.810 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:58:11.812 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:11.812 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:11.812 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:58:11.813 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:11.813 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:58:11.830 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:58:11.831 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:11.831 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:58:11.832 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:58:11.832 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:11.832 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:11.832 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:58:11.832 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:11.832 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:58:11.832 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:58:11.832 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:11.833 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:58:11.833 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:11.833 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:11.837 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:11.844 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:58:11.850 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:11.859 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:11.859 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:11.859 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:11.859 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:11.928 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:58:11.929 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:58:12.058 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling Service Two request: /api/service-two/test-id-2
2025-06-01 21:58:12.058 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Handling service-two service request: /api/service-two/test-id-2
2025-06-01 21:58:12.059 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.two: {"id":"test-id-2"}
2025-06-01 21:58:12.082 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.two: {"id":"test-id-2"}
2025-06-01 21:58:12.085 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:58:12.085 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.two: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:58:12.086 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceTwoHandler - Received response from service-two service: {"id":"test-id-2","name":"Test Item 2","description":"Test Description 2"}
2025-06-01 21:58:12.090 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:12 GMT] "GET /api/service-two/test-id-2 HTTP/1.1" 200 74 "-" "-"
2025-06-01 21:58:12.122 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:58:12.123 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:58:12.185 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:58:12.185 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:58:12.185 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:12.185 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:58:12.185 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:12.185 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:12.185 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:58:12.185 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:12.185 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:12.186 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:58:12.187 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:12.187 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:12.187 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:12.187 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:12.187 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:12.188 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:58:12.188 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:58:12.191 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.HealthCheckHandler - Handling health check request
2025-06-01 21:58:12.192 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:12 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:58:12.195 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:58:12.195 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:58:12.230 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:58:12.230 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:58:12.230 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:12.230 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:58:12.230 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:12.230 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:12.230 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:58:12.230 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:12.230 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:12.231 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:58:12.232 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:12.232 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:12.232 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:12.232 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:12.232 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:12.233 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:58:12.233 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:58:12.236 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:58:12.236 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:58:12.236 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:58:12.237 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:58:12.237 [vert.x-eventloop-thread-4] ERROR d.m.v.c.eventbus.EventBusService - Error sending message to service.one: Service unavailable
2025-06-01 21:58:12.237 [vert.x-eventloop-thread-4] ERROR d.m.v.g.service.MicroserviceClient - Service service.one request failed
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:58:12.239 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error calling service-one service
io.vertx.core.eventbus.ReplyException: Service unavailable
	at io.vertx.core.eventbus.Message.fail(Message.java:141)
	at dev.mars.vertx.gateway.integration.IntegrationTest$MockServiceVerticle.lambda$start$0(IntegrationTest.java:328)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.dispatch(MessageConsumerImpl.java:177)
	at io.vertx.core.eventbus.impl.HandlerRegistration$InboundDeliveryContext.execute(HandlerRegistration.java:137)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.next(DeliveryContextBase.java:80)
	at io.vertx.core.eventbus.impl.DeliveryContextBase.dispatch(DeliveryContextBase.java:43)
	at io.vertx.core.eventbus.impl.HandlerRegistration.dispatch(HandlerRegistration.java:98)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.deliver(MessageConsumerImpl.java:183)
	at io.vertx.core.eventbus.impl.MessageConsumerImpl.doReceive(MessageConsumerImpl.java:168)
	at io.vertx.core.eventbus.impl.HandlerRegistration.lambda$receive$0(HandlerRegistration.java:49)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:58:12.240 [vert.x-eventloop-thread-4] ERROR d.m.v.g.handler.ServiceOneHandler - Error handling request: Service unavailable: Service unavailable
java.lang.RuntimeException: Service unavailable: Service unavailable
	at dev.mars.vertx.gateway.handler.ServiceRequestHandler.lambda$handleRequest$1(ServiceRequestHandler.java:42)
	at io.vertx.core.impl.future.FutureImpl$2.onFailure(FutureImpl.java:117)
	at io.vertx.core.impl.future.FutureImpl$ListenerArray.onFailure(FutureImpl.java:268)
	at io.vertx.core.impl.future.FutureBase.emitFailure(FutureBase.java:75)
	at io.vertx.core.impl.future.FutureImpl.tryFail(FutureImpl.java:230)
	at io.vertx.core.impl.future.PromiseImpl.tryFail(PromiseImpl.java:23)
	at io.vertx.core.Promise.fail(Promise.java:89)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.invokeFallback(CircuitBreakerImpl.java:356)
	at io.vertx.circuitbreaker.impl.CircuitBreakerImpl.lambda$null$4(CircuitBreakerImpl.java:237)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:277)
	at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:259)
	at io.vertx.core.impl.EventLoopContext.lambda$runOnContext$0(EventLoopContext.java:43)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:58:12.240 [vert.x-eventloop-thread-4] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:12 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 120 "-" "-"
2025-06-01 21:58:12.241 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:58:12.242 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:58:12.276 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:58:12.276 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:58:12.276 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:12.276 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:58:12.276 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:12.276 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:12.276 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:58:12.276 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:12.276 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:12.277 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:58:12.278 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:12.278 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:12.278 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:12.278 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:12.278 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:12.279 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:58:12.280 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:58:12.286 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one
2025-06-01 21:58:12.287 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one
2025-06-01 21:58:12.287 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"name":"New Item","description":"New Description"}
2025-06-01 21:58:12.287 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"name":"New Item","description":"New Description"}
2025-06-01 21:58:12.287 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 21:58:12.287 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 21:58:12.287 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"new-id","name":"New Item","description":"New Description"}
2025-06-01 21:58:12.288 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:12 GMT] "POST /api/service-one HTTP/1.1" 200 65 "-" "-"
2025-06-01 21:58:12.289 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:58:12.289 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:12.323 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:12.324 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:12.325 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:58:12.326 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:58:12.328 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling Service One request: /api/service-one/test-id
2025-06-01 21:58:12.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Handling service-one service request: /api/service-one/test-id
2025-06-01 21:58:12.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Sending request to service service.one: {"id":"test-id"}
2025-06-01 21:58:12.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Sending message to service.one: {"id":"test-id"}
2025-06-01 21:58:12.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.eventbus.EventBusService - Received reply from service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:58:12.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.service.MicroserviceClient - Received response from service service.one: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:58:12.329 [vert.x-eventloop-thread-4] DEBUG d.m.v.g.handler.ServiceOneHandler - Received response from service-one service: {"id":"test-id","name":"Test Item","description":"Test Description"}
2025-06-01 21:58:12.330 [vert.x-eventloop-thread-4] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:12 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 68 "-" "-"
2025-06-01 21:58:12.331 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:58:12.331 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:58:12.366 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Starting API Gateway Verticle
2025-06-01 21:58:12.366 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Created MicroserviceClientFactory
2025-06-01 21:58:12.366 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:12.366 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-one
2025-06-01 21:58:12.366 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-one with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:12.366 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-one (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:12.366 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-one
2025-06-01 21:58:12.366 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:12.366 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-one
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-one created successfully
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.one
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating client for service: service-two
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.g.s.MicroserviceClientFactory - Creating circuit breaker for service service-two with options: maxFailures=5, timeout=10000, resetTimeout=30000
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker: service-two (maxFailures=5, timeout=10000ms, resetTimeout=30000ms)
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Configuring circuit breaker options for: service-two
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Circuit breaker options configured
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] DEBUG d.m.v.c.r.CircuitBreakerFactory - Creating circuit breaker instance: service-two
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.c.r.CircuitBreakerFactory - Circuit breaker service-two created successfully
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.c.eventbus.EventBusService - EventBusService initialized
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.g.service.MicroserviceClient - Created microservice client for address: service.two
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 6 headers, 5 methods
2025-06-01 21:58:12.367 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:12.368 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:12.368 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:12.368 [vert.x-eventloop-thread-4] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:12.368 [vert.x-eventloop-thread-4] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:12.369 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server started on port 8889
2025-06-01 21:58:12.369 [vert.x-eventloop-thread-3] INFO  d.m.v.g.integration.IntegrationTest - API Gateway and mock services deployed successfully
2025-06-01 21:58:12.372 [vert.x-eventloop-thread-4] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:58:12.372 [vert.x-eventloop-thread-4] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:12 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:58:12.374 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - Stopping API Gateway Verticle
2025-06-01 21:58:12.374 [vert.x-eventloop-thread-4] INFO  d.m.vertx.gateway.ApiGatewayVerticle - HTTP server closed successfully
2025-06-01 21:58:32.535 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:32.536 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:32.536 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:32.539 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:32.548 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:58:32.558 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:32.569 [main] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:32.570 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:32.570 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:32.570 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:32.828 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:32 GMT] "GET /api/service-two/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 21:58:32.920 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:32.920 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:32.920 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:32.920 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:32.921 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:58:32.921 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:32.921 [main] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:32.921 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:32.921 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:32.921 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:32.935 [vert.x-eventloop-thread-0] ERROR io.vertx.core.impl.ContextBase - Unhandled exception
java.lang.NullPointerException: Cannot invoke "io.vertx.core.impl.future.FutureInternal.addListener(io.vertx.core.impl.future.Listener)" because "future" is null
	at io.vertx.core.impl.future.Composition.onSuccess(Composition.java:43)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.Composition$1.onSuccess(Composition.java:62)
	at io.vertx.core.impl.future.FutureBase.emitSuccess(FutureBase.java:60)
	at io.vertx.core.impl.future.FutureImpl.tryComplete(FutureImpl.java:211)
	at io.vertx.core.impl.future.PromiseImpl.tryComplete(PromiseImpl.java:23)
	at io.vertx.core.Promise.complete(Promise.java:66)
	at io.vertx.core.http.impl.HttpClientRequestImpl.handleResponse(HttpClientRequestImpl.java:369)
	at io.vertx.core.http.impl.HttpClientRequestBase.handleResponse(HttpClientRequestBase.java:200)
	at io.vertx.core.http.impl.HttpClientRequestBase.lambda$new$0(HttpClientRequestBase.java:70)
	at io.vertx.core.impl.EventLoopContext.emit(EventLoopContext.java:55)
	at io.vertx.core.impl.ContextBase.emit(ContextBase.java:297)
	at io.vertx.core.http.impl.Http1xClientConnection$StreamImpl.handleHead(Http1xClientConnection.java:691)
	at io.vertx.core.http.impl.Http1xClientConnection.handleResponseBegin(Http1xClientConnection.java:850)
	at io.vertx.core.http.impl.Http1xClientConnection.handleHttpMessage(Http1xClientConnection.java:805)
	at io.vertx.core.http.impl.Http1xClientConnection.handleMessage(Http1xClientConnection.java:780)
	at io.vertx.core.net.impl.ConnectionBase.read(ConnectionBase.java:159)
	at io.vertx.core.net.impl.VertxHandler.channelRead(VertxHandler.java:153)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-06-01 21:58:32.974 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:32.975 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:32.975 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:32.975 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:32.975 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:58:32.975 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:32.975 [main] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:32.975 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:32.975 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:32.975 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:32.982 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:32 GMT] "GET /health HTTP/1.1" 200 41 "-" "-"
2025-06-01 21:58:33.017 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:33.017 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:33.017 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:33.017 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:33.017 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:58:33.017 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:33.017 [main] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:33.017 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:33.017 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:33.017 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:33.021 [vert.x-eventloop-thread-0] WARN  d.m.v.gateway.router.RouterFactory - Route not found: /non-existent
2025-06-01 21:58:33.022 [vert.x-eventloop-thread-0] WARN  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:33 GMT] "GET /non-existent HTTP/1.1" 404 87 "-" "-"
2025-06-01 21:58:33.055 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:33.056 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:33.056 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:33.056 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:33.056 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:58:33.056 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:33.056 [main] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:33.056 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:33.056 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:33.056 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:33.061 [vert.x-eventloop-thread-0] INFO  i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:33 GMT] "GET /api/service-one/test-id HTTP/1.1" 200 40 "-" "-"
2025-06-01 21:58:33.100 [main] INFO  d.m.v.gateway.router.RouterFactory - Created RouterFactory
2025-06-01 21:58:33.100 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router using OpenAPI specification
2025-06-01 21:58:33.100 [main] INFO  d.m.v.gateway.router.RouterFactory - Creating router without OpenAPI specification
2025-06-01 21:58:33.100 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring CORS
2025-06-01 21:58:33.100 [main] INFO  d.m.v.gateway.router.RouterFactory - CORS configured with origin: *, 7 headers, 6 methods
2025-06-01 21:58:33.100 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring Swagger UI
2025-06-01 21:58:33.100 [main] INFO  d.m.v.gateway.router.RouterFactory - Swagger UI configured successfully
2025-06-01 21:58:33.100 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring fallback handler
2025-06-01 21:58:33.101 [main] DEBUG d.m.v.gateway.router.RouterFactory - Configuring error handler
2025-06-01 21:58:33.101 [main] INFO  d.m.v.gateway.router.RouterFactory - Router created successfully without OpenAPI specification
2025-06-01 21:58:33.105 [vert.x-eventloop-thread-0] ERROR d.m.v.gateway.router.RouterFactory - Request failed with status code 500: Test error
2025-06-01 21:58:33.106 [vert.x-eventloop-thread-0] ERROR i.v.e.w.h.impl.LoggerHandlerImpl - 127.0.0.1 - - [Sun, 1 Jun 2025 13:58:33 GMT] "GET /api/service-one/test-id HTTP/1.1" 500 90 "-" "-"
